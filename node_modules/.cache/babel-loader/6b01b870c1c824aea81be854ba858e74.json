{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar tslib = require('tslib');\n\nvar React = require('react');\n\nvar heyListen = require('hey-listen');\n\nvar sync = require('framesync');\n\nvar popmotion = require('popmotion');\n\nvar styleValueTypes = require('style-value-types');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n/**\n * Browser-safe usage of process\n */\n\n\nvar defaultEnvironment = \"production\";\nvar env = typeof process === \"undefined\" || process.env === undefined ? defaultEnvironment : process.env.NODE_ENV || defaultEnvironment;\n\nvar createDefinition = function (propNames) {\n  return {\n    isEnabled: function (props) {\n      return propNames.some(function (name) {\n        return !!props[name];\n      });\n    }\n  };\n};\n\nvar featureDefinitions = {\n  measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n  animation: createDefinition([\"animate\", \"exit\", \"variants\", \"whileHover\", \"whileTap\", \"whileFocus\", \"whileDrag\", \"whileInView\"]),\n  exit: createDefinition([\"exit\"]),\n  drag: createDefinition([\"drag\", \"dragControls\"]),\n  focus: createDefinition([\"whileFocus\"]),\n  hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n  tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n  pan: createDefinition([\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"]),\n  inView: createDefinition([\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"])\n};\n\nfunction loadFeatures(features) {\n  for (var key in features) {\n    if (features[key] === null) continue;\n\n    if (key === \"projectionNodeConstructor\") {\n      featureDefinitions.projectionNodeConstructor = features[key];\n    } else {\n      featureDefinitions[key].Component = features[key];\n    }\n  }\n}\n\nvar LazyContext = React.createContext({\n  strict: false\n});\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\n\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n  var features = [];\n  var lazyContext = React.useContext(LazyContext);\n  if (!visualElement) return null;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n\n  if (env !== \"production\" && preloadedFeatures && lazyContext.strict) {\n    heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n  }\n\n  for (var i = 0; i < numFeatures; i++) {\n    var name_1 = featureNames[i];\n    var _a = featureDefinitions[name_1],\n        isEnabled = _a.isEnabled,\n        Component = _a.Component;\n    /**\n     * It might be possible in the future to use this moment to\n     * dynamically request functionality. In initial tests this\n     * was producing a lot of duplication amongst bundles.\n     */\n\n    if (isEnabled(props) && Component) {\n      features.push(React__namespace.createElement(Component, tslib.__assign({\n        key: name_1\n      }, props, {\n        visualElement: visualElement\n      })));\n    }\n  }\n\n  return features;\n}\n/**\n * @public\n */\n\n\nvar MotionConfigContext = React.createContext({\n  transformPagePoint: function (p) {\n    return p;\n  },\n  isStatic: false,\n  reducedMotion: \"never\"\n});\nvar MotionContext = React.createContext({});\n\nfunction useVisualElementContext() {\n  return React.useContext(MotionContext).visualElement;\n}\n/**\n * @public\n */\n\n\nvar PresenceContext = React.createContext(null);\nvar isBrowser = typeof document !== \"undefined\";\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect; // Does this device prefer reduced motion? Returns `null` server-side.\n\nvar prefersReducedMotion = {\n  current: null\n};\nvar hasDetected = false;\n\nfunction initPrefersReducedMotion() {\n  hasDetected = true;\n  if (!isBrowser) return;\n\n  if (window.matchMedia) {\n    var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n\n    var setReducedMotionPreferences = function () {\n      return prefersReducedMotion.current = motionMediaQuery_1.matches;\n    };\n\n    motionMediaQuery_1.addListener(setReducedMotionPreferences);\n    setReducedMotionPreferences();\n  } else {\n    prefersReducedMotion.current = false;\n  }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\n\n\nfunction useReducedMotion() {\n  /**\n   * Lazy initialisation of prefersReducedMotion\n   */\n  !hasDetected && initPrefersReducedMotion();\n\n  var _a = tslib.__read(React.useState(prefersReducedMotion.current), 1),\n      shouldReduceMotion = _a[0];\n  /**\n   * TODO See if people miss automatically updating shouldReduceMotion setting\n   */\n\n\n  return shouldReduceMotion;\n}\n\nfunction useReducedMotionConfig() {\n  var reducedMotionPreference = useReducedMotion();\n  var reducedMotion = React.useContext(MotionConfigContext).reducedMotion;\n\n  if (reducedMotion === \"never\") {\n    return false;\n  } else if (reducedMotion === \"always\") {\n    return true;\n  } else {\n    return reducedMotionPreference;\n  }\n}\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n  var lazyContext = React.useContext(LazyContext);\n  var parent = useVisualElementContext();\n  var presenceContext = React.useContext(PresenceContext);\n  var shouldReduceMotion = useReducedMotionConfig();\n  var visualElementRef = React.useRef(undefined);\n  /**\n   * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n   */\n\n  if (!createVisualElement) createVisualElement = lazyContext.renderer;\n\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component, {\n      visualState: visualState,\n      parent: parent,\n      props: props,\n      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n      shouldReduceMotion: shouldReduceMotion\n    });\n  }\n\n  var visualElement = visualElementRef.current;\n  useIsomorphicLayoutEffect(function () {\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n  });\n  React.useEffect(function () {\n    var _a;\n\n    (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n  });\n  useIsomorphicLayoutEffect(function () {\n    return function () {\n      return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount();\n    };\n  }, []);\n  return visualElement;\n}\n\nfunction isRefObject(ref) {\n  return typeof ref === \"object\" && Object.prototype.hasOwnProperty.call(ref, \"current\");\n}\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\n\n\nfunction useMotionRef(visualState, visualElement, externalRef) {\n  return React.useCallback(function (instance) {\n    var _a;\n\n    instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n\n    if (visualElement) {\n      instance ? visualElement.mount(instance) : visualElement.unmount();\n    }\n\n    if (externalRef) {\n      if (typeof externalRef === \"function\") {\n        externalRef(instance);\n      } else if (isRefObject(externalRef)) {\n        externalRef.current = instance;\n      }\n    }\n  },\n  /**\n   * Only pass a new ref callback to React if we've received a visual element\n   * factory. Otherwise we'll be mounting/remounting every time externalRef\n   * or other dependencies change.\n   */\n  [visualElement]);\n}\n/**\n * Decides if the supplied variable is an array of variant labels\n */\n\n\nfunction isVariantLabels(v) {\n  return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\n\n\nfunction isVariantLabel(v) {\n  return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\n\n\nfunction getCurrent(visualElement) {\n  var current = {};\n  visualElement.forEachValue(function (value, key) {\n    return current[key] = value.get();\n  });\n  return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\n\n\nfunction getVelocity$1(visualElement) {\n  var velocity = {};\n  visualElement.forEachValue(function (value, key) {\n    return velocity[key] = value.getVelocity();\n  });\n  return velocity;\n}\n\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n  var _a;\n\n  if (currentValues === void 0) {\n    currentValues = {};\n  }\n\n  if (currentVelocity === void 0) {\n    currentVelocity = {};\n  }\n  /**\n   * If the variant definition is a function, resolve.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n  }\n  /**\n   * If the variant definition is a variant label, or\n   * the function returned a variant label, resolve.\n   */\n\n\n  if (typeof definition === \"string\") {\n    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n  }\n  /**\n   * At this point we've resolved both functions and variant labels,\n   * but the resolved variant label might itself have been a function.\n   * If so, resolve. This can only have returned a valid target object.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n  }\n\n  return definition;\n}\n\nfunction resolveVariant(visualElement, definition, custom) {\n  var props = visualElement.getProps();\n  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\n\nfunction checkIfControllingVariants(props) {\n  var _a;\n\n  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);\n}\n\nfunction checkIfVariantNode(props) {\n  return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n  if (checkIfControllingVariants(props)) {\n    var initial = props.initial,\n        animate = props.animate;\n    return {\n      initial: initial === false || isVariantLabel(initial) ? initial : undefined,\n      animate: isVariantLabel(animate) ? animate : undefined\n    };\n  }\n\n  return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n  var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)),\n      initial = _a.initial,\n      animate = _a.animate;\n\n  return React.useMemo(function () {\n    return {\n      initial: initial,\n      animate: animate\n    };\n  }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\n\nfunction variantLabelsAsDependency(prop) {\n  return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\n\n\nfunction useConstant(init) {\n  var ref = React.useRef(null);\n\n  if (ref.current === null) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nfunction addUniqueItem(arr, item) {\n  arr.indexOf(item) === -1 && arr.push(item);\n}\n\nfunction removeItem(arr, item) {\n  var index = arr.indexOf(item);\n  index > -1 && arr.splice(index, 1);\n} // Adapted from array-move\n\n\nfunction moveItem(_a, fromIndex, toIndex) {\n  var _b = tslib.__read(_a),\n      arr = _b.slice(0);\n\n  var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n\n  if (startIndex >= 0 && startIndex < arr.length) {\n    var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n\n    var _c = tslib.__read(arr.splice(fromIndex, 1), 1),\n        item = _c[0];\n\n    arr.splice(endIndex, 0, item);\n  }\n\n  return arr;\n}\n\nvar SubscriptionManager =\n/** @class */\nfunction () {\n  function SubscriptionManager() {\n    this.subscriptions = [];\n  }\n\n  SubscriptionManager.prototype.add = function (handler) {\n    var _this = this;\n\n    addUniqueItem(this.subscriptions, handler);\n    return function () {\n      return removeItem(_this.subscriptions, handler);\n    };\n  };\n\n  SubscriptionManager.prototype.notify = function (a, b, c) {\n    var numSubscriptions = this.subscriptions.length;\n    if (!numSubscriptions) return;\n\n    if (numSubscriptions === 1) {\n      /**\n       * If there's only a single handler we can just call it without invoking a loop.\n       */\n      this.subscriptions[0](a, b, c);\n    } else {\n      for (var i = 0; i < numSubscriptions; i++) {\n        /**\n         * Check whether the handler exists before firing as it's possible\n         * the subscriptions were modified during this loop running.\n         */\n        var handler = this.subscriptions[i];\n        handler && handler(a, b, c);\n      }\n    }\n  };\n\n  SubscriptionManager.prototype.getSize = function () {\n    return this.subscriptions.length;\n  };\n\n  SubscriptionManager.prototype.clear = function () {\n    this.subscriptions.length = 0;\n  };\n\n  return SubscriptionManager;\n}();\n\nvar isFloat = function (value) {\n  return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\n\n\nvar MotionValue =\n/** @class */\nfunction () {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   *\n   * -  `transformer`: A function to transform incoming values with.\n   *\n   * @internal\n   */\n  function MotionValue(init) {\n    var _this = this;\n    /**\n     * This will be replaced by the build step with the latest version number.\n     * When MotionValues are provided to motion components, warn if versions are mixed.\n     */\n\n\n    this.version = \"6.3.16\";\n    /**\n     * Duration, in milliseconds, since last updating frame.\n     *\n     * @internal\n     */\n\n    this.timeDelta = 0;\n    /**\n     * Timestamp of the last time this `MotionValue` was updated.\n     *\n     * @internal\n     */\n\n    this.lastUpdated = 0;\n    /**\n     * Functions to notify when the `MotionValue` updates.\n     *\n     * @internal\n     */\n\n    this.updateSubscribers = new SubscriptionManager();\n    /**\n     * Functions to notify when the velocity updates.\n     *\n     * @internal\n     */\n\n    this.velocityUpdateSubscribers = new SubscriptionManager();\n    /**\n     * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n     *\n     * @internal\n     */\n\n    this.renderSubscribers = new SubscriptionManager();\n    /**\n     * Tracks whether this value can output a velocity. Currently this is only true\n     * if the value is numerical, but we might be able to widen the scope here and support\n     * other value types.\n     *\n     * @internal\n     */\n\n    this.canTrackVelocity = false;\n\n    this.updateAndNotify = function (v, render) {\n      if (render === void 0) {\n        render = true;\n      }\n\n      _this.prev = _this.current;\n      _this.current = v; // Update timestamp\n\n      var _a = sync.getFrameData(),\n          delta = _a.delta,\n          timestamp = _a.timestamp;\n\n      if (_this.lastUpdated !== timestamp) {\n        _this.timeDelta = delta;\n        _this.lastUpdated = timestamp;\n        sync__default[\"default\"].postRender(_this.scheduleVelocityCheck);\n      } // Update update subscribers\n\n\n      if (_this.prev !== _this.current) {\n        _this.updateSubscribers.notify(_this.current);\n      } // Update velocity subscribers\n\n\n      if (_this.velocityUpdateSubscribers.getSize()) {\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      } // Update render subscribers\n\n\n      if (render) {\n        _this.renderSubscribers.notify(_this.current);\n      }\n    };\n    /**\n     * Schedule a velocity check for the next frame.\n     *\n     * This is an instanced and bound function to prevent generating a new\n     * function once per frame.\n     *\n     * @internal\n     */\n\n\n    this.scheduleVelocityCheck = function () {\n      return sync__default[\"default\"].postRender(_this.velocityCheck);\n    };\n    /**\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\n     * This ensures velocity calculations return `0`.\n     *\n     * This is an instanced and bound function to prevent generating a new\n     * function once per frame.\n     *\n     * @internal\n     */\n\n\n    this.velocityCheck = function (_a) {\n      var timestamp = _a.timestamp;\n\n      if (timestamp !== _this.lastUpdated) {\n        _this.prev = _this.current;\n\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      }\n    };\n\n    this.hasAnimated = false;\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   *\n   * When calling `onChange` inside a React component, it should be wrapped with the\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\n   *\n   * ```jsx\n   * export const MyComponent = () => {\n   *   const x = useMotionValue(0)\n   *   const y = useMotionValue(0)\n   *   const opacity = useMotionValue(1)\n   *\n   *   useEffect(() => {\n   *     function updateOpacity() {\n   *       const maxXY = Math.max(x.get(), y.get())\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n   *       opacity.set(newOpacity)\n   *     }\n   *\n   *     const unsubscribeX = x.onChange(updateOpacity)\n   *     const unsubscribeY = y.onChange(updateOpacity)\n   *\n   *     return () => {\n   *       unsubscribeX()\n   *       unsubscribeY()\n   *     }\n   *   }, [])\n   *\n   *   return <motion.div style={{ x }} />\n   * }\n   * ```\n   *\n   * @privateRemarks\n   *\n   * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n   *\n   * ```jsx\n   * useOnChange(x, () => {})\n   * ```\n   *\n   * @param subscriber - A function that receives the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.onChange = function (subscription) {\n    return this.updateSubscribers.add(subscription);\n  };\n\n  MotionValue.prototype.clearListeners = function () {\n    this.updateSubscribers.clear();\n  };\n  /**\n   * Adds a function that will be notified when the `MotionValue` requests a render.\n   *\n   * @param subscriber - A function that's provided the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @internal\n   */\n\n\n  MotionValue.prototype.onRenderRequest = function (subscription) {\n    // Render immediately\n    subscription(this.get());\n    return this.renderSubscribers.add(subscription);\n  };\n  /**\n   * Attaches a passive effect to the `MotionValue`.\n   *\n   * @internal\n   */\n\n\n  MotionValue.prototype.attach = function (passiveEffect) {\n    this.passiveEffect = passiveEffect;\n  };\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @remarks\n   *\n   * ```jsx\n   * const x = useMotionValue(0)\n   * x.set(10)\n   * ```\n   *\n   * @param latest - Latest value to set.\n   * @param render - Whether to notify render subscribers. Defaults to `true`\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.set = function (v, render) {\n    if (render === void 0) {\n      render = true;\n    }\n\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  };\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.get = function () {\n    return this.current;\n  };\n  /**\n   * @public\n   */\n\n\n  MotionValue.prototype.getPrevious = function () {\n    return this.prev;\n  };\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.getVelocity = function () {\n    // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n    return this.canTrackVelocity ? // These casts could be avoided if parseFloat would be typed better\n    popmotion.velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  };\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   *\n   * ```jsx\n   * value.start()\n   * ```\n   *\n   * @param animation - A function that starts the provided animation\n   *\n   * @internal\n   */\n\n\n  MotionValue.prototype.start = function (animation) {\n    var _this = this;\n\n    this.stop();\n    return new Promise(function (resolve) {\n      _this.hasAnimated = true;\n      _this.stopAnimation = animation(resolve);\n    }).then(function () {\n      return _this.clearAnimation();\n    });\n  };\n  /**\n   * Stop the currently active animation.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.stop = function () {\n    if (this.stopAnimation) this.stopAnimation();\n    this.clearAnimation();\n  };\n  /**\n   * Returns `true` if this value is currently animating.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.isAnimating = function () {\n    return !!this.stopAnimation;\n  };\n\n  MotionValue.prototype.clearAnimation = function () {\n    this.stopAnimation = null;\n  };\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   *\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n   * created a `MotionValue` via the `motionValue` function.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.destroy = function () {\n    this.updateSubscribers.clear();\n    this.renderSubscribers.clear();\n    this.stop();\n  };\n\n  return MotionValue;\n}();\n\nfunction motionValue(init) {\n  return new MotionValue(init);\n}\n\nvar isMotionValue = function (value) {\n  return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n\n\nvar secondsToMilliseconds = function (seconds) {\n  return seconds * 1000;\n};\n\nvar easingLookup = {\n  linear: popmotion.linear,\n  easeIn: popmotion.easeIn,\n  easeInOut: popmotion.easeInOut,\n  easeOut: popmotion.easeOut,\n  circIn: popmotion.circIn,\n  circInOut: popmotion.circInOut,\n  circOut: popmotion.circOut,\n  backIn: popmotion.backIn,\n  backInOut: popmotion.backInOut,\n  backOut: popmotion.backOut,\n  anticipate: popmotion.anticipate,\n  bounceIn: popmotion.bounceIn,\n  bounceInOut: popmotion.bounceInOut,\n  bounceOut: popmotion.bounceOut\n};\n\nvar easingDefinitionToFunction = function (definition) {\n  if (Array.isArray(definition)) {\n    // If cubic bezier definition, create bezier curve\n    heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n\n    var _a = tslib.__read(definition, 4),\n        x1 = _a[0],\n        y1 = _a[1],\n        x2 = _a[2],\n        y2 = _a[3];\n\n    return popmotion.cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    // Else lookup from table\n    heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\".concat(definition, \"'\"));\n    return easingLookup[definition];\n  }\n\n  return definition;\n};\n\nvar isEasingArray = function (ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\n\n\nvar isAnimatable = function (key, value) {\n  // If the list of keys tat might be non-animatable grows, replace with Set\n  if (key === \"zIndex\") return false; // If it's a number or a keyframes array, we can animate it. We might at some point\n  // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n  // but for now lets leave it like this for performance reasons\n\n  if (typeof value === \"number\" || Array.isArray(value)) return true;\n\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nvar isKeyframesTarget = function (v) {\n  return Array.isArray(v);\n};\n\nvar underDampedSpring = function () {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10\n  };\n};\n\nvar criticallyDampedSpring = function (to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10\n  };\n};\n\nvar linearTween = function () {\n  return {\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3\n  };\n};\n\nvar keyframes = function (values) {\n  return {\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values\n  };\n};\n\nvar defaultTransitions = {\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  opacity: linearTween,\n  backgroundColor: linearTween,\n  color: linearTween,\n  default: criticallyDampedSpring\n};\n\nvar getDefaultTransition = function (valueKey, to) {\n  var transitionFactory;\n\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n\n  return tslib.__assign({\n    to: to\n  }, transitionFactory(to));\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), {\n  transform: Math.round\n});\n\nvar numberValueTypes = {\n  // Border props\n  borderWidth: styleValueTypes.px,\n  borderTopWidth: styleValueTypes.px,\n  borderRightWidth: styleValueTypes.px,\n  borderBottomWidth: styleValueTypes.px,\n  borderLeftWidth: styleValueTypes.px,\n  borderRadius: styleValueTypes.px,\n  radius: styleValueTypes.px,\n  borderTopLeftRadius: styleValueTypes.px,\n  borderTopRightRadius: styleValueTypes.px,\n  borderBottomRightRadius: styleValueTypes.px,\n  borderBottomLeftRadius: styleValueTypes.px,\n  // Positioning props\n  width: styleValueTypes.px,\n  maxWidth: styleValueTypes.px,\n  height: styleValueTypes.px,\n  maxHeight: styleValueTypes.px,\n  size: styleValueTypes.px,\n  top: styleValueTypes.px,\n  right: styleValueTypes.px,\n  bottom: styleValueTypes.px,\n  left: styleValueTypes.px,\n  // Spacing props\n  padding: styleValueTypes.px,\n  paddingTop: styleValueTypes.px,\n  paddingRight: styleValueTypes.px,\n  paddingBottom: styleValueTypes.px,\n  paddingLeft: styleValueTypes.px,\n  margin: styleValueTypes.px,\n  marginTop: styleValueTypes.px,\n  marginRight: styleValueTypes.px,\n  marginBottom: styleValueTypes.px,\n  marginLeft: styleValueTypes.px,\n  // Transform props\n  rotate: styleValueTypes.degrees,\n  rotateX: styleValueTypes.degrees,\n  rotateY: styleValueTypes.degrees,\n  rotateZ: styleValueTypes.degrees,\n  scale: styleValueTypes.scale,\n  scaleX: styleValueTypes.scale,\n  scaleY: styleValueTypes.scale,\n  scaleZ: styleValueTypes.scale,\n  skew: styleValueTypes.degrees,\n  skewX: styleValueTypes.degrees,\n  skewY: styleValueTypes.degrees,\n  distance: styleValueTypes.px,\n  translateX: styleValueTypes.px,\n  translateY: styleValueTypes.px,\n  translateZ: styleValueTypes.px,\n  x: styleValueTypes.px,\n  y: styleValueTypes.px,\n  z: styleValueTypes.px,\n  perspective: styleValueTypes.px,\n  transformPerspective: styleValueTypes.px,\n  opacity: styleValueTypes.alpha,\n  originX: styleValueTypes.progressPercentage,\n  originY: styleValueTypes.progressPercentage,\n  originZ: styleValueTypes.px,\n  // Misc\n  zIndex: int,\n  // SVG\n  fillOpacity: styleValueTypes.alpha,\n  strokeOpacity: styleValueTypes.alpha,\n  numOctaves: int\n};\n/**\n * A map of default value types for common values\n */\n\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), {\n  // Color props\n  color: styleValueTypes.color,\n  backgroundColor: styleValueTypes.color,\n  outlineColor: styleValueTypes.color,\n  fill: styleValueTypes.color,\n  stroke: styleValueTypes.color,\n  // Border props\n  borderColor: styleValueTypes.color,\n  borderTopColor: styleValueTypes.color,\n  borderRightColor: styleValueTypes.color,\n  borderBottomColor: styleValueTypes.color,\n  borderLeftColor: styleValueTypes.color,\n  filter: styleValueTypes.filter,\n  WebkitFilter: styleValueTypes.filter\n});\n/**\n * Gets the default ValueType for the provided value key\n */\n\n\nvar getDefaultValueType = function (key) {\n  return defaultValueTypes[key];\n};\n\nfunction getAnimatableNone(key, value) {\n  var _a;\n\n  var defaultValueType = getDefaultValueType(key);\n  if (defaultValueType !== styleValueTypes.filter) defaultValueType = styleValueTypes.complex; // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n\n  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nvar instantAnimationState = {\n  current: false\n};\n\nvar isCustomValue = function (v) {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\n\nvar resolveFinalValueInKeyframes = function (v) {\n  // TODO maybe throw if v.length - 1 is placeholder token?\n  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\n\n\nfunction isTransitionDefined(_a) {\n  _a.when;\n  _a.delay;\n  _a.delayChildren;\n  _a.staggerChildren;\n  _a.staggerDirection;\n  _a.repeat;\n  _a.repeatType;\n  _a.repeatDelay;\n  _a.from;\n\n  var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n\n  return !!Object.keys(transition).length;\n}\n\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\n\nfunction convertTransitionToAnimationOptions(_a) {\n  var ease = _a.ease,\n      times = _a.times,\n      yoyo = _a.yoyo,\n      flip = _a.flip,\n      loop = _a.loop,\n      transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n\n  var options = tslib.__assign({}, transition);\n\n  if (times) options[\"offset\"] = times;\n  /**\n   * Convert any existing durations from seconds to milliseconds\n   */\n\n  if (transition.duration) options[\"duration\"] = secondsToMilliseconds(transition.duration);\n  if (transition.repeatDelay) options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n  /**\n   * Map easing names to Popmotion's easing functions\n   */\n\n  if (ease) {\n    options[\"ease\"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  /**\n   * Support legacy transition API\n   */\n\n\n  if (transition.type === \"tween\") options.type = \"keyframes\";\n  /**\n   * TODO: These options are officially removed from the API.\n   */\n\n  if (yoyo || loop || flip) {\n    heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n    legacyRepeatWarning = true;\n\n    if (yoyo) {\n      options.repeatType = \"reverse\";\n    } else if (loop) {\n      options.repeatType = \"loop\";\n    } else if (flip) {\n      options.repeatType = \"mirror\";\n    }\n\n    options.repeat = loop || yoyo || flip || transition.repeat;\n  }\n  /**\n   * TODO: Popmotion 9 has the ability to automatically detect whether to use\n   * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n   * It'd be good to introduce a similar thing here.\n   */\n\n\n  if (transition.type !== \"spring\") options.type = \"keyframes\";\n  return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\n\n\nfunction getDelayFromTransition(transition, key) {\n  var _a, _b;\n\n  var valueTransition = getValueTransition(transition, key) || {};\n  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\n\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = tslib.__spreadArray([], tslib.__read(options.to), false);\n    options.to[0] = options.from;\n  }\n\n  return options;\n}\n\nfunction getPopmotionAnimationOptions(transition, options, key) {\n  var _a;\n\n  if (Array.isArray(options.to)) {\n    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;\n  }\n\n  hydrateKeyframes(options);\n  /**\n   * Get a default transition if none is determined to be defined.\n   */\n\n  if (!isTransitionDefined(transition)) {\n    transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n  }\n\n  return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\n\n\nfunction getAnimation(key, value, target, transition, onComplete) {\n  var _a;\n\n  var valueTransition = getValueTransition(transition, key);\n  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n  var isTargetAnimatable = isAnimatable(key, target);\n\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n    /**\n     * If we're trying to animate from \"none\", try and get an animatable version\n     * of the target. This could be improved to work both ways.\n     */\n    origin = getAnimatableNone(key, target);\n  } else if (isZero(origin) && typeof target === \"string\") {\n    origin = getZeroUnit(target);\n  } else if (!Array.isArray(target) && isZero(target) && typeof origin === \"string\") {\n    target = getZeroUnit(origin);\n  }\n\n  var isOriginAnimatable = isAnimatable(key, origin);\n  heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \".concat(key, \" from \\\"\").concat(origin, \"\\\" to \\\"\").concat(target, \"\\\". \").concat(origin, \" is not an animatable value - to enable this animation set \").concat(origin, \" to a value animatable to \").concat(target, \" via the `style` property.\"));\n\n  function start() {\n    var options = {\n      from: origin,\n      to: target,\n      velocity: value.getVelocity(),\n      onComplete: onComplete,\n      onUpdate: function (v) {\n        return value.set(v);\n      }\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition)) : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), {\n      onUpdate: function (v) {\n        var _a;\n\n        options.onUpdate(v);\n        (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n      },\n      onComplete: function () {\n        var _a;\n\n        options.onComplete();\n        (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n      }\n    }));\n  }\n\n  function set() {\n    var _a, _b;\n\n    var finalTarget = resolveFinalValueInKeyframes(target);\n    value.set(finalTarget);\n    onComplete();\n    (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n    return {\n      stop: function () {}\n    };\n  }\n\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\n\nfunction isZero(value) {\n  return value === 0 || typeof value === \"string\" && parseFloat(value) === 0 && value.indexOf(\" \") === -1;\n}\n\nfunction getZeroUnit(potentialUnitType) {\n  return typeof potentialUnitType === \"number\" ? 0 : getAnimatableNone(\"\", potentialUnitType);\n}\n\nfunction getValueTransition(transition, key) {\n  return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\n\n\nfunction startAnimation(key, value, target, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n\n  if (instantAnimationState.current) {\n    transition = {\n      type: false\n    };\n  }\n\n  return value.start(function (onComplete) {\n    var delayTimer;\n    var controls;\n    var animation = getAnimation(key, value, target, transition, onComplete);\n    var delay = getDelayFromTransition(transition, key);\n\n    var start = function () {\n      return controls = animation();\n    };\n\n    if (delay) {\n      delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n    } else {\n      start();\n    }\n\n    return function () {\n      clearTimeout(delayTimer);\n      controls === null || controls === void 0 ? void 0 : controls.stop();\n    };\n  });\n}\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\n\n\nfunction animate(from, to, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n\n  var value = isMotionValue(from) ? from : motionValue(from);\n  startAnimation(\"\", value, to, transition);\n  return {\n    stop: function () {\n      return value.stop();\n    },\n    isAnimating: function () {\n      return value.isAnimating();\n    }\n  };\n}\n\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\n\nvar asNumber = function (value) {\n  return typeof value === \"string\" ? parseFloat(value) : value;\n};\n\nvar isPx = function (value) {\n  return typeof value === \"number\" || styleValueTypes.px.test(value);\n};\n\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n  var _a, _b, _c, _d;\n\n  if (shouldCrossfadeOpacity) {\n    target.opacity = popmotion.mix(0, // (follow?.opacity as number) ?? 0,\n    // TODO Reinstate this if only child\n    (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n    target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n  } else if (isOnlyMember) {\n    target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n  }\n  /**\n   * Mix border radius\n   */\n\n\n  for (var i = 0; i < numBorders; i++) {\n    var borderLabel = \"border\".concat(borders[i], \"Radius\");\n    var followRadius = getRadius(follow, borderLabel);\n    var leadRadius = getRadius(lead, borderLabel);\n    if (followRadius === undefined && leadRadius === undefined) continue;\n    followRadius || (followRadius = 0);\n    leadRadius || (leadRadius = 0);\n    var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);\n\n    if (canMix) {\n      target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n\n      if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {\n        target[borderLabel] += \"%\";\n      }\n    } else {\n      target[borderLabel] = leadRadius;\n    }\n  }\n  /**\n   * Mix rotation\n   */\n\n\n  if (follow.rotate || lead.rotate) {\n    target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);\n  }\n}\n\nfunction getRadius(values, radiusName) {\n  var _a;\n\n  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n} // /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\n\n\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\n\nfunction compress(min, max, easing) {\n  return function (p) {\n    // Could replace ifs with clamp\n    if (p < min) return 0;\n    if (p > max) return 1;\n    return easing(popmotion.progress(min, max, p));\n  };\n}\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\n\n\nfunction copyAxisInto(axis, originAxis) {\n  axis.min = originAxis.min;\n  axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\n\n\nfunction copyBoxInto(box, originBox) {\n  copyAxisInto(box.x, originBox.x);\n  copyAxisInto(box.y, originBox.y);\n}\n\nfunction isIdentityScale(scale) {\n  return scale === undefined || scale === 1;\n}\n\nfunction hasScale(_a) {\n  var scale = _a.scale,\n      scaleX = _a.scaleX,\n      scaleY = _a.scaleY;\n  return !isIdentityScale(scale) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);\n}\n\nfunction hasTransform(values) {\n  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;\n}\n\nfunction hasTranslate(value) {\n  return value && value !== \"0%\";\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\n\n\nfunction scalePoint(point, scale, originPoint) {\n  var distanceFromOrigin = point - originPoint;\n  var scaled = scale * distanceFromOrigin;\n  return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\n\n\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n  if (boxScale !== undefined) {\n    point = scalePoint(point, boxScale, originPoint);\n  }\n\n  return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\n\n\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\n\n\nfunction applyBoxDelta(box, _a) {\n  var x = _a.x,\n      y = _a.y;\n  applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n  applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\n\n\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {\n  var _a, _b;\n\n  if (isSharedTransition === void 0) {\n    isSharedTransition = false;\n  }\n\n  var treeLength = treePath.length;\n  if (!treeLength) return; // Reset the treeScale\n\n  treeScale.x = treeScale.y = 1;\n  var node;\n  var delta;\n\n  for (var i = 0; i < treeLength; i++) {\n    node = treePath[i];\n    delta = node.projectionDelta;\n    if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\") continue;\n\n    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {\n      transformBox(box, {\n        x: -node.scroll.x,\n        y: -node.scroll.y\n      });\n    }\n\n    if (delta) {\n      // Incoporate each ancestor's scale into a culmulative treeScale for this component\n      treeScale.x *= delta.x.scale;\n      treeScale.y *= delta.y.scale; // Apply each ancestor's calculated delta into this component's recorded layout box\n\n      applyBoxDelta(box, delta);\n    }\n\n    if (isSharedTransition && hasTransform(node.latestValues)) {\n      transformBox(box, node.latestValues);\n    }\n  }\n}\n\nfunction translateAxis(axis, distance) {\n  axis.min = axis.min + distance;\n  axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\n\n\nfunction transformAxis(axis, transforms, _a) {\n  var _b = tslib.__read(_a, 3),\n      key = _b[0],\n      scaleKey = _b[1],\n      originKey = _b[2];\n\n  var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n  var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin); // Apply the axis delta to the final axis\n\n  applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nvar xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\n\nfunction transformBox(box, transform) {\n  transformAxis(box.x, transform, xKeys$1);\n  transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction calcLength(axis) {\n  return axis.max - axis.min;\n}\n\nfunction isNear(value, target, maxDistance) {\n  if (target === void 0) {\n    target = 0;\n  }\n\n  if (maxDistance === void 0) {\n    maxDistance = 0.01;\n  }\n\n  return popmotion.distance(value, target) < maxDistance;\n}\n\nfunction calcAxisDelta(delta, source, target, origin) {\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n\n  delta.origin = origin;\n  delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n  delta.scale = calcLength(target) / calcLength(source);\n  if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale)) delta.scale = 1;\n  delta.translate = popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n  if (isNear(delta.translate) || isNaN(delta.translate)) delta.translate = 0;\n}\n\nfunction calcBoxDelta(delta, source, target, origin) {\n  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\n\nfunction calcRelativeAxis(target, relative, parent) {\n  target.min = parent.min + relative.min;\n  target.max = target.min + calcLength(relative);\n}\n\nfunction calcRelativeBox(target, relative, parent) {\n  calcRelativeAxis(target.x, relative.x, parent.x);\n  calcRelativeAxis(target.y, relative.y, parent.y);\n}\n\nfunction calcRelativeAxisPosition(target, layout, parent) {\n  target.min = layout.min - parent.min;\n  target.max = target.min + calcLength(layout);\n}\n\nfunction calcRelativePosition(target, layout, parent) {\n  calcRelativeAxisPosition(target.x, layout.x, parent.x);\n  calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\n\n\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n  point -= translate;\n  point = scalePoint(point, 1 / scale, originPoint);\n\n  if (boxScale !== undefined) {\n    point = scalePoint(point, 1 / boxScale, originPoint);\n  }\n\n  return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\n\n\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n\n  if (originAxis === void 0) {\n    originAxis = axis;\n  }\n\n  if (sourceAxis === void 0) {\n    sourceAxis = axis;\n  }\n\n  if (styleValueTypes.percent.test(translate)) {\n    translate = parseFloat(translate);\n    var relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);\n    translate = relativeProgress - sourceAxis.min;\n  }\n\n  if (typeof translate !== \"number\") return;\n  var originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);\n  if (axis === originAxis) originPoint -= translate;\n  axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\n\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n  var _b = tslib.__read(_a, 3),\n      key = _b[0],\n      scaleKey = _b[1],\n      originKey = _b[2];\n\n  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n  removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n  removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nvar createAxisDelta = function () {\n  return {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0\n  };\n};\n\nvar createDelta = function () {\n  return {\n    x: createAxisDelta(),\n    y: createAxisDelta()\n  };\n};\n\nvar createAxis = function () {\n  return {\n    min: 0,\n    max: 0\n  };\n};\n\nvar createBox = function () {\n  return {\n    x: createAxis(),\n    y: createAxis()\n  };\n};\n\nfunction isAxisDeltaZero(delta) {\n  return delta.translate === 0 && delta.scale === 1;\n}\n\nfunction isDeltaZero(delta) {\n  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\n\nfunction boxEquals(a, b) {\n  return a.x.min === b.x.min && a.x.max === b.x.max && a.y.min === b.y.min && a.y.max === b.y.max;\n}\n\nvar NodeStack =\n/** @class */\nfunction () {\n  function NodeStack() {\n    this.members = [];\n  }\n\n  NodeStack.prototype.add = function (node) {\n    addUniqueItem(this.members, node);\n    node.scheduleRender();\n  };\n\n  NodeStack.prototype.remove = function (node) {\n    removeItem(this.members, node);\n\n    if (node === this.prevLead) {\n      this.prevLead = undefined;\n    }\n\n    if (node === this.lead) {\n      var prevLead = this.members[this.members.length - 1];\n\n      if (prevLead) {\n        this.promote(prevLead);\n      }\n    }\n  };\n\n  NodeStack.prototype.relegate = function (node) {\n    var indexOfNode = this.members.findIndex(function (member) {\n      return node === member;\n    });\n    if (indexOfNode === 0) return false;\n    /**\n     * Find the next projection node that is present\n     */\n\n    var prevLead;\n\n    for (var i = indexOfNode; i >= 0; i--) {\n      var member = this.members[i];\n\n      if (member.isPresent !== false) {\n        prevLead = member;\n        break;\n      }\n    }\n\n    if (prevLead) {\n      this.promote(prevLead);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  NodeStack.prototype.promote = function (node, preserveFollowOpacity) {\n    var _a;\n\n    var prevLead = this.lead;\n    if (node === prevLead) return;\n    this.prevLead = prevLead;\n    this.lead = node;\n    node.show();\n\n    if (prevLead) {\n      prevLead.instance && prevLead.scheduleRender();\n      node.scheduleRender();\n      node.resumeFrom = prevLead;\n\n      if (preserveFollowOpacity) {\n        node.resumeFrom.preserveOpacity = true;\n      }\n\n      if (prevLead.snapshot) {\n        node.snapshot = prevLead.snapshot;\n        node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;\n        node.snapshot.isShared = true;\n      }\n\n      if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n        node.isLayoutDirty = true;\n      }\n\n      var crossfade = node.options.crossfade;\n\n      if (crossfade === false) {\n        prevLead.hide();\n      }\n      /**\n       * TODO:\n       *   - Test border radius when previous node was deleted\n       *   - boxShadow mixing\n       *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n       *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n       *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n       * ---\n       *   - Crossfade opacity of root nodes\n       *   - layoutId changes after animation\n       *   - layoutId changes mid animation\n       */\n\n    }\n  };\n\n  NodeStack.prototype.exitAnimationComplete = function () {\n    this.members.forEach(function (node) {\n      var _a, _b, _c, _d, _e;\n\n      (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n    });\n  };\n\n  NodeStack.prototype.scheduleRender = function () {\n    this.members.forEach(function (node) {\n      node.instance && node.scheduleRender(false);\n    });\n  };\n  /**\n   * Clear any leads that have been removed this render to prevent them from being\n   * used in future animations and to prevent memory leaks\n   */\n\n\n  NodeStack.prototype.removeLeadSnapshot = function () {\n    if (this.lead && this.lead.snapshot) {\n      this.lead.snapshot = undefined;\n    }\n  };\n\n  return NodeStack;\n}();\n\nvar scaleCorrectors = {};\n\nfunction addScaleCorrector(correctors) {\n  Object.assign(scaleCorrectors, correctors);\n}\n\nvar identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\n\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n  /**\n   * The translations we use to calculate are always relative to the viewport coordinate space.\n   * But when we apply scales, we also scale the coordinate space of an element and its children.\n   * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n   * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n   */\n  var xTranslate = delta.x.translate / treeScale.x;\n  var yTranslate = delta.y.translate / treeScale.y;\n  var transform = \"translate3d(\".concat(xTranslate, \"px, \").concat(yTranslate, \"px, 0) \");\n  /**\n   * Apply scale correction for the tree transform.\n   * This will apply scale to the screen-orientated axes.\n   */\n\n  transform += \"scale(\".concat(1 / treeScale.x, \", \").concat(1 / treeScale.y, \") \");\n\n  if (latestTransform) {\n    var rotate = latestTransform.rotate,\n        rotateX = latestTransform.rotateX,\n        rotateY = latestTransform.rotateY;\n    if (rotate) transform += \"rotate(\".concat(rotate, \"deg) \");\n    if (rotateX) transform += \"rotateX(\".concat(rotateX, \"deg) \");\n    if (rotateY) transform += \"rotateY(\".concat(rotateY, \"deg) \");\n  }\n  /**\n   * Apply scale to match the size of the element to the size we want it.\n   * This will apply scale to the element-orientated axes.\n   */\n\n\n  var elementScaleX = delta.x.scale * treeScale.x;\n  var elementScaleY = delta.y.scale * treeScale.y;\n  transform += \"scale(\".concat(elementScaleX, \", \").concat(elementScaleY, \")\");\n  return transform === identityProjection ? \"none\" : transform;\n}\n\nfunction eachAxis(callback) {\n  return [callback(\"x\"), callback(\"y\")];\n}\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\n\n\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\n\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\n\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n  return transformAxes.forEach(function (axesKey) {\n    return transformProps.push(operationKey + axesKey);\n  });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\n\nfunction sortTransformProps(a, b) {\n  return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\n\n\nvar transformPropSet = new Set(transformProps);\n\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\n\n\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\n\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\n\nvar compareByDepth = function (a, b) {\n  return a.depth - b.depth;\n};\n\nvar FlatTree =\n/** @class */\nfunction () {\n  function FlatTree() {\n    this.children = [];\n    this.isDirty = false;\n  }\n\n  FlatTree.prototype.add = function (child) {\n    addUniqueItem(this.children, child);\n    this.isDirty = true;\n  };\n\n  FlatTree.prototype.remove = function (child) {\n    removeItem(this.children, child);\n    this.isDirty = true;\n  };\n\n  FlatTree.prototype.forEach = function (callback) {\n    this.isDirty && this.children.sort(compareByDepth);\n    this.isDirty = false;\n    this.children.forEach(callback);\n  };\n\n  return FlatTree;\n}();\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\n\n\nfunction resolveMotionValue(value) {\n  var unwrappedValue = isMotionValue(value) ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\n\n\nvar animationTarget = 1000;\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\n\nvar globalProjectionState = {\n  /**\n   * Global flag as to whether the tree has animated since the last time\n   * we resized the window\n   */\n  hasAnimatedSinceResize: true,\n\n  /**\n   * We set this to true once, on the first update. Any nodes added to the tree beyond that\n   * update will be given a `data-projection-id` attribute.\n   */\n  hasEverUpdated: false\n};\n\nfunction createProjectionNode(_a) {\n  var attachResizeListener = _a.attachResizeListener,\n      defaultParent = _a.defaultParent,\n      measureScroll = _a.measureScroll,\n      checkIsScrollRoot = _a.checkIsScrollRoot,\n      resetTransform = _a.resetTransform;\n  return (\n    /** @class */\n    function () {\n      function ProjectionNode(id, latestValues, parent) {\n        var _this = this;\n\n        if (latestValues === void 0) {\n          latestValues = {};\n        }\n\n        if (parent === void 0) {\n          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();\n        }\n        /**\n         * A Set containing all this component's children. This is used to iterate\n         * through the children.\n         *\n         * TODO: This could be faster to iterate as a flat array stored on the root node.\n         */\n\n\n        this.children = new Set();\n        /**\n         * Options for the node. We use this to configure what kind of layout animations\n         * we should perform (if any).\n         */\n\n        this.options = {};\n        /**\n         * We use this to detect when its safe to shut down part of a projection tree.\n         * We have to keep projecting children for scale correction and relative projection\n         * until all their parents stop performing layout animations.\n         */\n\n        this.isTreeAnimating = false;\n        this.isAnimationBlocked = false;\n        /**\n         * Flag to true if we think this layout has been changed. We can't always know this,\n         * currently we set it to true every time a component renders, or if it has a layoutDependency\n         * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n         * and if one node is dirtied, they all are.\n         */\n\n        this.isLayoutDirty = false;\n        /**\n         * Block layout updates for instant layout transitions throughout the tree.\n         */\n\n        this.updateManuallyBlocked = false;\n        this.updateBlockedByResize = false;\n        /**\n         * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n         * call.\n         */\n\n        this.isUpdating = false;\n        /**\n         * If this is an SVG element we currently disable projection transforms\n         */\n\n        this.isSVG = false;\n        /**\n         * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n         * its projection styles.\n         */\n\n        this.needsReset = false;\n        /**\n         * Flags whether this node should have its transform reset prior to measuring.\n         */\n\n        this.shouldResetTransform = false;\n        /**\n         * An object representing the calculated contextual/accumulated/tree scale.\n         * This will be used to scale calculcated projection transforms, as these are\n         * calculated in screen-space but need to be scaled for elements to actually\n         * make it to their calculated destinations.\n         *\n         * TODO: Lazy-init\n         */\n\n        this.treeScale = {\n          x: 1,\n          y: 1\n        };\n        /**\n         *\n         */\n\n        this.eventHandlers = new Map(); // Note: Currently only running on root node\n\n        this.potentialNodes = new Map();\n\n        this.checkUpdateFailed = function () {\n          if (_this.isUpdating) {\n            _this.isUpdating = false;\n\n            _this.clearAllSnapshots();\n          }\n        };\n\n        this.updateProjection = function () {\n          _this.nodes.forEach(resolveTargetDelta);\n\n          _this.nodes.forEach(calcProjection);\n        };\n\n        this.hasProjected = false;\n        this.isVisible = true;\n        this.animationProgress = 0;\n        /**\n         * Shared layout\n         */\n        // TODO Only running on root node\n\n        this.sharedNodes = new Map();\n        this.id = id;\n        this.latestValues = latestValues;\n        this.root = parent ? parent.root || parent : this;\n        this.path = parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path), false), [parent], false) : [];\n        this.parent = parent;\n        this.depth = parent ? parent.depth + 1 : 0;\n        id && this.root.registerPotentialNode(id, this);\n\n        for (var i = 0; i < this.path.length; i++) {\n          this.path[i].shouldResetTransform = true;\n        }\n\n        if (this.root === this) this.nodes = new FlatTree();\n      }\n\n      ProjectionNode.prototype.addEventListener = function (name, handler) {\n        if (!this.eventHandlers.has(name)) {\n          this.eventHandlers.set(name, new SubscriptionManager());\n        }\n\n        return this.eventHandlers.get(name).add(handler);\n      };\n\n      ProjectionNode.prototype.notifyListeners = function (name) {\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n\n        var subscriptionManager = this.eventHandlers.get(name);\n        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, tslib.__spreadArray([], tslib.__read(args), false));\n      };\n\n      ProjectionNode.prototype.hasListeners = function (name) {\n        return this.eventHandlers.has(name);\n      };\n\n      ProjectionNode.prototype.registerPotentialNode = function (id, node) {\n        this.potentialNodes.set(id, node);\n      };\n      /**\n       * Lifecycles\n       */\n\n\n      ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {\n        var _this = this;\n\n        var _a;\n\n        if (isLayoutDirty === void 0) {\n          isLayoutDirty = false;\n        }\n\n        if (this.instance) return;\n        this.isSVG = instance instanceof SVGElement && instance.tagName !== \"svg\";\n        this.instance = instance;\n        var _b = this.options,\n            layoutId = _b.layoutId,\n            layout = _b.layout,\n            visualElement = _b.visualElement;\n\n        if (visualElement && !visualElement.getInstance()) {\n          visualElement.mount(instance);\n        }\n\n        this.root.nodes.add(this);\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n        this.id && this.root.potentialNodes.delete(this.id);\n\n        if (isLayoutDirty && (layout || layoutId)) {\n          this.isLayoutDirty = true;\n        }\n\n        if (attachResizeListener) {\n          var unblockTimeout_1;\n\n          var resizeUnblockUpdate_1 = function () {\n            return _this.root.updateBlockedByResize = false;\n          };\n\n          attachResizeListener(instance, function () {\n            _this.root.updateBlockedByResize = true;\n            clearTimeout(unblockTimeout_1);\n            unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);\n\n            if (globalProjectionState.hasAnimatedSinceResize) {\n              globalProjectionState.hasAnimatedSinceResize = false;\n\n              _this.nodes.forEach(finishAnimation);\n            }\n          });\n        }\n\n        if (layoutId) {\n          this.root.registerSharedNode(layoutId, this);\n        } // Only register the handler if it requires layout animation\n\n\n        if (this.options.animate !== false && visualElement && (layoutId || layout)) {\n          this.addEventListener(\"didUpdate\", function (_a) {\n            var _b, _c, _d, _e, _f;\n\n            var delta = _a.delta,\n                hasLayoutChanged = _a.hasLayoutChanged,\n                hasRelativeTargetChanged = _a.hasRelativeTargetChanged,\n                newLayout = _a.layout;\n\n            if (_this.isTreeAnimationBlocked()) {\n              _this.target = undefined;\n              _this.relativeTarget = undefined;\n              return;\n            } // TODO: Check here if an animation exists\n\n\n            var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;\n\n            var _g = visualElement.getProps(),\n                onLayoutAnimationStart = _g.onLayoutAnimationStart,\n                onLayoutAnimationComplete = _g.onLayoutAnimationComplete;\n            /**\n             * The target layout of the element might stay the same,\n             * but its position relative to its parent has changed.\n             */\n\n\n            var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;\n            /**\n             * If the layout hasn't seemed to have changed, it might be that the\n             * element is visually in the same place in the document but its position\n             * relative to its parent has indeed changed. So here we check for that.\n             */\n\n            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n\n            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {\n              if (_this.resumeFrom) {\n                _this.resumingFrom = _this.resumeFrom;\n                _this.resumingFrom.resumingFrom = undefined;\n              }\n\n              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n\n              var animationOptions = tslib.__assign(tslib.__assign({}, getValueTransition(layoutTransition, \"layout\")), {\n                onPlay: onLayoutAnimationStart,\n                onComplete: onLayoutAnimationComplete\n              });\n\n              if (visualElement.shouldReduceMotion) {\n                animationOptions.delay = 0;\n                animationOptions.type = false;\n              }\n\n              _this.startAnimation(animationOptions);\n            } else {\n              /**\n               * If the layout hasn't changed and we have an animation that hasn't started yet,\n               * finish it immediately. Otherwise it will be animating from a location\n               * that was probably never commited to screen and look like a jumpy box.\n               */\n              if (!hasLayoutChanged && _this.animationProgress === 0) {\n                _this.finishAnimation();\n              }\n\n              _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));\n            }\n\n            _this.targetLayout = newLayout;\n          });\n        }\n      };\n\n      ProjectionNode.prototype.unmount = function () {\n        var _a, _b;\n\n        this.options.layoutId && this.willUpdate();\n        this.root.nodes.remove(this);\n        (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n        this.instance = undefined;\n        sync.cancelSync.preRender(this.updateProjection);\n      }; // only on the root\n\n\n      ProjectionNode.prototype.blockUpdate = function () {\n        this.updateManuallyBlocked = true;\n      };\n\n      ProjectionNode.prototype.unblockUpdate = function () {\n        this.updateManuallyBlocked = false;\n      };\n\n      ProjectionNode.prototype.isUpdateBlocked = function () {\n        return this.updateManuallyBlocked || this.updateBlockedByResize;\n      };\n\n      ProjectionNode.prototype.isTreeAnimationBlocked = function () {\n        var _a;\n\n        return this.isAnimationBlocked || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) || false;\n      }; // Note: currently only running on root node\n\n\n      ProjectionNode.prototype.startUpdate = function () {\n        var _a;\n\n        if (this.isUpdateBlocked()) return;\n        this.isUpdating = true;\n        (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n      };\n\n      ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {\n        var _a, _b, _c;\n\n        if (shouldNotifyListeners === void 0) {\n          shouldNotifyListeners = true;\n        }\n\n        if (this.root.isUpdateBlocked()) {\n          (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n          return;\n        }\n\n        !this.root.isUpdating && this.root.startUpdate();\n        if (this.isLayoutDirty) return;\n        this.isLayoutDirty = true;\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          node.shouldResetTransform = true;\n          /**\n           * TODO: Check we haven't updated the scroll\n           * since the last didUpdate\n           */\n\n          node.updateScroll();\n        }\n\n        var _d = this.options,\n            layoutId = _d.layoutId,\n            layout = _d.layout;\n        if (layoutId === undefined && !layout) return;\n        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n        this.updateSnapshot();\n        shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n      }; // Note: Currently only running on root node\n\n\n      ProjectionNode.prototype.didUpdate = function () {\n        var updateWasBlocked = this.isUpdateBlocked(); // When doing an instant transition, we skip the layout update,\n        // but should still clean up the measurements so that the next\n        // snapshot could be taken correctly.\n\n        if (updateWasBlocked) {\n          this.unblockUpdate();\n          this.clearAllSnapshots();\n          this.nodes.forEach(clearMeasurements);\n          return;\n        }\n\n        if (!this.isUpdating) return;\n        this.isUpdating = false;\n        /**\n         * Search for and mount newly-added projection elements.\n         *\n         * TODO: Every time a new component is rendered we could search up the tree for\n         * the closest mounted node and query from there rather than document.\n         */\n\n        if (this.potentialNodes.size) {\n          this.potentialNodes.forEach(mountNodeEarly);\n          this.potentialNodes.clear();\n        }\n        /**\n         * Write\n         */\n\n\n        this.nodes.forEach(resetTransformStyle);\n        /**\n         * Read ==================\n         */\n        // Update layout measurements of updated children\n\n        this.nodes.forEach(updateLayout);\n        /**\n         * Write\n         */\n        // Notify listeners that the layout is updated\n\n        this.nodes.forEach(notifyLayoutUpdate);\n        this.clearAllSnapshots(); // Flush any scheduled updates\n\n        sync.flushSync.update();\n        sync.flushSync.preRender();\n        sync.flushSync.render();\n      };\n\n      ProjectionNode.prototype.clearAllSnapshots = function () {\n        this.nodes.forEach(clearSnapshot);\n        this.sharedNodes.forEach(removeLeadSnapshots);\n      };\n\n      ProjectionNode.prototype.scheduleUpdateProjection = function () {\n        sync__default[\"default\"].preRender(this.updateProjection, false, true);\n      };\n\n      ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {\n        var _this = this;\n        /**\n         * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n         * we manually call didUpdate to give a chance to the siblings to animate.\n         * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n         */\n\n\n        sync__default[\"default\"].postRender(function () {\n          if (_this.isLayoutDirty) {\n            _this.root.didUpdate();\n          } else {\n            _this.root.checkUpdateFailed();\n          }\n        });\n      };\n      /**\n       * Update measurements\n       */\n\n\n      ProjectionNode.prototype.updateSnapshot = function () {\n        if (this.snapshot || !this.instance) return;\n        var measured = this.measure();\n        var layout = this.removeTransform(this.removeElementScroll(measured));\n        roundBox(layout);\n        this.snapshot = {\n          measured: measured,\n          layout: layout,\n          latestValues: {}\n        };\n      };\n\n      ProjectionNode.prototype.updateLayout = function () {\n        var _a;\n\n        if (!this.instance) return; // TODO: Incorporate into a forwarded scroll offset\n\n        this.updateScroll();\n\n        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {\n          return;\n        }\n        /**\n         * When a node is mounted, it simply resumes from the prevLead's\n         * snapshot instead of taking a new one, but the ancestors scroll\n         * might have updated while the prevLead is unmounted. We need to\n         * update the scroll again to make sure the layout we measure is\n         * up to date.\n         */\n\n\n        if (this.resumeFrom && !this.resumeFrom.instance) {\n          for (var i = 0; i < this.path.length; i++) {\n            var node = this.path[i];\n            node.updateScroll();\n          }\n        }\n\n        var measured = this.measure();\n        roundBox(measured);\n        var prevLayout = this.layout;\n        this.layout = {\n          measured: measured,\n          actual: this.removeElementScroll(measured)\n        };\n        this.layoutCorrected = createBox();\n        this.isLayoutDirty = false;\n        this.projectionDelta = undefined;\n        this.notifyListeners(\"measure\", this.layout.actual);\n        (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n      };\n\n      ProjectionNode.prototype.updateScroll = function () {\n        if (this.options.layoutScroll && this.instance) {\n          this.isScrollRoot = checkIsScrollRoot(this.instance);\n          this.scroll = measureScroll(this.instance);\n        }\n      };\n\n      ProjectionNode.prototype.resetTransform = function () {\n        var _a;\n\n        if (!resetTransform) return;\n        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n        var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n        var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n\n        if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {\n          resetTransform(this.instance, transformTemplateValue);\n          this.shouldResetTransform = false;\n          this.scheduleRender();\n        }\n      };\n\n      ProjectionNode.prototype.measure = function () {\n        var visualElement = this.options.visualElement;\n        if (!visualElement) return createBox();\n        var box = visualElement.measureViewportBox(); // Remove viewport scroll to give page-relative coordinates\n\n        var scroll = this.root.scroll;\n\n        if (scroll) {\n          translateAxis(box.x, scroll.x);\n          translateAxis(box.y, scroll.y);\n        }\n\n        return box;\n      };\n\n      ProjectionNode.prototype.removeElementScroll = function (box) {\n        var boxWithoutScroll = createBox();\n        copyBoxInto(boxWithoutScroll, box);\n        /**\n         * Performance TODO: Keep a cumulative scroll offset down the tree\n         * rather than loop back up the path.\n         */\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          var scroll_1 = node.scroll,\n              options = node.options,\n              isScrollRoot = node.isScrollRoot;\n\n          if (node !== this.root && scroll_1 && options.layoutScroll) {\n            /**\n             * If this is a new scroll root, we want to remove all previous scrolls\n             * from the viewport box.\n             */\n            if (isScrollRoot) {\n              copyBoxInto(boxWithoutScroll, box);\n              var rootScroll = this.root.scroll;\n              /**\n               * Undo the application of page scroll that was originally added\n               * to the measured bounding box.\n               */\n\n              if (rootScroll) {\n                translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                translateAxis(boxWithoutScroll.y, -rootScroll.y);\n              }\n            }\n\n            translateAxis(boxWithoutScroll.x, scroll_1.x);\n            translateAxis(boxWithoutScroll.y, scroll_1.y);\n          }\n        }\n\n        return boxWithoutScroll;\n      };\n\n      ProjectionNode.prototype.applyTransform = function (box, transformOnly) {\n        if (transformOnly === void 0) {\n          transformOnly = false;\n        }\n\n        var withTransforms = createBox();\n        copyBoxInto(withTransforms, box);\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n\n          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {\n            transformBox(withTransforms, {\n              x: -node.scroll.x,\n              y: -node.scroll.y\n            });\n          }\n\n          if (!hasTransform(node.latestValues)) continue;\n          transformBox(withTransforms, node.latestValues);\n        }\n\n        if (hasTransform(this.latestValues)) {\n          transformBox(withTransforms, this.latestValues);\n        }\n\n        return withTransforms;\n      };\n\n      ProjectionNode.prototype.removeTransform = function (box) {\n        var _a;\n\n        var boxWithoutTransform = createBox();\n        copyBoxInto(boxWithoutTransform, box);\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          if (!node.instance) continue;\n          if (!hasTransform(node.latestValues)) continue;\n          hasScale(node.latestValues) && node.updateSnapshot();\n          var sourceBox = createBox();\n          var nodeBox = node.measure();\n          copyBoxInto(sourceBox, nodeBox);\n          removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n        }\n\n        if (hasTransform(this.latestValues)) {\n          removeBoxTransforms(boxWithoutTransform, this.latestValues);\n        }\n\n        return boxWithoutTransform;\n      };\n      /**\n       *\n       */\n\n\n      ProjectionNode.prototype.setTargetDelta = function (delta) {\n        this.targetDelta = delta;\n        this.root.scheduleUpdateProjection();\n      };\n\n      ProjectionNode.prototype.setOptions = function (options) {\n        var _a;\n\n        this.options = tslib.__assign(tslib.__assign(tslib.__assign({}, this.options), options), {\n          crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true\n        });\n      };\n\n      ProjectionNode.prototype.clearMeasurements = function () {\n        this.scroll = undefined;\n        this.layout = undefined;\n        this.snapshot = undefined;\n        this.prevTransformTemplateValue = undefined;\n        this.targetDelta = undefined;\n        this.target = undefined;\n        this.isLayoutDirty = false;\n      };\n      /**\n       * Frame calculations\n       */\n\n\n      ProjectionNode.prototype.resolveTargetDelta = function () {\n        var _a;\n\n        var _b = this.options,\n            layout = _b.layout,\n            layoutId = _b.layoutId;\n        /**\n         * If we have no layout, we can't perform projection, so early return\n         */\n\n        if (!this.layout || !(layout || layoutId)) return;\n        /**\n         * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n         * a relativeParent. This will allow a component to perform scale correction\n         * even if no animation has started.\n         */\n        // TODO If this is unsuccessful this currently happens every frame\n\n        if (!this.targetDelta && !this.relativeTarget) {\n          // TODO: This is a semi-repetition of further down this function, make DRY\n          this.relativeParent = this.getClosestProjectingParent();\n\n          if (this.relativeParent && this.relativeParent.layout) {\n            this.relativeTarget = createBox();\n            this.relativeTargetOrigin = createBox();\n            calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n          }\n        }\n        /**\n         * If we have no relative target or no target delta our target isn't valid\n         * for this frame.\n         */\n\n\n        if (!this.relativeTarget && !this.targetDelta) return;\n        /**\n         * Lazy-init target data structure\n         */\n\n        if (!this.target) {\n          this.target = createBox();\n          this.targetWithTransforms = createBox();\n        }\n        /**\n         * If we've got a relative box for this component, resolve it into a target relative to the parent.\n         */\n\n\n        if (this.relativeTarget && this.relativeTargetOrigin && ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n          calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n          /**\n           * If we've only got a targetDelta, resolve it into a target\n           */\n        } else if (this.targetDelta) {\n          if (Boolean(this.resumingFrom)) {\n            // TODO: This is creating a new object every frame\n            this.target = this.applyTransform(this.layout.actual);\n          } else {\n            copyBoxInto(this.target, this.layout.actual);\n          }\n\n          applyBoxDelta(this.target, this.targetDelta);\n        } else {\n          /**\n           * If no target, use own layout as target\n           */\n          copyBoxInto(this.target, this.layout.actual);\n        }\n        /**\n         * If we've been told to attempt to resolve a relative target, do so.\n         */\n\n\n        if (this.attemptToResolveRelativeTarget) {\n          this.attemptToResolveRelativeTarget = false;\n          this.relativeParent = this.getClosestProjectingParent();\n\n          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {\n            this.relativeTarget = createBox();\n            this.relativeTargetOrigin = createBox();\n            calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n          }\n        }\n      };\n\n      ProjectionNode.prototype.getClosestProjectingParent = function () {\n        if (!this.parent || hasTransform(this.parent.latestValues)) return undefined;\n\n        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {\n          return this.parent;\n        } else {\n          return this.parent.getClosestProjectingParent();\n        }\n      };\n\n      ProjectionNode.prototype.calcProjection = function () {\n        var _a;\n\n        var _b = this.options,\n            layout = _b.layout,\n            layoutId = _b.layoutId;\n        /**\n         * If this section of the tree isn't animating we can\n         * delete our target sources for the following frame.\n         */\n\n        this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);\n\n        if (!this.isTreeAnimating) {\n          this.targetDelta = this.relativeTarget = undefined;\n        }\n\n        if (!this.layout || !(layout || layoutId)) return;\n        var lead = this.getLead();\n        /**\n         * Reset the corrected box with the latest values from box, as we're then going\n         * to perform mutative operations on it.\n         */\n\n        copyBoxInto(this.layoutCorrected, this.layout.actual);\n        /**\n         * Apply all the parent deltas to this box to produce the corrected box. This\n         * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n         */\n\n        applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n        var target = lead.target;\n        if (!target) return;\n\n        if (!this.projectionDelta) {\n          this.projectionDelta = createDelta();\n          this.projectionDeltaWithTransform = createDelta();\n        }\n\n        var prevTreeScaleX = this.treeScale.x;\n        var prevTreeScaleY = this.treeScale.y;\n        var prevProjectionTransform = this.projectionTransform;\n        /**\n         * Update the delta between the corrected box and the target box before user-set transforms were applied.\n         * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n         * for our layout reprojection, but still allow them to be scaled correctly by the user.\n         * It might be that to simplify this we may want to accept that user-set scale is also corrected\n         * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n         * to allow people to choose whether these styles are corrected based on just the\n         * layout reprojection or the final bounding box.\n         */\n\n        calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n        this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n\n        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {\n          this.hasProjected = true;\n          this.scheduleRender();\n          this.notifyListeners(\"projectionUpdate\", target);\n        }\n      };\n\n      ProjectionNode.prototype.hide = function () {\n        this.isVisible = false; // TODO: Schedule render\n      };\n\n      ProjectionNode.prototype.show = function () {\n        this.isVisible = true; // TODO: Schedule render\n      };\n\n      ProjectionNode.prototype.scheduleRender = function (notifyAll) {\n        var _a, _b, _c;\n\n        if (notifyAll === void 0) {\n          notifyAll = true;\n        }\n\n        (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n\n        if (this.resumingFrom && !this.resumingFrom.instance) {\n          this.resumingFrom = undefined;\n        }\n      };\n\n      ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {\n        var _this = this;\n\n        var _a;\n\n        if (hasOnlyRelativeTargetChanged === void 0) {\n          hasOnlyRelativeTargetChanged = false;\n        }\n\n        var snapshot = this.snapshot;\n        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n\n        var mixedValues = tslib.__assign({}, this.latestValues);\n\n        var targetDelta = createDelta();\n        this.relativeTarget = this.relativeTargetOrigin = undefined;\n        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n        var relativeLayout = createBox();\n        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n        var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));\n        this.animationProgress = 0;\n\n        this.mixTargetDelta = function (latest) {\n          var _a;\n\n          var progress = latest / 1000;\n          mixAxisDelta(targetDelta.x, delta.x, progress);\n          mixAxisDelta(targetDelta.y, delta.y, progress);\n\n          _this.setTargetDelta(targetDelta);\n\n          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n            calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);\n            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);\n          }\n\n          if (isSharedLayoutAnimation) {\n            _this.animationValues = mixedValues;\n            mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n          }\n\n          _this.root.scheduleUpdateProjection();\n\n          _this.scheduleRender();\n\n          _this.animationProgress = progress;\n        };\n\n        this.mixTargetDelta(0);\n      };\n\n      ProjectionNode.prototype.startAnimation = function (options) {\n        var _this = this;\n\n        var _a, _b;\n\n        this.notifyListeners(\"animationStart\");\n        (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n\n        if (this.resumingFrom) {\n          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n\n        if (this.pendingAnimation) {\n          sync.cancelSync.update(this.pendingAnimation);\n          this.pendingAnimation = undefined;\n        }\n        /**\n         * Start the animation in the next frame to have a frame with progress 0,\n         * where the target is the same as when the animation started, so we can\n         * calculate the relative positions correctly for instant transitions.\n         */\n\n\n        this.pendingAnimation = sync__default[\"default\"].update(function () {\n          globalProjectionState.hasAnimatedSinceResize = true;\n          _this.currentAnimation = animate(0, animationTarget, tslib.__assign(tslib.__assign({}, options), {\n            onUpdate: function (latest) {\n              var _a;\n\n              _this.mixTargetDelta(latest);\n\n              (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n            },\n            onComplete: function () {\n              var _a;\n\n              (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n\n              _this.completeAnimation();\n            }\n          }));\n\n          if (_this.resumingFrom) {\n            _this.resumingFrom.currentAnimation = _this.currentAnimation;\n          }\n\n          _this.pendingAnimation = undefined;\n        });\n      };\n\n      ProjectionNode.prototype.completeAnimation = function () {\n        var _a;\n\n        if (this.resumingFrom) {\n          this.resumingFrom.currentAnimation = undefined;\n          this.resumingFrom.preserveOpacity = undefined;\n        }\n\n        (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n        this.resumingFrom = this.currentAnimation = this.animationValues = undefined;\n        this.notifyListeners(\"animationComplete\");\n      };\n\n      ProjectionNode.prototype.finishAnimation = function () {\n        var _a;\n\n        if (this.currentAnimation) {\n          (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n          this.currentAnimation.stop();\n        }\n\n        this.completeAnimation();\n      };\n\n      ProjectionNode.prototype.applyTransformsToTarget = function () {\n        var _a = this.getLead(),\n            targetWithTransforms = _a.targetWithTransforms,\n            target = _a.target,\n            layout = _a.layout,\n            latestValues = _a.latestValues;\n\n        if (!targetWithTransforms || !target || !layout) return;\n        copyBoxInto(targetWithTransforms, target);\n        /**\n         * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n         * This is the final box that we will then project into by calculating a transform delta and\n         * applying it to the corrected box.\n         */\n\n        transformBox(targetWithTransforms, latestValues);\n        /**\n         * Update the delta between the corrected box and the final target box, after\n         * user-set transforms are applied to it. This will be used by the renderer to\n         * create a transform style that will reproject the element from its actual layout\n         * into the desired bounding box.\n         */\n\n        calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n      };\n\n      ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {\n        var _a, _b, _c;\n\n        if (!this.sharedNodes.has(layoutId)) {\n          this.sharedNodes.set(layoutId, new NodeStack());\n        }\n\n        var stack = this.sharedNodes.get(layoutId);\n        stack.add(node);\n        node.promote({\n          transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)\n        });\n      };\n\n      ProjectionNode.prototype.isLead = function () {\n        var stack = this.getStack();\n        return stack ? stack.lead === this : true;\n      };\n\n      ProjectionNode.prototype.getLead = function () {\n        var _a;\n\n        var layoutId = this.options.layoutId;\n        return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n      };\n\n      ProjectionNode.prototype.getPrevLead = function () {\n        var _a;\n\n        var layoutId = this.options.layoutId;\n        return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n      };\n\n      ProjectionNode.prototype.getStack = function () {\n        var layoutId = this.options.layoutId;\n        if (layoutId) return this.root.sharedNodes.get(layoutId);\n      };\n\n      ProjectionNode.prototype.promote = function (_a) {\n        var _b = _a === void 0 ? {} : _a,\n            needsReset = _b.needsReset,\n            transition = _b.transition,\n            preserveFollowOpacity = _b.preserveFollowOpacity;\n\n        var stack = this.getStack();\n        if (stack) stack.promote(this, preserveFollowOpacity);\n\n        if (needsReset) {\n          this.projectionDelta = undefined;\n          this.needsReset = true;\n        }\n\n        if (transition) this.setOptions({\n          transition: transition\n        });\n      };\n\n      ProjectionNode.prototype.relegate = function () {\n        var stack = this.getStack();\n\n        if (stack) {\n          return stack.relegate(this);\n        } else {\n          return false;\n        }\n      };\n\n      ProjectionNode.prototype.resetRotation = function () {\n        var visualElement = this.options.visualElement;\n        if (!visualElement) return; // If there's no detected rotation values, we can early return without a forced render.\n\n        var hasRotate = false; // Keep a record of all the values we've reset\n\n        var resetValues = {}; // Check the rotate value of all axes and reset to 0\n\n        for (var i = 0; i < transformAxes.length; i++) {\n          var axis = transformAxes[i];\n          var key = \"rotate\" + axis; // If this rotation doesn't exist as a motion value, then we don't\n          // need to reset it\n\n          if (!visualElement.getStaticValue(key)) {\n            continue;\n          }\n\n          hasRotate = true; // Record the rotation and then temporarily set it to 0\n\n          resetValues[key] = visualElement.getStaticValue(key);\n          visualElement.setStaticValue(key, 0);\n        } // If there's no rotation values, we don't need to do any more.\n\n\n        if (!hasRotate) return; // Force a render of this element to apply the transform with all rotations\n        // set to 0.\n\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender(); // Put back all the values we reset\n\n        for (var key in resetValues) {\n          visualElement.setStaticValue(key, resetValues[key]);\n        } // Schedule a render for the next frame. This ensures we won't visually\n        // see the element with the reset rotate value applied.\n\n\n        visualElement.scheduleRender();\n      };\n\n      ProjectionNode.prototype.getProjectionStyles = function (styleProp) {\n        var _a, _b, _c, _d, _e, _f;\n\n        if (styleProp === void 0) {\n          styleProp = {};\n        } // TODO: Return lifecycle-persistent object\n\n\n        var styles = {};\n        if (!this.instance || this.isSVG) return styles;\n\n        if (!this.isVisible) {\n          return {\n            visibility: \"hidden\"\n          };\n        } else {\n          styles.visibility = \"\";\n        }\n\n        var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n\n        if (this.needsReset) {\n          this.needsReset = false;\n          styles.opacity = \"\";\n          styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || \"\";\n          styles.transform = transformTemplate ? transformTemplate(this.latestValues, \"\") : \"none\";\n          return styles;\n        }\n\n        var lead = this.getLead();\n\n        if (!this.projectionDelta || !this.layout || !lead.target) {\n          var emptyStyles = {};\n\n          if (this.options.layoutId) {\n            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n            emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || \"\";\n          }\n\n          if (this.hasProjected && !hasTransform(this.latestValues)) {\n            emptyStyles.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n            this.hasProjected = false;\n          }\n\n          return emptyStyles;\n        }\n\n        var valuesToRender = lead.animationValues || lead.latestValues;\n        this.applyTransformsToTarget();\n        styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n\n        if (transformTemplate) {\n          styles.transform = transformTemplate(valuesToRender, styles.transform);\n        }\n\n        var _g = this.projectionDelta,\n            x = _g.x,\n            y = _g.y;\n        styles.transformOrigin = \"\".concat(x.origin * 100, \"% \").concat(y.origin * 100, \"% 0\");\n\n        if (lead.animationValues) {\n          /**\n           * If the lead component is animating, assign this either the entering/leaving\n           * opacity\n           */\n          styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;\n        } else {\n          /**\n           * Or we're not animating at all, set the lead component to its actual\n           * opacity and other components to hidden.\n           */\n          styles.opacity = lead === this ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n        }\n        /**\n         * Apply scale correction\n         */\n\n\n        for (var key in scaleCorrectors) {\n          if (valuesToRender[key] === undefined) continue;\n          var _h = scaleCorrectors[key],\n              correct = _h.correct,\n              applyTo = _h.applyTo;\n          var corrected = correct(valuesToRender[key], lead);\n\n          if (applyTo) {\n            var num = applyTo.length;\n\n            for (var i = 0; i < num; i++) {\n              styles[applyTo[i]] = corrected;\n            }\n          } else {\n            styles[key] = corrected;\n          }\n        }\n        /**\n         * Disable pointer events on follow components. This is to ensure\n         * that if a follow component covers a lead component it doesn't block\n         * pointer events on the lead.\n         */\n\n\n        if (this.options.layoutId) {\n          styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || \"\" : \"none\";\n        }\n\n        return styles;\n      };\n\n      ProjectionNode.prototype.clearSnapshot = function () {\n        this.resumeFrom = this.snapshot = undefined;\n      }; // Only run on root\n\n\n      ProjectionNode.prototype.resetTree = function () {\n        this.root.nodes.forEach(function (node) {\n          var _a;\n\n          return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n        });\n        this.root.nodes.forEach(clearMeasurements);\n        this.root.sharedNodes.clear();\n      };\n\n      return ProjectionNode;\n    }()\n  );\n}\n\nfunction updateLayout(node) {\n  node.updateLayout();\n}\n\nfunction notifyLayoutUpdate(node) {\n  var _a, _b, _c, _d;\n\n  var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n\n  if (node.isLead() && node.layout && snapshot && node.hasListeners(\"didUpdate\")) {\n    var _e = node.layout,\n        layout_1 = _e.actual,\n        measuredLayout = _e.measured; // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n    // animations for instance if layout=\"size\" and an element has only changed position\n\n    if (node.options.animationType === \"size\") {\n      eachAxis(function (axis) {\n        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n        var length = calcLength(axisSnapshot);\n        axisSnapshot.min = layout_1[axis].min;\n        axisSnapshot.max = axisSnapshot.min + length;\n      });\n    } else if (node.options.animationType === \"position\") {\n      eachAxis(function (axis) {\n        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n        var length = calcLength(layout_1[axis]);\n        axisSnapshot.max = axisSnapshot.min + length;\n      });\n    }\n\n    var layoutDelta = createDelta();\n    calcBoxDelta(layoutDelta, layout_1, snapshot.layout);\n    var visualDelta = createDelta();\n\n    if (snapshot.isShared) {\n      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n    } else {\n      calcBoxDelta(visualDelta, layout_1, snapshot.layout);\n    }\n\n    var hasLayoutChanged = !isDeltaZero(layoutDelta);\n    var hasRelativeTargetChanged = false;\n\n    if (!node.resumeFrom) {\n      node.relativeParent = node.getClosestProjectingParent();\n      /**\n       * If the relativeParent is itself resuming from a different element then\n       * the relative snapshot is not relavent\n       */\n\n      if (node.relativeParent && !node.relativeParent.resumeFrom) {\n        var _f = node.relativeParent,\n            parentSnapshot = _f.snapshot,\n            parentLayout = _f.layout;\n\n        if (parentSnapshot && parentLayout) {\n          var relativeSnapshot = createBox();\n          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n          var relativeLayout = createBox();\n          calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);\n\n          if (!boxEquals(relativeSnapshot, relativeLayout)) {\n            hasRelativeTargetChanged = true;\n          }\n        }\n      }\n    }\n\n    node.notifyListeners(\"didUpdate\", {\n      layout: layout_1,\n      snapshot: snapshot,\n      delta: visualDelta,\n      layoutDelta: layoutDelta,\n      hasLayoutChanged: hasLayoutChanged,\n      hasRelativeTargetChanged: hasRelativeTargetChanged\n    });\n  } else if (node.isLead()) {\n    (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n  }\n  /**\n   * Clearing transition\n   * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n   * and why we need it at all\n   */\n\n\n  node.options.transition = undefined;\n}\n\nfunction clearSnapshot(node) {\n  node.clearSnapshot();\n}\n\nfunction clearMeasurements(node) {\n  node.clearMeasurements();\n}\n\nfunction resetTransformStyle(node) {\n  var visualElement = node.options.visualElement;\n\n  if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n    visualElement.notifyBeforeLayoutMeasure();\n  }\n\n  node.resetTransform();\n}\n\nfunction finishAnimation(node) {\n  node.finishAnimation();\n  node.targetDelta = node.relativeTarget = node.target = undefined;\n}\n\nfunction resolveTargetDelta(node) {\n  node.resolveTargetDelta();\n}\n\nfunction calcProjection(node) {\n  node.calcProjection();\n}\n\nfunction resetRotation(node) {\n  node.resetRotation();\n}\n\nfunction removeLeadSnapshots(stack) {\n  stack.removeLeadSnapshot();\n}\n\nfunction mixAxisDelta(output, delta, p) {\n  output.translate = popmotion.mix(delta.translate, 0, p);\n  output.scale = popmotion.mix(delta.scale, 1, p);\n  output.origin = delta.origin;\n  output.originPoint = delta.originPoint;\n}\n\nfunction mixAxis(output, from, to, p) {\n  output.min = popmotion.mix(from.min, to.min, p);\n  output.max = popmotion.mix(from.max, to.max, p);\n}\n\nfunction mixBox(output, from, to, p) {\n  mixAxis(output.x, from.x, to.x, p);\n  mixAxis(output.y, from.y, to.y, p);\n}\n\nfunction hasOpacityCrossfade(node) {\n  return node.animationValues && node.animationValues.opacityExit !== undefined;\n}\n\nvar defaultLayoutTransition = {\n  duration: 0.45,\n  ease: [0.4, 0, 0.1, 1]\n};\n\nfunction mountNodeEarly(node, id) {\n  /**\n   * Rather than searching the DOM from document we can search the\n   * path for the deepest mounted ancestor and search from there\n   */\n  var searchNode = node.root;\n\n  for (var i = node.path.length - 1; i >= 0; i--) {\n    if (Boolean(node.path[i].instance)) {\n      searchNode = node.path[i];\n      break;\n    }\n  }\n\n  var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n  var element = searchElement.querySelector(\"[data-projection-id=\\\"\".concat(id, \"\\\"]\"));\n  if (element) node.mount(element, true);\n}\n\nfunction roundAxis(axis) {\n  axis.min = Math.round(axis.min);\n  axis.max = Math.round(axis.max);\n}\n\nfunction roundBox(box) {\n  roundAxis(box.x);\n  roundAxis(box.y);\n}\n\nvar id$1 = 1;\n\nfunction useProjectionId() {\n  return useConstant(function () {\n    if (globalProjectionState.hasEverUpdated) {\n      return id$1++;\n    }\n  });\n}\n\nvar LayoutGroupContext = React.createContext({});\n/**\n * Internal, exported only for usage in Framer\n */\n\nvar SwitchLayoutGroupContext = React.createContext({});\n\nfunction useProjection(projectionId, _a, visualElement, ProjectionNodeConstructor) {\n  var _b;\n\n  var layoutId = _a.layoutId,\n      layout = _a.layout,\n      drag = _a.drag,\n      dragConstraints = _a.dragConstraints,\n      layoutScroll = _a.layoutScroll;\n  var initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);\n\n  if (!ProjectionNodeConstructor || !visualElement || (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n    return;\n  }\n\n  visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_b = visualElement.parent) === null || _b === void 0 ? void 0 : _b.projection);\n  visualElement.projection.setOptions({\n    layoutId: layoutId,\n    layout: layout,\n    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n    visualElement: visualElement,\n    scheduleRender: function () {\n      return visualElement.scheduleRender();\n    },\n\n    /**\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\n     * to update by the time layout animations run.\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n     * ensuring it gets called if there's no potential layout animations.\n     *\n     */\n    animationType: typeof layout === \"string\" ? layout : \"both\",\n    initialPromotionConfig: initialPromotionConfig,\n    layoutScroll: layoutScroll\n  });\n}\n\nvar VisualElementHandler =\n/** @class */\nfunction (_super) {\n  tslib.__extends(VisualElementHandler, _super);\n\n  function VisualElementHandler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Update visual element props as soon as we know this update is going to be commited.\n   */\n\n\n  VisualElementHandler.prototype.getSnapshotBeforeUpdate = function () {\n    this.updateProps();\n    return null;\n  };\n\n  VisualElementHandler.prototype.componentDidUpdate = function () {};\n\n  VisualElementHandler.prototype.updateProps = function () {\n    var _a = this.props,\n        visualElement = _a.visualElement,\n        props = _a.props;\n    if (visualElement) visualElement.setProps(props);\n  };\n\n  VisualElementHandler.prototype.render = function () {\n    return this.props.children;\n  };\n\n  return VisualElementHandler;\n}(React__default[\"default\"].Component);\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\n\n\nfunction createMotionComponent(_a) {\n  var preloadedFeatures = _a.preloadedFeatures,\n      createVisualElement = _a.createVisualElement,\n      projectionNodeConstructor = _a.projectionNodeConstructor,\n      useRender = _a.useRender,\n      useVisualState = _a.useVisualState,\n      Component = _a.Component;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    var layoutId = useLayoutId(props);\n    props = tslib.__assign(tslib.__assign({}, props), {\n      layoutId: layoutId\n    });\n    /**\n     * If we're rendering in a static environment, we only visually update the component\n     * as a result of a React-rerender rather than interactions or animations. This\n     * means we don't need to load additional memory structures like VisualElement,\n     * or any gesture/animation features.\n     */\n\n    var config = React.useContext(MotionConfigContext);\n    var features = null;\n    var context = useCreateMotionContext(props);\n    /**\n     * Create a unique projection ID for this component. If a new component is added\n     * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n     * us to measure it as soon as any layout effect flushes pending layout animations.\n     *\n     * Performance note: It'd be better not to have to search the DOM for these elements.\n     * For newly-entering components it could be enough to only correct treeScale, in which\n     * case we could mount in a scale-correction mode. This wouldn't be enough for\n     * shared element transitions however. Perhaps for those we could revert to a root node\n     * that gets forceRendered and layout animations are triggered on its layout effect.\n     */\n\n    var projectionId = config.isStatic ? undefined : useProjectionId();\n    /**\n     *\n     */\n\n    var visualState = useVisualState(props, config.isStatic);\n\n    if (!config.isStatic && isBrowser) {\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, tslib.__assign(tslib.__assign({}, config), props), createVisualElement);\n      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);\n      /**\n       * Load Motion gesture and animation features. These are rendered as renderless\n       * components so each feature can optionally make use of React lifecycle methods.\n       */\n\n      features = useFeatures(props, context.visualElement, preloadedFeatures);\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n\n\n    return React__namespace.createElement(VisualElementHandler, {\n      visualElement: context.visualElement,\n      props: tslib.__assign(tslib.__assign({}, config), props)\n    }, features, React__namespace.createElement(MotionContext.Provider, {\n      value: context\n    }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement)));\n  }\n\n  return React.forwardRef(MotionComponent);\n}\n\nfunction useLayoutId(_a) {\n  var _b;\n\n  var layoutId = _a.layoutId;\n  var layoutGroupId = (_b = React.useContext(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\n\n\nfunction createMotionProxy(createConfig) {\n  function custom(Component, customMotionComponentConfig) {\n    if (customMotionComponentConfig === void 0) {\n      customMotionComponentConfig = {};\n    }\n\n    return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n  }\n\n  if (typeof Proxy === \"undefined\") {\n    return custom;\n  }\n  /**\n   * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n   * Rather than generating them anew every render.\n   */\n\n\n  var componentCache = new Map();\n  return new Proxy(custom, {\n    /**\n     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n     * The prop name is passed through as `key` and we can use that to generate a `motion`\n     * DOM component with that name.\n     */\n    get: function (_target, key) {\n      /**\n       * If this element doesn't exist in the component cache, create it and cache.\n       */\n      if (!componentCache.has(key)) {\n        componentCache.set(key, custom(key));\n      }\n\n      return componentCache.get(key);\n    }\n  });\n}\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\n\n\nvar lowercaseSVGElements = [\"animate\", \"circle\", \"defs\", \"desc\", \"ellipse\", \"g\", \"image\", \"line\", \"filter\", \"marker\", \"mask\", \"metadata\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"rect\", \"stop\", \"svg\", \"switch\", \"symbol\", \"text\", \"tspan\", \"use\", \"view\"];\n\nfunction isSVGComponent(Component) {\n  if (\n  /**\n   * If it's not a string, it's a custom React component. Currently we only support\n   * HTML custom React components.\n   */\n  typeof Component !== \"string\" ||\n  /**\n   * If it contains a dash, the element is a custom HTML webcomponent.\n   */\n  Component.includes(\"-\")) {\n    return false;\n  } else if (\n  /**\n   * If it's in our list of lowercase SVG tags, it's an SVG component\n   */\n  lowercaseSVGElements.indexOf(Component) > -1 ||\n  /**\n   * If it contains a capital letter, it's an SVG component\n   */\n  /[A-Z]/.test(Component)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isForcedMotionValue(key, _a) {\n  var layout = _a.layout,\n      layoutId = _a.layoutId;\n  return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== undefined) && (!!scaleCorrectors[key] || key === \"opacity\");\n}\n\nvar translateAlias = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\",\n  transformPerspective: \"perspective\"\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\n\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n  var transform = _a.transform,\n      transformKeys = _a.transformKeys;\n  var _c = _b.enableHardwareAcceleration,\n      enableHardwareAcceleration = _c === void 0 ? true : _c,\n      _d = _b.allowTransformNone,\n      allowTransformNone = _d === void 0 ? true : _d; // The transform string we're going to build into.\n\n  var transformString = \"\"; // Transform keys into their default order - this will determine the output order.\n\n  transformKeys.sort(sortTransformProps); // Track whether the defined transform has a defined z so we don't add a\n  // second to enable hardware acceleration\n\n  var transformHasZ = false; // Loop over each transform and build them into transformString\n\n  var numTransformKeys = transformKeys.length;\n\n  for (var i = 0; i < numTransformKeys; i++) {\n    var key = transformKeys[i];\n    transformString += \"\".concat(translateAlias[key] || key, \"(\").concat(transform[key], \") \");\n    if (key === \"z\") transformHasZ = true;\n  }\n\n  if (!transformHasZ && enableHardwareAcceleration) {\n    transformString += \"translateZ(0)\";\n  } else {\n    transformString = transformString.trim();\n  } // If we have a custom `transform` template, pass our transform values and\n  // generated transformString to that before returning\n\n\n  if (transformTemplate) {\n    transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n  } else if (allowTransformNone && transformIsDefault) {\n    transformString = \"none\";\n  }\n\n  return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\n\n\nfunction buildTransformOrigin(_a) {\n  var _b = _a.originX,\n      originX = _b === void 0 ? \"50%\" : _b,\n      _c = _a.originY,\n      originY = _c === void 0 ? \"50%\" : _c,\n      _d = _a.originZ,\n      originZ = _d === void 0 ? 0 : _d;\n  return \"\".concat(originX, \" \").concat(originY, \" \").concat(originZ);\n}\n/**\n * Returns true if the provided key is a CSS variable\n */\n\n\nfunction isCSSVariable$1(key) {\n  return key.startsWith(\"--\");\n}\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\n\n\nvar getValueAsType = function (value, type) {\n  return type && typeof value === \"number\" ? type.transform(value) : value;\n};\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var _a;\n\n  var style = state.style,\n      vars = state.vars,\n      transform = state.transform,\n      transformKeys = state.transformKeys,\n      transformOrigin = state.transformOrigin; // Empty the transformKeys array. As we're throwing out refs to its items\n  // this might not be as cheap as suspected. Maybe using the array as a buffer\n  // with a manual incrementation would be better.\n\n  transformKeys.length = 0; // Track whether we encounter any transform or transformOrigin values.\n\n  var hasTransform = false;\n  var hasTransformOrigin = false; // Does the calculated transform essentially equal \"none\"?\n\n  var transformIsNone = true;\n  /**\n   * Loop over all our latest animated values and decide whether to handle them\n   * as a style or CSS variable.\n   *\n   * Transforms and transform origins are kept seperately for further processing.\n   */\n\n  for (var key in latestValues) {\n    var value = latestValues[key];\n    /**\n     * If this is a CSS variable we don't do any further processing.\n     */\n\n    if (isCSSVariable$1(key)) {\n      vars[key] = value;\n      continue;\n    } // Convert the value to its default value type, ie 0 -> \"0px\"\n\n\n    var valueType = numberValueTypes[key];\n    var valueAsType = getValueAsType(value, valueType);\n\n    if (isTransformProp(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      transformKeys.push(key); // If we already know we have a non-default transform, early return\n\n      if (!transformIsNone) continue; // Otherwise check to see if this is a default transform\n\n      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0)) transformIsNone = false;\n    } else if (isTransformOriginProp(key)) {\n      transformOrigin[key] = valueAsType; // If this is a transform origin, flag and enable further transform-origin processing\n\n      hasTransformOrigin = true;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n\n  if (hasTransform) {\n    style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n  } else if (transformTemplate) {\n    style.transform = transformTemplate({}, \"\");\n  } else if (!latestValues.transform && style.transform) {\n    style.transform = \"none\";\n  }\n\n  if (hasTransformOrigin) {\n    style.transformOrigin = buildTransformOrigin(transformOrigin);\n  }\n}\n\nvar createHtmlRenderState = function () {\n  return {\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {}\n  };\n};\n\nfunction copyRawValuesOnly(target, source, props) {\n  for (var key in source) {\n    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n  var transformTemplate = _a.transformTemplate;\n  return React.useMemo(function () {\n    var state = createHtmlRenderState();\n    buildHTMLStyles(state, visualState, {\n      enableHardwareAcceleration: !isStatic\n    }, transformTemplate);\n    var vars = state.vars,\n        style = state.style;\n    return tslib.__assign(tslib.__assign({}, vars), style);\n  }, [visualState]);\n}\n\nfunction useStyle(props, visualState, isStatic) {\n  var styleProp = props.style || {};\n  var style = {};\n  /**\n   * Copy non-Motion Values straight into style\n   */\n\n  copyRawValuesOnly(style, styleProp, props);\n  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n\n  if (props.transformValues) {\n    style = props.transformValues(style);\n  }\n\n  return style;\n}\n\nfunction useHTMLProps(props, visualState, isStatic) {\n  // The `any` isn't ideal but it is the type of createElement props argument\n  var htmlProps = {};\n  var style = useStyle(props, visualState, isStatic);\n\n  if (Boolean(props.drag) && props.dragListener !== false) {\n    // Disable the ghost element when a user drags\n    htmlProps.draggable = false; // Disable text selection\n\n    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = \"none\"; // Disable scrolling on the draggable direction\n\n    style.touchAction = props.drag === true ? \"none\" : \"pan-\".concat(props.drag === \"x\" ? \"y\" : \"x\");\n  }\n\n  htmlProps.style = style;\n  return htmlProps;\n}\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\n\n\nvar validMotionProps = new Set([\"initial\", \"animate\", \"exit\", \"style\", \"variants\", \"transition\", \"transformTemplate\", \"transformValues\", \"custom\", \"inherit\", \"layout\", \"layoutId\", \"layoutDependency\", \"onLayoutAnimationStart\", \"onLayoutAnimationComplete\", \"onLayoutMeasure\", \"onBeforeLayoutMeasure\", \"onAnimationStart\", \"onAnimationComplete\", \"onUpdate\", \"onDragStart\", \"onDrag\", \"onDragEnd\", \"onMeasureDragConstraints\", \"onDirectionLock\", \"onDragTransitionEnd\", \"drag\", \"dragControls\", \"dragListener\", \"dragConstraints\", \"dragDirectionLock\", \"dragSnapToOrigin\", \"_dragX\", \"_dragY\", \"dragElastic\", \"dragMomentum\", \"dragPropagation\", \"dragTransition\", \"whileDrag\", \"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"onHoverStart\", \"onHoverEnd\", \"whileFocus\", \"whileTap\", \"whileHover\", \"whileInView\", \"onViewportEnter\", \"onViewportLeave\", \"viewport\", \"layoutScroll\"]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\n\nfunction isValidMotionProp(key) {\n  return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) {\n  return !isValidMotionProp(key);\n};\n\nfunction loadExternalIsValidProp(isValidProp) {\n  if (!isValidProp) return; // Explicitly filter our events\n\n  shouldForward = function (key) {\n    return key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n  };\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\n\n\ntry {\n  /**\n   * We attempt to import this package but require won't be defined in esm environments, in that case\n   * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n   * in favour of explicit injection.\n   */\n  loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n} catch (_a) {// We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\n\nfunction filterProps(props, isDom, forwardMotionProps) {\n  var filteredProps = {};\n\n  for (var key in props) {\n    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners\n    props[\"draggable\"] && key.startsWith(\"onDrag\")) {\n      filteredProps[key] = props[key];\n    }\n  }\n\n  return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n  return typeof origin === \"string\" ? origin : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\n\n\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n  var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n  var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n  return \"\".concat(pxOriginX, \" \").concat(pxOriginY);\n}\n\nvar dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nvar camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\n\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n  if (spacing === void 0) {\n    spacing = 1;\n  }\n\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (useDashCase === void 0) {\n    useDashCase = true;\n  } // Normalise path length by setting SVG attribute pathLength to 1\n\n\n  attrs.pathLength = 1; // We use dash case when setting attributes directly to the DOM node and camel case\n  // when defining props on a React component.\n\n  var keys = useDashCase ? dashKeys : camelKeys; // Build the dash offset\n\n  attrs[keys.offset] = styleValueTypes.px.transform(-offset); // Build the dash array\n\n  var pathLength = styleValueTypes.px.transform(length);\n  var pathSpacing = styleValueTypes.px.transform(spacing);\n  attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n}\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\n\n\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\n  var attrX = _a.attrX,\n      attrY = _a.attrY,\n      originX = _a.originX,\n      originY = _a.originY,\n      pathLength = _a.pathLength,\n      _b = _a.pathSpacing,\n      pathSpacing = _b === void 0 ? 1 : _b,\n      _c = _a.pathOffset,\n      pathOffset = _c === void 0 ? 0 : _c,\n      // This is object creation, which we try to avoid per-frame.\n  latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n\n  buildHTMLStyles(state, latest, options, transformTemplate);\n  state.attrs = state.style;\n  state.style = {};\n  var attrs = state.attrs,\n      style = state.style,\n      dimensions = state.dimensions;\n  /**\n   * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n   * and copy it into style.\n   */\n\n  if (attrs.transform) {\n    if (dimensions) style.transform = attrs.transform;\n    delete attrs.transform;\n  } // Parse transformOrigin\n\n\n  if (dimensions && (originX !== undefined || originY !== undefined || style.transform)) {\n    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n  } // Treat x/y not as shortcuts but as actual attributes\n\n\n  if (attrX !== undefined) attrs.x = attrX;\n  if (attrY !== undefined) attrs.y = attrY; // Build SVG path if one has been defined\n\n  if (pathLength !== undefined) {\n    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n  }\n}\n\nvar createSvgRenderState = function () {\n  return tslib.__assign(tslib.__assign({}, createHtmlRenderState()), {\n    attrs: {}\n  });\n};\n\nfunction useSVGProps(props, visualState) {\n  var visualProps = React.useMemo(function () {\n    var state = createSvgRenderState();\n    buildSVGAttrs(state, visualState, {\n      enableHardwareAcceleration: false\n    }, props.transformTemplate);\n    return tslib.__assign(tslib.__assign({}, state.attrs), {\n      style: tslib.__assign({}, state.style)\n    });\n  }, [visualState]);\n\n  if (props.style) {\n    var rawStyles = {};\n    copyRawValuesOnly(rawStyles, props.style, props);\n    visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);\n  }\n\n  return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps) {\n  if (forwardMotionProps === void 0) {\n    forwardMotionProps = false;\n  }\n\n  var useRender = function (Component, props, projectionId, ref, _a, isStatic) {\n    var latestValues = _a.latestValues;\n    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic);\n    var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n\n    var elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), {\n      ref: ref\n    });\n\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n\n    return React.createElement(Component, elementProps);\n  };\n\n  return useRender;\n}\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\n\nvar camelToDash = function (str) {\n  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nfunction renderHTML(element, _a, styleProp, projection) {\n  var style = _a.style,\n      vars = _a.vars;\n  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp)); // Loop over any CSS variables and assign those.\n\n  for (var key in vars) {\n    element.style.setProperty(key, vars[key]);\n  }\n}\n/**\n * A set of attribute names that are always read/written as camel case.\n */\n\n\nvar camelCaseAttributes = new Set([\"baseFrequency\", \"diffuseConstant\", \"kernelMatrix\", \"kernelUnitLength\", \"keySplines\", \"keyTimes\", \"limitingConeAngle\", \"markerHeight\", \"markerWidth\", \"numOctaves\", \"targetX\", \"targetY\", \"surfaceScale\", \"specularConstant\", \"specularExponent\", \"stdDeviation\", \"tableValues\", \"viewBox\", \"gradientTransform\", \"pathLength\"]);\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n  renderHTML(element, renderState, undefined, projection);\n\n  for (var key in renderState.attrs) {\n    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n  }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n  var style = props.style;\n  var newValues = {};\n\n  for (var key in style) {\n    if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n      newValues[key] = style[key];\n    }\n  }\n\n  return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n  var newValues = scrapeMotionValuesFromProps$1(props);\n\n  for (var key in props) {\n    if (isMotionValue(props[key])) {\n      var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n      newValues[targetKey] = props[key];\n    }\n  }\n\n  return newValues;\n}\n\nfunction isAnimationControls(v) {\n  return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n  var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps,\n      createRenderState = _a.createRenderState,\n      onMount = _a.onMount;\n  var state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n\n  if (onMount) {\n    state.mount = function (instance) {\n      return onMount(props, instance, state);\n    };\n  }\n\n  return state;\n}\n\nvar makeUseVisualState = function (config) {\n  return function (props, isStatic) {\n    var context = React.useContext(MotionContext);\n    var presenceContext = React.useContext(PresenceContext);\n    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function () {\n      return makeState(config, props, context, presenceContext);\n    });\n  };\n};\n\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  var values = {};\n  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  var motionValues = scrapeMotionValues(props);\n\n  for (var key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n\n  var initial = props.initial,\n      animate = props.animate;\n  var isControllingVariants = checkIfControllingVariants(props);\n  var isVariantNode = checkIfVariantNode(props);\n\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate !== null && animate !== void 0 ? animate : animate = context.animate;\n  }\n\n  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n  var variantToSet = initialAnimationIsBlocked ? animate : initial;\n\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(function (definition) {\n      var resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n      var transitionEnd = resolved.transitionEnd;\n      resolved.transition;\n\n      var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n\n      for (var key in target) {\n        var valueTarget = target[key];\n\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          var index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n\n      for (var key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n\n  return values;\n}\n\nvar svgMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n    onMount: function (props, instance, _a) {\n      var renderState = _a.renderState,\n          latestValues = _a.latestValues;\n\n      try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n      } catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      buildSVGAttrs(renderState, latestValues, {\n        enableHardwareAcceleration: false\n      }, props.transformTemplate);\n      renderSVG(instance, renderState);\n    }\n  })\n};\nvar htmlMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    createRenderState: createHtmlRenderState\n  })\n};\n\nfunction createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n  var _b = _a.forwardMotionProps,\n      forwardMotionProps = _b === void 0 ? false : _b;\n  var baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;\n  return tslib.__assign(tslib.__assign({}, baseConfig), {\n    preloadedFeatures: preloadedFeatures,\n    useRender: createUseRender(forwardMotionProps),\n    createVisualElement: createVisualElement,\n    projectionNodeConstructor: projectionNodeConstructor,\n    Component: Component\n  });\n}\n\nexports.AnimationType = void 0;\n\n(function (AnimationType) {\n  AnimationType[\"Animate\"] = \"animate\";\n  AnimationType[\"Hover\"] = \"whileHover\";\n  AnimationType[\"Tap\"] = \"whileTap\";\n  AnimationType[\"Drag\"] = \"whileDrag\";\n  AnimationType[\"Focus\"] = \"whileFocus\";\n  AnimationType[\"InView\"] = \"whileInView\";\n  AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n  if (options === void 0) {\n    options = {\n      passive: true\n    };\n  }\n\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    return target.removeEventListener(eventName, handler);\n  };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\n\n\nfunction useDomEvent(ref, eventName, handler, options) {\n  React.useEffect(function () {\n    var element = ref.current;\n\n    if (handler && element) {\n      return addDomEvent(element, eventName, handler, options);\n    }\n  }, [ref, eventName, handler, options]);\n}\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\n\n\nfunction useFocusGesture(_a) {\n  var whileFocus = _a.whileFocus,\n      visualElement = _a.visualElement;\n\n  var onFocus = function () {\n    var _a;\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, true);\n  };\n\n  var onBlur = function () {\n    var _a;\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, false);\n  };\n\n  useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n  useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n  // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n  if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof MouseEvent;\n}\n\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\n\n\nfunction filterPrimaryPointer(eventHandler) {\n  return function (event) {\n    var isMouseEvent = event instanceof MouseEvent;\n    var isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n  var point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction pointFromMouse(point, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction extractEventInfo(event, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\n\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n\n  var listener = function (event) {\n    return handler(event, extractEventInfo(event));\n  };\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n}; // We check for event support via functions in case they've been mocked by a testing suite.\n\n\nvar supportsPointerEvents = function () {\n  return isBrowser && window.onpointerdown === null;\n};\n\nvar supportsTouchEvents = function () {\n  return isBrowser && window.ontouchstart === null;\n};\n\nvar supportsMouseEvents = function () {\n  return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\n\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  } else if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  } else if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\n\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction usePointerEvent(ref, eventName, handler, options) {\n  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n  var lock = null;\n  return function () {\n    var openLock = function () {\n      lock = null;\n    };\n\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n\n    return false;\n  };\n}\n\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\n\nfunction getGlobalLock(drag) {\n  var lock = false;\n\n  if (drag === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    var openHorizontal_1 = globalHorizontalLock();\n    var openVertical_1 = globalVerticalLock();\n\n    if (openHorizontal_1 && openVertical_1) {\n      lock = function () {\n        openHorizontal_1();\n        openVertical_1();\n      };\n    } else {\n      // Release the locks because we don't use them\n      if (openHorizontal_1) openHorizontal_1();\n      if (openVertical_1) openVertical_1();\n    }\n  }\n\n  return lock;\n}\n\nfunction isDragActive() {\n  // Check the gesture lock - if we get it, it means no drag gesture is active\n  // and we can safely fire the tap gesture.\n  var openGestureLock = getGlobalLock(true);\n  if (!openGestureLock) return true;\n  openGestureLock();\n  return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n  return function (event, info) {\n    var _a;\n\n    if (!isMouseEvent(event) || isDragActive()) return;\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Hover, isActive);\n    callback === null || callback === void 0 ? void 0 : callback(event, info);\n  };\n}\n\nfunction useHoverGesture(_a) {\n  var onHoverStart = _a.onHoverStart,\n      onHoverEnd = _a.onHoverEnd,\n      whileHover = _a.whileHover,\n      visualElement = _a.visualElement;\n  usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement, true, onHoverStart) : undefined, {\n    passive: !onHoverStart\n  });\n  usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement, false, onHoverEnd) : undefined, {\n    passive: !onHoverEnd\n  });\n}\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\n\n\nvar isNodeOrChild = function (parent, child) {\n  if (!child) {\n    return false;\n  } else if (parent === child) {\n    return true;\n  } else {\n    return isNodeOrChild(parent, child.parentElement);\n  }\n};\n\nfunction useUnmountEffect(callback) {\n  return React.useEffect(function () {\n    return function () {\n      return callback();\n    };\n  }, []);\n}\n/**\n * @param handlers -\n * @internal\n */\n\n\nfunction useTapGesture(_a) {\n  var onTap = _a.onTap,\n      onTapStart = _a.onTapStart,\n      onTapCancel = _a.onTapCancel,\n      whileTap = _a.whileTap,\n      visualElement = _a.visualElement;\n  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n  var isPressing = React.useRef(false);\n  var cancelPointerEndListeners = React.useRef(null);\n  /**\n   * Only set listener to passive if there are no external listeners.\n   */\n\n  var eventOptions = {\n    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)\n  };\n\n  function removePointerEndListener() {\n    var _a;\n\n    (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n    cancelPointerEndListeners.current = null;\n  }\n\n  function checkPointerEnd() {\n    var _a;\n\n    removePointerEndListener();\n    isPressing.current = false;\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, false);\n    return !isDragActive();\n  }\n\n  function onPointerUp(event, info) {\n    if (!checkPointerEnd()) return;\n    /**\n     * We only count this as a tap gesture if the event.target is the same\n     * as, or a child of, this component's element\n     */\n\n    !isNodeOrChild(visualElement.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n  }\n\n  function onPointerCancel(event, info) {\n    if (!checkPointerEnd()) return;\n    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n  }\n\n  function onPointerDown(event, info) {\n    var _a;\n\n    removePointerEndListener();\n    if (isPressing.current) return;\n    isPressing.current = true;\n    cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, true);\n    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n  }\n\n  usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n  useUnmountEffect(removePointerEndListener);\n}\n\nvar warned = new Set();\n\nfunction warnOnce(condition, message, element) {\n  if (condition || warned.has(message)) return;\n  console.warn(message);\n  if (element) console.warn(element);\n  warned.add(message);\n}\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\n\n\nvar observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\n\nvar observers = new WeakMap();\n\nvar fireObserverCallback = function (entry) {\n  var _a;\n\n  (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\n\nvar fireAllObserverCallbacks = function (entries) {\n  entries.forEach(fireObserverCallback);\n};\n\nfunction initIntersectionObserver(_a) {\n  var root = _a.root,\n      options = tslib.__rest(_a, [\"root\"]);\n\n  var lookupRoot = root || document;\n  /**\n   * If we don't have an observer lookup map for this root, create one.\n   */\n\n  if (!observers.has(lookupRoot)) {\n    observers.set(lookupRoot, {});\n  }\n\n  var rootObservers = observers.get(lookupRoot);\n  var key = JSON.stringify(options);\n  /**\n   * If we don't have an observer for this combination of root and settings,\n   * create one.\n   */\n\n  if (!rootObservers[key]) {\n    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, tslib.__assign({\n      root: root\n    }, options));\n  }\n\n  return rootObservers[key];\n}\n\nfunction observeIntersection(element, options, callback) {\n  var rootInteresectionObserver = initIntersectionObserver(options);\n  observerCallbacks.set(element, callback);\n  rootInteresectionObserver.observe(element);\n  return function () {\n    observerCallbacks.delete(element);\n    rootInteresectionObserver.unobserve(element);\n  };\n}\n\nfunction useViewport(_a) {\n  var visualElement = _a.visualElement,\n      whileInView = _a.whileInView,\n      onViewportEnter = _a.onViewportEnter,\n      onViewportLeave = _a.onViewportLeave,\n      _b = _a.viewport,\n      viewport = _b === void 0 ? {} : _b;\n  var state = React.useRef({\n    hasEnteredView: false,\n    isInView: false\n  });\n  var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n  if (viewport.once && state.current.hasEnteredView) shouldObserve = false;\n  var useObserver = typeof IntersectionObserver === \"undefined\" ? useMissingIntersectionObserver : useIntersectionObserver;\n  useObserver(shouldObserve, state.current, visualElement, viewport);\n}\n\nvar thresholdNames = {\n  some: 0,\n  all: 1\n};\n\nfunction useIntersectionObserver(shouldObserve, state, visualElement, _a) {\n  var root = _a.root,\n      rootMargin = _a.margin,\n      _b = _a.amount,\n      amount = _b === void 0 ? \"some\" : _b,\n      once = _a.once;\n  React.useEffect(function () {\n    if (!shouldObserve) return;\n    var options = {\n      root: root === null || root === void 0 ? void 0 : root.current,\n      rootMargin: rootMargin,\n      threshold: typeof amount === \"number\" ? amount : thresholdNames[amount]\n    };\n\n    var intersectionCallback = function (entry) {\n      var _a;\n\n      var isIntersecting = entry.isIntersecting;\n      /**\n       * If there's been no change in the viewport state, early return.\n       */\n\n      if (state.isInView === isIntersecting) return;\n      state.isInView = isIntersecting;\n      /**\n       * Handle hasEnteredView. If this is only meant to run once, and\n       * element isn't visible, early return. Otherwise set hasEnteredView to true.\n       */\n\n      if (once && !isIntersecting && state.hasEnteredView) {\n        return;\n      } else if (isIntersecting) {\n        state.hasEnteredView = true;\n      }\n\n      (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, isIntersecting);\n      /**\n       * Use the latest committed props rather than the ones in scope\n       * when this observer is created\n       */\n\n      var props = visualElement.getProps();\n      var callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;\n      callback === null || callback === void 0 ? void 0 : callback(entry);\n    };\n\n    return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n  }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\n\n\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {\n  var _b = _a.fallback,\n      fallback = _b === void 0 ? true : _b;\n  React.useEffect(function () {\n    if (!shouldObserve || !fallback) return;\n\n    if (env !== \"production\") {\n      warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n    }\n    /**\n     * Fire this in an rAF because, at this point, the animation state\n     * won't have flushed for the first time and there's certain logic in\n     * there that behaves differently on the initial animation.\n     *\n     * This hook should be quite rarely called so setting this in an rAF\n     * is preferred to changing the behaviour of the animation state.\n     */\n\n\n    requestAnimationFrame(function () {\n      var _a;\n\n      state.hasEnteredView = true;\n      var onViewportEnter = visualElement.getProps().onViewportEnter;\n      onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n      (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, true);\n    });\n  }, [shouldObserve]);\n}\n\nvar makeRenderlessComponent = function (hook) {\n  return function (props) {\n    hook(props);\n    return null;\n  };\n};\n\nvar gestureAnimations = {\n  inView: makeRenderlessComponent(useViewport),\n  tap: makeRenderlessComponent(useTapGesture),\n  focus: makeRenderlessComponent(useFocusGesture),\n  hover: makeRenderlessComponent(useHoverGesture)\n};\nvar counter = 0;\n\nvar incrementId = function () {\n  return counter++;\n};\n\nvar useId = function () {\n  return useConstant(incrementId);\n};\n/**\n * Ideally we'd use the following code to support React 18 optionally.\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\n * Need to come up with a different way of figuring this out.\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\n\n\nfunction usePresence() {\n  var context = React.useContext(PresenceContext);\n  if (context === null) return [true, null];\n  var isPresent = context.isPresent,\n      onExitComplete = context.onExitComplete,\n      register = context.register; // It's safe to call the following hooks conditionally (after an early return) because the context will always\n  // either be null or non-null for the lifespan of the component.\n  // Replace with useId when released in React\n\n  var id = useId();\n  React.useEffect(function () {\n    return register(id);\n  }, []);\n\n  var safeToRemove = function () {\n    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id);\n  };\n\n  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useIsPresent() {\n  return isPresent(React.useContext(PresenceContext));\n}\n\nfunction isPresent(context) {\n  return context === null ? true : context.isPresent;\n}\n\nfunction shallowCompare(next, prev) {\n  if (!Array.isArray(prev)) return false;\n  var prevLength = prev.length;\n  if (prevLength !== next.length) return false;\n\n  for (var i = 0; i < prevLength; i++) {\n    if (prev[i] !== next[i]) return false;\n  }\n\n  return true;\n}\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\n\n\nvar isNumericalString = function (v) {\n  return /^\\-?\\d*\\.?\\d+$/.test(v);\n};\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\n\n\nvar isZeroValueString = function (v) {\n  return /^0[^.\\s]+$/.test(v);\n};\n/**\n * Tests a provided value against a ValueType\n */\n\n\nvar testValueType = function (v) {\n  return function (type) {\n    return type.test(v);\n  };\n};\n/**\n * ValueType for \"auto\"\n */\n\n\nvar auto = {\n  test: function (v) {\n    return v === \"auto\";\n  },\n  parse: function (v) {\n    return v;\n  }\n};\n/**\n * A list of value types commonly used for dimensions\n */\n\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\n\nvar findDimensionValueType = function (v) {\n  return dimensionValueTypes.find(testValueType(v));\n};\n/**\n * A list of all ValueTypes\n */\n\n\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes), false), [styleValueTypes.color, styleValueTypes.complex], false);\n/**\n * Tests a value against the list of ValueTypes\n */\n\n\nvar findValueType = function (v) {\n  return valueTypes.find(testValueType(v));\n};\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\n\n\nfunction setMotionValue(visualElement, key, value) {\n  if (visualElement.hasValue(key)) {\n    visualElement.getValue(key).set(value);\n  } else {\n    visualElement.addValue(key, motionValue(value));\n  }\n}\n\nfunction setTarget(visualElement, definition) {\n  var resolved = resolveVariant(visualElement, definition);\n\n  var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {},\n      _b = _a.transitionEnd,\n      transitionEnd = _b === void 0 ? {} : _b;\n\n  _a.transition;\n\n  var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n\n  target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n\n  for (var key in target) {\n    var value = resolveFinalValueInKeyframes(target[key]);\n    setMotionValue(visualElement, key, value);\n  }\n}\n\nfunction setVariants(visualElement, variantLabels) {\n  var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels), false).reverse();\n\n  reversedLabels.forEach(function (key) {\n    var _a;\n\n    var variant = visualElement.getVariant(key);\n    variant && setTarget(visualElement, variant);\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      setVariants(child, variantLabels);\n    });\n  });\n}\n\nfunction setValues(visualElement, definition) {\n  if (Array.isArray(definition)) {\n    return setVariants(visualElement, definition);\n  } else if (typeof definition === \"string\") {\n    return setVariants(visualElement, [definition]);\n  } else {\n    setTarget(visualElement, definition);\n  }\n}\n\nfunction checkTargetForNewValues(visualElement, target, origin) {\n  var _a, _b, _c;\n\n  var _d;\n\n  var newValueKeys = Object.keys(target).filter(function (key) {\n    return !visualElement.hasValue(key);\n  });\n  var numNewValues = newValueKeys.length;\n  if (!numNewValues) return;\n\n  for (var i = 0; i < numNewValues; i++) {\n    var key = newValueKeys[i];\n    var targetValue = target[key];\n    var value = null;\n    /**\n     * If the target is a series of keyframes, we can use the first value\n     * in the array. If this first value is null, we'll still need to read from the DOM.\n     */\n\n    if (Array.isArray(targetValue)) {\n      value = targetValue[0];\n    }\n    /**\n     * If the target isn't keyframes, or the first keyframe was null, we need to\n     * first check if an origin value was explicitly defined in the transition as \"from\",\n     * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n     */\n\n\n    if (value === null) {\n      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n    }\n    /**\n     * If value is still undefined or null, ignore it. Preferably this would throw,\n     * but this was causing issues in Framer.\n     */\n\n\n    if (value === undefined || value === null) continue;\n\n    if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n      // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n      value = parseFloat(value);\n    } else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n      value = getAnimatableNone(key, targetValue);\n    }\n\n    visualElement.addValue(key, motionValue(value));\n    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;\n    visualElement.setBaseTarget(key, value);\n  }\n}\n\nfunction getOriginFromTransition(key, transition) {\n  if (!transition) return;\n  var valueTransition = transition[key] || transition[\"default\"] || transition;\n  return valueTransition.from;\n}\n\nfunction getOrigin(target, transition, visualElement) {\n  var _a, _b;\n\n  var origin = {};\n\n  for (var key in target) {\n    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n  }\n\n  return origin;\n}\n\nfunction animateVisualElement(visualElement, definition, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  visualElement.notifyAnimationStart(definition);\n  var animation;\n\n  if (Array.isArray(definition)) {\n    var animations = definition.map(function (variant) {\n      return animateVariant(visualElement, variant, options);\n    });\n    animation = Promise.all(animations);\n  } else if (typeof definition === \"string\") {\n    animation = animateVariant(visualElement, definition, options);\n  } else {\n    var resolvedDefinition = typeof definition === \"function\" ? resolveVariant(visualElement, definition, options.custom) : definition;\n    animation = animateTarget(visualElement, resolvedDefinition, options);\n  }\n\n  return animation.then(function () {\n    return visualElement.notifyAnimationComplete(definition);\n  });\n}\n\nfunction animateVariant(visualElement, variant, options) {\n  var _a;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var resolved = resolveVariant(visualElement, variant, options.custom);\n  var _b = (resolved || {}).transition,\n      transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n\n  if (options.transitionOverride) {\n    transition = options.transitionOverride;\n  }\n  /**\n   * If we have a variant, create a callback that runs it as an animation.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n\n  var getAnimation = resolved ? function () {\n    return animateTarget(visualElement, resolved, options);\n  } : function () {\n    return Promise.resolve();\n  };\n  /**\n   * If we have children, create a callback that runs all their animations.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n  var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function (forwardDelay) {\n    if (forwardDelay === void 0) {\n      forwardDelay = 0;\n    }\n\n    var _a = transition.delayChildren,\n        delayChildren = _a === void 0 ? 0 : _a,\n        staggerChildren = transition.staggerChildren,\n        staggerDirection = transition.staggerDirection;\n    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n  } : function () {\n    return Promise.resolve();\n  };\n  /**\n   * If the transition explicitly defines a \"when\" option, we need to resolve either\n   * this animation or all children animations before playing the other.\n   */\n\n  var when = transition.when;\n\n  if (when) {\n    var _c = tslib.__read(when === \"beforeChildren\" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation], 2),\n        first = _c[0],\n        last = _c[1];\n\n    return first().then(last);\n  } else {\n    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction animateTarget(visualElement, definition, _a) {\n  var _b;\n\n  var _c = _a === void 0 ? {} : _a,\n      _d = _c.delay,\n      delay = _d === void 0 ? 0 : _d,\n      transitionOverride = _c.transitionOverride,\n      type = _c.type;\n\n  var _e = visualElement.makeTargetAnimatable(definition),\n      _f = _e.transition,\n      transition = _f === void 0 ? visualElement.getDefaultTransition() : _f,\n      transitionEnd = _e.transitionEnd,\n      target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n\n  if (transitionOverride) transition = transitionOverride;\n  var animations = [];\n  var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n\n  for (var key in target) {\n    var value = visualElement.getValue(key);\n    var valueTarget = target[key];\n\n    if (!value || valueTarget === undefined || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {\n      continue;\n    }\n\n    var valueTransition = tslib.__assign({\n      delay: delay\n    }, transition);\n    /**\n     * Make animation instant if this is a transform prop and we should reduce motion.\n     */\n\n\n    if (visualElement.shouldReduceMotion && isTransformProp(key)) {\n      valueTransition = tslib.__assign(tslib.__assign({}, valueTransition), {\n        type: false,\n        delay: 0\n      });\n    }\n\n    var animation = startAnimation(key, value, valueTarget, valueTransition);\n    animations.push(animation);\n  }\n\n  return Promise.all(animations).then(function () {\n    transitionEnd && setTarget(visualElement, transitionEnd);\n  });\n}\n\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n  if (delayChildren === void 0) {\n    delayChildren = 0;\n  }\n\n  if (staggerChildren === void 0) {\n    staggerChildren = 0;\n  }\n\n  if (staggerDirection === void 0) {\n    staggerDirection = 1;\n  }\n\n  var animations = [];\n  var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n  var generateStaggerDuration = staggerDirection === 1 ? function (i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    return i * staggerChildren;\n  } : function (i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    return maxStaggerDuration - i * staggerChildren;\n  };\n  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach(function (child, i) {\n    animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), {\n      delay: delayChildren + generateStaggerDuration(i)\n    })).then(function () {\n      return child.notifyAnimationComplete(variant);\n    }));\n  });\n  return Promise.all(animations);\n}\n\nfunction stopAnimation(visualElement) {\n  visualElement.forEachValue(function (value) {\n    return value.stop();\n  });\n}\n\nfunction sortByTreeOrder(a, b) {\n  return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\n\n\nfunction shouldBlockAnimation(_a, key) {\n  var protectedKeys = _a.protectedKeys,\n      needsAnimating = _a.needsAnimating;\n  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n  needsAnimating[key] = false;\n  return shouldBlock;\n}\n\nvar variantPriorityOrder = [exports.AnimationType.Animate, exports.AnimationType.InView, exports.AnimationType.Focus, exports.AnimationType.Hover, exports.AnimationType.Tap, exports.AnimationType.Drag, exports.AnimationType.Exit];\n\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder), false).reverse();\n\nvar numAnimationTypes = variantPriorityOrder.length;\n\nfunction animateList(visualElement) {\n  return function (animations) {\n    return Promise.all(animations.map(function (_a) {\n      var animation = _a.animation,\n          options = _a.options;\n      return animateVisualElement(visualElement, animation, options);\n    }));\n  };\n}\n\nfunction createAnimationState(visualElement) {\n  var animate = animateList(visualElement);\n  var state = createState();\n  var allAnimatedKeys = {};\n  var isInitialRender = true;\n  /**\n   * This function will be used to reduce the animation definitions for\n   * each active animation type into an object of resolved values for it.\n   */\n\n  var buildResolvedTypeValues = function (acc, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n\n    if (resolved) {\n      resolved.transition;\n\n      var transitionEnd = resolved.transitionEnd,\n          target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n\n      acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n    }\n\n    return acc;\n  };\n\n  function isAnimated(key) {\n    return allAnimatedKeys[key] !== undefined;\n  }\n  /**\n   * This just allows us to inject mocked animation functions\n   * @internal\n   */\n\n\n  function setAnimateFunction(makeAnimator) {\n    animate = makeAnimator(visualElement);\n  }\n  /**\n   * When we receive new props, we need to:\n   * 1. Create a list of protected keys for each type. This is a directory of\n   *    value keys that are currently being \"handled\" by types of a higher priority\n   *    so that whenever an animation is played of a given type, these values are\n   *    protected from being animated.\n   * 2. Determine if an animation type needs animating.\n   * 3. Determine if any values have been removed from a type and figure out\n   *    what to animate those to.\n   */\n\n\n  function animateChanges(options, changedActiveType) {\n    var _a;\n\n    var props = visualElement.getProps();\n    var context = visualElement.getVariantContext(true) || {};\n    /**\n     * A list of animations that we'll build into as we iterate through the animation\n     * types. This will get executed at the end of the function.\n     */\n\n    var animations = [];\n    /**\n     * Keep track of which values have been removed. Then, as we hit lower priority\n     * animation types, we can check if they contain removed values and animate to that.\n     */\n\n    var removedKeys = new Set();\n    /**\n     * A dictionary of all encountered keys. This is an object to let us build into and\n     * copy it without iteration. Each time we hit an animation type we set its protected\n     * keys - the keys its not allowed to animate - to the latest version of this object.\n     */\n\n    var encounteredKeys = {};\n    /**\n     * If a variant has been removed at a given index, and this component is controlling\n     * variant animations, we want to ensure lower-priority variants are forced to animate.\n     */\n\n    var removedVariantIndex = Infinity;\n\n    var _loop_1 = function (i) {\n      var type = reversePriorityOrder[i];\n      var typeState = state[type];\n      var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n      var propIsVariant = isVariantLabel(prop);\n      /**\n       * If this type has *just* changed isActive status, set activeDelta\n       * to that status. Otherwise set to null.\n       */\n\n      var activeDelta = type === changedActiveType ? typeState.isActive : null;\n      if (activeDelta === false) removedVariantIndex = i;\n      /**\n       * If this prop is an inherited variant, rather than been set directly on the\n       * component itself, we want to make sure we allow the parent to trigger animations.\n       *\n       * TODO: Can probably change this to a !isControllingVariants check\n       */\n\n      var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n      /**\n       *\n       */\n\n      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {\n        isInherited = false;\n      }\n      /**\n       * Set all encountered keys so far as the protected keys for this type. This will\n       * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n       */\n\n\n      typeState.protectedKeys = tslib.__assign({}, encounteredKeys); // Check if we can skip analysing this prop early\n\n      if ( // If it isn't active and hasn't *just* been set as inactive\n      !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type\n      !prop && !typeState.prevProp || // Or if the prop doesn't define an animation\n      isAnimationControls(prop) || typeof prop === \"boolean\") {\n        return \"continue\";\n      }\n      /**\n       * As we go look through the values defined on this type, if we detect\n       * a changed value or a value that was removed in a higher priority, we set\n       * this to true and add this prop to the animation list.\n       */\n\n\n      var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n      var shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active\n      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)\n      i > removedVariantIndex && propIsVariant;\n      /**\n       * As animations can be set as variant lists, variants or target objects, we\n       * coerce everything to an array if it isn't one already\n       */\n\n      var definitionList = Array.isArray(prop) ? prop : [prop];\n      /**\n       * Build an object of all the resolved values. We'll use this in the subsequent\n       * animateChanges calls to determine whether a value has changed.\n       */\n\n      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n      if (activeDelta === false) resolvedValues = {};\n      /**\n       * Now we need to loop through all the keys in the prev prop and this prop,\n       * and decide:\n       * 1. If the value has changed, and needs animating\n       * 2. If it has been removed, and needs adding to the removedKeys set\n       * 3. If it has been removed in a higher priority type and needs animating\n       * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n       *    needs adding to the type's protectedKeys list.\n       */\n\n      var _b = typeState.prevResolvedValues,\n          prevResolvedValues = _b === void 0 ? {} : _b;\n\n      var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n\n      var markToAnimate = function (key) {\n        shouldAnimateType = true;\n        removedKeys.delete(key);\n        typeState.needsAnimating[key] = true;\n      };\n\n      for (var key in allKeys) {\n        var next = resolvedValues[key];\n        var prev = prevResolvedValues[key]; // If we've already handled this we can just skip ahead\n\n        if (encounteredKeys.hasOwnProperty(key)) continue;\n        /**\n         * If the value has changed, we probably want to animate it.\n         */\n\n        if (next !== prev) {\n          /**\n           * If both values are keyframes, we need to shallow compare them to\n           * detect whether any value has changed. If it has, we animate it.\n           */\n          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n            if (!shallowCompare(next, prev) || variantDidChange) {\n              markToAnimate(key);\n            } else {\n              /**\n               * If it hasn't changed, we want to ensure it doesn't animate by\n               * adding it to the list of protected keys.\n               */\n              typeState.protectedKeys[key] = true;\n            }\n          } else if (next !== undefined) {\n            // If next is defined and doesn't equal prev, it needs animating\n            markToAnimate(key);\n          } else {\n            // If it's undefined, it's been removed.\n            removedKeys.add(key);\n          }\n        } else if (next !== undefined && removedKeys.has(key)) {\n          /**\n           * If next hasn't changed and it isn't undefined, we want to check if it's\n           * been removed by a higher priority\n           */\n          markToAnimate(key);\n        } else {\n          /**\n           * If it hasn't changed, we add it to the list of protected values\n           * to ensure it doesn't get animated.\n           */\n          typeState.protectedKeys[key] = true;\n        }\n      }\n      /**\n       * Update the typeState so next time animateChanges is called we can compare the\n       * latest prop and resolvedValues to these.\n       */\n\n\n      typeState.prevProp = prop;\n      typeState.prevResolvedValues = resolvedValues;\n      /**\n       *\n       */\n\n      if (typeState.isActive) {\n        encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n      }\n\n      if (isInitialRender && visualElement.blockInitialAnimation) {\n        shouldAnimateType = false;\n      }\n      /**\n       * If this is an inherited prop we want to hard-block animations\n       * TODO: Test as this should probably still handle animations triggered\n       * by removed values?\n       */\n\n\n      if (shouldAnimateType && !isInherited) {\n        animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) {\n          return {\n            animation: animation,\n            options: tslib.__assign({\n              type: type\n            }, options)\n          };\n        })), false));\n      }\n    };\n    /**\n     * Iterate through all animation types in reverse priority order. For each, we want to\n     * detect which values it's handling and whether or not they've changed (and therefore\n     * need to be animated). If any values have been removed, we want to detect those in\n     * lower priority props and flag for animation.\n     */\n\n\n    for (var i = 0; i < numAnimationTypes; i++) {\n      _loop_1(i);\n    }\n\n    allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n    /**\n     * If there are some removed value that haven't been dealt with,\n     * we need to create a new animation that falls back either to the value\n     * defined in the style prop, or the last read value.\n     */\n\n    if (removedKeys.size) {\n      var fallbackAnimation_1 = {};\n      removedKeys.forEach(function (key) {\n        var fallbackTarget = visualElement.getBaseTarget(key);\n\n        if (fallbackTarget !== undefined) {\n          fallbackAnimation_1[key] = fallbackTarget;\n        }\n      });\n      animations.push({\n        animation: fallbackAnimation_1\n      });\n    }\n\n    var shouldAnimate = Boolean(animations.length);\n\n    if (isInitialRender && props.initial === false && !visualElement.manuallyAnimateOnMount) {\n      shouldAnimate = false;\n    }\n\n    isInitialRender = false;\n    return shouldAnimate ? animate(animations) : Promise.resolve();\n  }\n  /**\n   * Change whether a certain animation type is active.\n   */\n\n\n  function setActive(type, isActive, options) {\n    var _a; // If the active state hasn't changed, we can safely do nothing here\n\n\n    if (state[type].isActive === isActive) return Promise.resolve(); // Propagate active change to children\n\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      var _a;\n\n      return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive);\n    });\n    state[type].isActive = isActive;\n    var animations = animateChanges(options, type);\n\n    for (var key in state) {\n      state[key].protectedKeys = {};\n    }\n\n    return animations;\n  }\n\n  return {\n    isAnimated: isAnimated,\n    animateChanges: animateChanges,\n    setActive: setActive,\n    setAnimateFunction: setAnimateFunction,\n    getState: function () {\n      return state;\n    }\n  };\n}\n\nfunction checkVariantsDidChange(prev, next) {\n  if (typeof next === \"string\") {\n    return next !== prev;\n  } else if (isVariantLabels(next)) {\n    return !shallowCompare(next, prev);\n  }\n\n  return false;\n}\n\nfunction createTypeState(isActive) {\n  if (isActive === void 0) {\n    isActive = false;\n  }\n\n  return {\n    isActive: isActive,\n    protectedKeys: {},\n    needsAnimating: {},\n    prevResolvedValues: {}\n  };\n}\n\nfunction createState() {\n  var _a;\n\n  return _a = {}, _a[exports.AnimationType.Animate] = createTypeState(true), _a[exports.AnimationType.InView] = createTypeState(), _a[exports.AnimationType.Hover] = createTypeState(), _a[exports.AnimationType.Tap] = createTypeState(), _a[exports.AnimationType.Drag] = createTypeState(), _a[exports.AnimationType.Focus] = createTypeState(), _a[exports.AnimationType.Exit] = createTypeState(), _a;\n}\n\nvar animations = {\n  animation: makeRenderlessComponent(function (_a) {\n    var visualElement = _a.visualElement,\n        animate = _a.animate;\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n    if (isAnimationControls(animate)) {\n      React.useEffect(function () {\n        return animate.subscribe(visualElement);\n      }, [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(function (props) {\n    var custom = props.custom,\n        visualElement = props.visualElement;\n\n    var _a = tslib.__read(usePresence(), 2),\n        isPresent = _a[0],\n        safeToRemove = _a[1];\n\n    var presenceContext = React.useContext(PresenceContext);\n    React.useEffect(function () {\n      var _a, _b;\n\n      visualElement.isPresent = isPresent;\n      var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, {\n        custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom\n      });\n      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n    }, [isPresent]);\n  })\n};\n/**\n * @internal\n */\n\nvar PanSession =\n/** @class */\nfunction () {\n  function PanSession(event, handlers, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        transformPagePoint = _b.transformPagePoint;\n    /**\n     * @internal\n     */\n\n\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = function () {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      var isDistancePastThreshold = popmotion.distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var point = info.point;\n      var timestamp = sync.getFrameData().timestamp;\n\n      _this.history.push(tslib.__assign(tslib.__assign({}, point), {\n        timestamp: timestamp\n      }));\n\n      var _a = _this.handlers,\n          onStart = _a.onStart,\n          onMove = _a.onMove;\n\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n\n      onMove && onMove(_this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = function (event, info) {\n      _this.lastMoveEvent = event;\n      _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        _this.handlePointerUp(event, info);\n\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync__default[\"default\"].update(_this.updatePoint, true);\n    };\n\n    this.handlePointerUp = function (event, info) {\n      _this.end();\n\n      var _a = _this.handlers,\n          onEnd = _a.onEnd,\n          onSessionEnd = _a.onSessionEnd;\n      var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n\n      if (_this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n\n      onSessionEnd && onSessionEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n    var timestamp = sync.getFrameData().timestamp;\n    this.history = [tslib.__assign(tslib.__assign({}, point), {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n\n  PanSession.prototype.updateHandlers = function (handlers) {\n    this.handlers = handlers;\n  };\n\n  PanSession.prototype.end = function () {\n    this.removeListeners && this.removeListeners();\n    sync.cancelSync.update(this.updatePoint);\n  };\n\n  return PanSession;\n}();\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_a, history) {\n  var point = _a.point;\n  return {\n    point: point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\n\n\nfunction applyConstraints(point, _a, elastic) {\n  var min = _a.min,\n      max = _a.max;\n\n  if (min !== undefined && point < min) {\n    // If we have a min point defined, and this is outside of that, constrain\n    point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n  } else if (max !== undefined && point > max) {\n    // If we have a max point defined, and this is outside of that, constrain\n    point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n  }\n\n  return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\n\n\nfunction calcRelativeAxisConstraints(axis, min, max) {\n  return {\n    min: min !== undefined ? axis.min + min : undefined,\n    max: max !== undefined ? axis.max + max - (axis.max - axis.min) : undefined\n  };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\n\n\nfunction calcRelativeConstraints(layoutBox, _a) {\n  var top = _a.top,\n      left = _a.left,\n      bottom = _a.bottom,\n      right = _a.right;\n  return {\n    x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)\n  };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\n\n\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n  var _a;\n\n  var min = constraintsAxis.min - layoutAxis.min;\n  var max = constraintsAxis.max - layoutAxis.max; // If the constraints axis is actually smaller than the layout axis then we can\n  // flip the constraints\n\n  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {\n    _a = tslib.__read([max, min], 2), min = _a[0], max = _a[1];\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\n\n\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n  return {\n    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)\n  };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\n\n\nfunction calcOrigin(source, target) {\n  var origin = 0.5;\n  var sourceLength = calcLength(source);\n  var targetLength = calcLength(target);\n\n  if (targetLength > sourceLength) {\n    origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n  } else if (sourceLength > targetLength) {\n    origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n  }\n\n  return popmotion.clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\n\n\nfunction rebaseAxisConstraints(layout, constraints) {\n  var relativeConstraints = {};\n\n  if (constraints.min !== undefined) {\n    relativeConstraints.min = constraints.min - layout.min;\n  }\n\n  if (constraints.max !== undefined) {\n    relativeConstraints.max = constraints.max - layout.min;\n  }\n\n  return relativeConstraints;\n}\n\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\n\nfunction resolveDragElastic(dragElastic) {\n  if (dragElastic === void 0) {\n    dragElastic = defaultElastic;\n  }\n\n  if (dragElastic === false) {\n    dragElastic = 0;\n  } else if (dragElastic === true) {\n    dragElastic = defaultElastic;\n  }\n\n  return {\n    x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n    y: resolveAxisElastic(dragElastic, \"top\", \"bottom\")\n  };\n}\n\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n  return {\n    min: resolvePointElastic(dragElastic, minLabel),\n    max: resolvePointElastic(dragElastic, maxLabel)\n  };\n}\n\nfunction resolvePointElastic(dragElastic, label) {\n  var _a;\n\n  return typeof dragElastic === \"number\" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\n\n\nfunction convertBoundingBoxToBox(_a) {\n  var top = _a.top,\n      left = _a.left,\n      right = _a.right,\n      bottom = _a.bottom;\n  return {\n    x: {\n      min: left,\n      max: right\n    },\n    y: {\n      min: top,\n      max: bottom\n    }\n  };\n}\n\nfunction convertBoxToBoundingBox(_a) {\n  var x = _a.x,\n      y = _a.y;\n  return {\n    top: y.min,\n    right: x.max,\n    bottom: y.max,\n    left: x.min\n  };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\n\n\nfunction transformBoxPoints(point, transformPoint) {\n  if (!transformPoint) return point;\n  var topLeft = transformPoint({\n    x: point.left,\n    y: point.top\n  });\n  var bottomRight = transformPoint({\n    x: point.right,\n    y: point.bottom\n  });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\n\nfunction measureViewportBox(instance, transformPoint) {\n  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\n\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n  var viewportBox = measureViewportBox(element, transformPagePoint);\n  var scroll = rootProjectionNode.scroll;\n\n  if (scroll) {\n    translateAxis(viewportBox.x, scroll.x);\n    translateAxis(viewportBox.y, scroll.y);\n  }\n\n  return viewportBox;\n}\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\n\nvar VisualElementDragControls =\n/** @class */\nfunction () {\n  function VisualElementDragControls(visualElement) {\n    // This is a reference to the global drag gesture lock, ensuring only one component\n    // can \"capture\" the drag of one or both axes.\n    // TODO: Look into moving this into pansession?\n    this.openGlobalLock = null;\n    this.isDragging = false;\n    this.currentDirection = null;\n    this.originPoint = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * The permitted boundaries of travel, in pixels.\n     */\n\n    this.constraints = false;\n    this.hasMutatedConstraints = false;\n    /**\n     * The per-axis resolved elastic values.\n     */\n\n    this.elastic = createBox();\n    this.visualElement = visualElement;\n  }\n\n  VisualElementDragControls.prototype.start = function (originEvent, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.snapToCursor,\n        snapToCursor = _c === void 0 ? false : _c;\n    /**\n     * Don't start dragging if this component is exiting\n     */\n\n\n    if (this.visualElement.isPresent === false) return;\n\n    var onSessionStart = function (event) {\n      // Stop any animations on both axis values immediately. This allows the user to throw and catch\n      // the component.\n      _this.stopAnimation();\n\n      if (snapToCursor) {\n        _this.snapToCursor(extractEventInfo(event, \"page\").point);\n      }\n    };\n\n    var onStart = function (event, info) {\n      var _a; // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n\n\n      var _b = _this.getProps(),\n          drag = _b.drag,\n          dragPropagation = _b.dragPropagation,\n          onDragStart = _b.onDragStart;\n\n      if (drag && !dragPropagation) {\n        if (_this.openGlobalLock) _this.openGlobalLock();\n        _this.openGlobalLock = getGlobalLock(drag); // If we don 't have the lock, don't start dragging\n\n        if (!_this.openGlobalLock) return;\n      }\n\n      _this.isDragging = true;\n      _this.currentDirection = null;\n\n      _this.resolveConstraints();\n\n      if (_this.visualElement.projection) {\n        _this.visualElement.projection.isAnimationBlocked = true;\n        _this.visualElement.projection.target = undefined;\n      }\n      /**\n       * Record gesture origin\n       */\n\n\n      eachAxis(function (axis) {\n        var _a, _b;\n\n        var current = _this.getAxisMotionValue(axis).get() || 0;\n        /**\n         * If the MotionValue is a percentage value convert to px\n         */\n\n        if (styleValueTypes.percent.test(current)) {\n          var measuredAxis = (_b = (_a = _this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n\n          if (measuredAxis) {\n            var length_1 = calcLength(measuredAxis);\n            current = length_1 * (parseFloat(current) / 100);\n          }\n        }\n\n        _this.originPoint[axis] = current;\n      }); // Fire onDragStart event\n\n      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n      (_a = _this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Drag, true);\n    };\n\n    var onMove = function (event, info) {\n      // latestPointerEvent = event\n      var _a = _this.getProps(),\n          dragPropagation = _a.dragPropagation,\n          dragDirectionLock = _a.dragDirectionLock,\n          onDirectionLock = _a.onDirectionLock,\n          onDrag = _a.onDrag; // If we didn't successfully receive the gesture lock, early return.\n\n\n      if (!dragPropagation && !_this.openGlobalLock) return;\n      var offset = info.offset; // Attempt to detect drag direction if directionLock is true\n\n      if (dragDirectionLock && _this.currentDirection === null) {\n        _this.currentDirection = getCurrentDirection(offset); // If we've successfully set a direction, notify listener\n\n        if (_this.currentDirection !== null) {\n          onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);\n        }\n\n        return;\n      } // Update each point with the latest position\n\n\n      _this.updateAxis(\"x\", info.point, offset);\n\n      _this.updateAxis(\"y\", info.point, offset);\n      /**\n       * Ideally we would leave the renderer to fire naturally at the end of\n       * this frame but if the element is about to change layout as the result\n       * of a re-render we want to ensure the browser can read the latest\n       * bounding box to ensure the pointer and element don't fall out of sync.\n       */\n\n\n      _this.visualElement.syncRender();\n      /**\n       * This must fire after the syncRender call as it might trigger a state\n       * change which itself might trigger a layout update.\n       */\n\n\n      onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n    };\n\n    var onSessionEnd = function (event, info) {\n      return _this.stop(event, info);\n    };\n\n    this.panSession = new PanSession(originEvent, {\n      onSessionStart: onSessionStart,\n      onStart: onStart,\n      onMove: onMove,\n      onSessionEnd: onSessionEnd\n    }, {\n      transformPagePoint: this.visualElement.getTransformPagePoint()\n    });\n  };\n\n  VisualElementDragControls.prototype.stop = function (event, info) {\n    var isDragging = this.isDragging;\n    this.cancel();\n    if (!isDragging) return;\n    var velocity = info.velocity;\n    this.startAnimation(velocity);\n    var onDragEnd = this.getProps().onDragEnd;\n    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n  };\n\n  VisualElementDragControls.prototype.cancel = function () {\n    var _a, _b;\n\n    this.isDragging = false;\n\n    if (this.visualElement.projection) {\n      this.visualElement.projection.isAnimationBlocked = false;\n    }\n\n    (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n    this.panSession = undefined;\n    var dragPropagation = this.getProps().dragPropagation;\n\n    if (!dragPropagation && this.openGlobalLock) {\n      this.openGlobalLock();\n      this.openGlobalLock = null;\n    }\n\n    (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(exports.AnimationType.Drag, false);\n  };\n\n  VisualElementDragControls.prototype.updateAxis = function (axis, _point, offset) {\n    var drag = this.getProps().drag; // If we're not dragging this axis, do an early return.\n\n    if (!offset || !shouldDrag(axis, drag, this.currentDirection)) return;\n    var axisValue = this.getAxisMotionValue(axis);\n    var next = this.originPoint[axis] + offset[axis]; // Apply constraints\n\n    if (this.constraints && this.constraints[axis]) {\n      next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n    }\n\n    axisValue.set(next);\n  };\n\n  VisualElementDragControls.prototype.resolveConstraints = function () {\n    var _this = this;\n\n    var _a = this.getProps(),\n        dragConstraints = _a.dragConstraints,\n        dragElastic = _a.dragElastic;\n\n    var layout = (this.visualElement.projection || {}).layout;\n    var prevConstraints = this.constraints;\n\n    if (dragConstraints && isRefObject(dragConstraints)) {\n      if (!this.constraints) {\n        this.constraints = this.resolveRefConstraints();\n      }\n    } else {\n      if (dragConstraints && layout) {\n        this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n      } else {\n        this.constraints = false;\n      }\n    }\n\n    this.elastic = resolveDragElastic(dragElastic);\n    /**\n     * If we're outputting to external MotionValues, we want to rebase the measured constraints\n     * from viewport-relative to component-relative.\n     */\n\n    if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) {\n      eachAxis(function (axis) {\n        if (_this.getAxisMotionValue(axis)) {\n          _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);\n        }\n      });\n    }\n  };\n\n  VisualElementDragControls.prototype.resolveRefConstraints = function () {\n    var _a = this.getProps(),\n        constraints = _a.dragConstraints,\n        onMeasureDragConstraints = _a.onMeasureDragConstraints;\n\n    if (!constraints || !isRefObject(constraints)) return false;\n    var constraintsElement = constraints.current;\n    heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n    var projection = this.visualElement.projection; // TODO\n\n    if (!projection || !projection.layout) return false;\n    var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n    var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n    /**\n     * If there's an onMeasureDragConstraints listener we call it and\n     * if different constraints are returned, set constraints to that\n     */\n\n    if (onMeasureDragConstraints) {\n      var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n      this.hasMutatedConstraints = !!userConstraints;\n\n      if (userConstraints) {\n        measuredConstraints = convertBoundingBoxToBox(userConstraints);\n      }\n    }\n\n    return measuredConstraints;\n  };\n\n  VisualElementDragControls.prototype.startAnimation = function (velocity) {\n    var _this = this;\n\n    var _a = this.getProps(),\n        drag = _a.drag,\n        dragMomentum = _a.dragMomentum,\n        dragElastic = _a.dragElastic,\n        dragTransition = _a.dragTransition,\n        dragSnapToOrigin = _a.dragSnapToOrigin,\n        onDragTransitionEnd = _a.onDragTransitionEnd;\n\n    var constraints = this.constraints || {};\n    var momentumAnimations = eachAxis(function (axis) {\n      var _a;\n\n      if (!shouldDrag(axis, drag, _this.currentDirection)) {\n        return;\n      }\n\n      var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n      if (dragSnapToOrigin) transition = {\n        min: 0,\n        max: 0\n      };\n      /**\n       * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n       * of spring animations so we should look into adding a disable spring option to `inertia`.\n       * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n       * using the value of `dragElastic`.\n       */\n\n      var bounceStiffness = dragElastic ? 200 : 1000000;\n      var bounceDamping = dragElastic ? 40 : 10000000;\n\n      var inertia = tslib.__assign(tslib.__assign({\n        type: \"inertia\",\n        velocity: dragMomentum ? velocity[axis] : 0,\n        bounceStiffness: bounceStiffness,\n        bounceDamping: bounceDamping,\n        timeConstant: 750,\n        restDelta: 1,\n        restSpeed: 10\n      }, dragTransition), transition); // If we're not animating on an externally-provided `MotionValue` we can use the\n      // component's animation controls which will handle interactions with whileHover (etc),\n      // otherwise we just have to animate the `MotionValue` itself.\n\n\n      return _this.startAxisValueAnimation(axis, inertia);\n    }); // Run all animations and then resolve the new drag constraints.\n\n    return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n  };\n\n  VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n    var axisValue = this.getAxisMotionValue(axis);\n    return startAnimation(axis, axisValue, 0, transition);\n  };\n\n  VisualElementDragControls.prototype.stopAnimation = function () {\n    var _this = this;\n\n    eachAxis(function (axis) {\n      return _this.getAxisMotionValue(axis).stop();\n    });\n  };\n  /**\n   * Drag works differently depending on which props are provided.\n   *\n   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n   * - Otherwise, we apply the delta to the x/y motion values.\n   */\n\n\n  VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n    var _a, _b;\n\n    var dragKey = \"_drag\" + axis.toUpperCase();\n    var externalMotionValue = this.visualElement.getProps()[dragKey];\n    return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n  };\n\n  VisualElementDragControls.prototype.snapToCursor = function (point) {\n    var _this = this;\n\n    eachAxis(function (axis) {\n      var drag = _this.getProps().drag; // If we're not dragging this axis, do an early return.\n\n\n      if (!shouldDrag(axis, drag, _this.currentDirection)) return;\n      var projection = _this.visualElement.projection;\n\n      var axisValue = _this.getAxisMotionValue(axis);\n\n      if (projection && projection.layout) {\n        var _a = projection.layout.actual[axis],\n            min = _a.min,\n            max = _a.max;\n        axisValue.set(point[axis] - popmotion.mix(min, max, 0.5));\n      }\n    });\n  };\n  /**\n   * When the viewport resizes we want to check if the measured constraints\n   * have changed and, if so, reposition the element within those new constraints\n   * relative to where it was before the resize.\n   */\n\n\n  VisualElementDragControls.prototype.scalePositionWithinConstraints = function () {\n    var _this = this;\n\n    var _a;\n\n    var _b = this.getProps(),\n        drag = _b.drag,\n        dragConstraints = _b.dragConstraints;\n\n    var projection = this.visualElement.projection;\n    if (!isRefObject(dragConstraints) || !projection || !this.constraints) return;\n    /**\n     * Stop current animations as there can be visual glitching if we try to do\n     * this mid-animation\n     */\n\n    this.stopAnimation();\n    /**\n     * Record the relative position of the dragged element relative to the\n     * constraints box and save as a progress value.\n     */\n\n    var boxProgress = {\n      x: 0,\n      y: 0\n    };\n    eachAxis(function (axis) {\n      var axisValue = _this.getAxisMotionValue(axis);\n\n      if (axisValue) {\n        var latest = axisValue.get();\n        boxProgress[axis] = calcOrigin({\n          min: latest,\n          max: latest\n        }, _this.constraints[axis]);\n      }\n    });\n    /**\n     * Update the layout of this element and resolve the latest drag constraints\n     */\n\n    var transformTemplate = this.visualElement.getProps().transformTemplate;\n    this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n    (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n    projection.updateLayout();\n    this.resolveConstraints();\n    /**\n     * For each axis, calculate the current progress of the layout axis\n     * within the new constraints.\n     */\n\n    eachAxis(function (axis) {\n      if (!shouldDrag(axis, drag, null)) return;\n      /**\n       * Calculate a new transform based on the previous box progress\n       */\n\n      var axisValue = _this.getAxisMotionValue(axis);\n\n      var _a = _this.constraints[axis],\n          min = _a.min,\n          max = _a.max;\n      axisValue.set(popmotion.mix(min, max, boxProgress[axis]));\n    });\n  };\n\n  VisualElementDragControls.prototype.addListeners = function () {\n    var _this = this;\n\n    var _a;\n\n    elementDragControls.set(this.visualElement, this);\n    var element = this.visualElement.getInstance();\n    /**\n     * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n     */\n\n    var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n      var _a = _this.getProps(),\n          drag = _a.drag,\n          _b = _a.dragListener,\n          dragListener = _b === void 0 ? true : _b;\n\n      drag && dragListener && _this.start(event);\n    });\n\n    var measureDragConstraints = function () {\n      var dragConstraints = _this.getProps().dragConstraints;\n\n      if (isRefObject(dragConstraints)) {\n        _this.constraints = _this.resolveRefConstraints();\n      }\n    };\n\n    var projection = this.visualElement.projection;\n    var stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n\n    if (projection && !projection.layout) {\n      (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n      projection.updateLayout();\n    }\n\n    measureDragConstraints();\n    /**\n     * Attach a window resize listener to scale the draggable target within its defined\n     * constraints as the window resizes.\n     */\n\n    var stopResizeListener = addDomEvent(window, \"resize\", function () {\n      return _this.scalePositionWithinConstraints();\n    });\n    /**\n     * If the element's layout changes, calculate the delta and apply that to\n     * the drag gesture's origin point.\n     */\n\n    projection.addEventListener(\"didUpdate\", function (_a) {\n      var delta = _a.delta,\n          hasLayoutChanged = _a.hasLayoutChanged;\n\n      if (_this.isDragging && hasLayoutChanged) {\n        eachAxis(function (axis) {\n          var motionValue = _this.getAxisMotionValue(axis);\n\n          if (!motionValue) return;\n          _this.originPoint[axis] += delta[axis].translate;\n          motionValue.set(motionValue.get() + delta[axis].translate);\n        });\n\n        _this.visualElement.syncRender();\n      }\n    });\n    return function () {\n      stopResizeListener();\n      stopPointerListener();\n      stopMeasureLayoutListener();\n    };\n  };\n\n  VisualElementDragControls.prototype.getProps = function () {\n    var props = this.visualElement.getProps();\n    var _a = props.drag,\n        drag = _a === void 0 ? false : _a,\n        _b = props.dragDirectionLock,\n        dragDirectionLock = _b === void 0 ? false : _b,\n        _c = props.dragPropagation,\n        dragPropagation = _c === void 0 ? false : _c,\n        _d = props.dragConstraints,\n        dragConstraints = _d === void 0 ? false : _d,\n        _e = props.dragElastic,\n        dragElastic = _e === void 0 ? defaultElastic : _e,\n        _f = props.dragMomentum,\n        dragMomentum = _f === void 0 ? true : _f;\n    return tslib.__assign(tslib.__assign({}, props), {\n      drag: drag,\n      dragDirectionLock: dragDirectionLock,\n      dragPropagation: dragPropagation,\n      dragConstraints: dragConstraints,\n      dragElastic: dragElastic,\n      dragMomentum: dragMomentum\n    });\n  };\n\n  return VisualElementDragControls;\n}();\n\nfunction shouldDrag(direction, drag, currentDirection) {\n  return (drag === true || drag === direction) && (currentDirection === null || currentDirection === direction);\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\n\n\nfunction getCurrentDirection(offset, lockThreshold) {\n  if (lockThreshold === void 0) {\n    lockThreshold = 10;\n  }\n\n  var direction = null;\n\n  if (Math.abs(offset.y) > lockThreshold) {\n    direction = \"y\";\n  } else if (Math.abs(offset.x) > lockThreshold) {\n    direction = \"x\";\n  }\n\n  return direction;\n}\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\n\n\nfunction useDrag(props) {\n  var groupDragControls = props.dragControls,\n      visualElement = props.visualElement;\n  var dragControls = useConstant(function () {\n    return new VisualElementDragControls(visualElement);\n  }); // If we've been provided a DragControls for manual control over the drag gesture,\n  // subscribe this component to it on mount.\n\n  React.useEffect(function () {\n    return groupDragControls && groupDragControls.subscribe(dragControls);\n  }, [dragControls, groupDragControls]); // Apply the event listeners to the element\n\n  React.useEffect(function () {\n    return dragControls.addListeners();\n  }, [dragControls]);\n}\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\n\n\nfunction usePanGesture(_a) {\n  var onPan = _a.onPan,\n      onPanStart = _a.onPanStart,\n      onPanEnd = _a.onPanEnd,\n      onPanSessionStart = _a.onPanSessionStart,\n      visualElement = _a.visualElement;\n  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n  var panSession = React.useRef(null);\n  var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function (event, info) {\n      panSession.current = null;\n      onPanEnd && onPanEnd(event, info);\n    }\n  };\n  React.useEffect(function () {\n    if (panSession.current !== null) {\n      panSession.current.updateHandlers(handlers);\n    }\n  });\n\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, {\n      transformPagePoint: transformPagePoint\n    });\n  }\n\n  usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n  useUnmountEffect(function () {\n    return panSession.current && panSession.current.end();\n  });\n}\n\nvar drag = {\n  pan: makeRenderlessComponent(usePanGesture),\n  drag: makeRenderlessComponent(useDrag)\n};\nvar names = [\"LayoutMeasure\", \"BeforeLayoutMeasure\", \"LayoutUpdate\", \"ViewportBoxUpdate\", \"Update\", \"Render\", \"AnimationComplete\", \"LayoutAnimationComplete\", \"AnimationStart\", \"LayoutAnimationStart\", \"SetAxisTarget\", \"Unmount\"];\n\nfunction createLifecycles() {\n  var managers = names.map(function () {\n    return new SubscriptionManager();\n  });\n  var propSubscriptions = {};\n  var lifecycles = {\n    clearAllListeners: function () {\n      return managers.forEach(function (manager) {\n        return manager.clear();\n      });\n    },\n    updatePropListeners: function (props) {\n      names.forEach(function (name) {\n        var _a;\n\n        var on = \"on\" + name;\n        var propListener = props[on]; // Unsubscribe existing subscription\n\n        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions); // Add new subscription\n\n        if (propListener) {\n          propSubscriptions[name] = lifecycles[on](propListener);\n        }\n      });\n    }\n  };\n  managers.forEach(function (manager, i) {\n    lifecycles[\"on\" + names[i]] = function (handler) {\n      return manager.add(handler);\n    };\n\n    lifecycles[\"notify\" + names[i]] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args), false));\n    };\n  });\n  return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n  var _a;\n\n  for (var key in next) {\n    var nextValue = next[key];\n    var prevValue = prev[key];\n\n    if (isMotionValue(nextValue)) {\n      /**\n       * If this is a motion value found in props or style, we want to add it\n       * to our visual element's motion value map.\n       */\n      element.addValue(key, nextValue);\n      /**\n       * Check the version of the incoming motion value with this version\n       * and warn against mismatches.\n       */\n\n      if (process.env.NODE_ENV === \"development\") {\n        warnOnce(nextValue.version === \"6.3.16\", \"Attempting to mix Framer Motion versions \".concat(nextValue.version, \" with 6.3.16 may not work as expected.\"));\n      }\n    } else if (isMotionValue(prevValue)) {\n      /**\n       * If we're swapping to a new motion value, create a new motion value\n       * from that\n       */\n      element.addValue(key, motionValue(nextValue));\n    } else if (prevValue !== nextValue) {\n      /**\n       * If this is a flat value that has changed, update the motion value\n       * or create one if it doesn't exist. We only want to do this if we're\n       * not handling the value with our animation state.\n       */\n      if (element.hasValue(key)) {\n        var existingValue = element.getValue(key); // TODO: Only update values that aren't being animated or even looked at\n\n        !existingValue.hasAnimated && existingValue.set(nextValue);\n      } else {\n        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n      }\n    }\n  } // Handle removed values\n\n\n  for (var key in prev) {\n    if (next[key] === undefined) element.removeValue(key);\n  }\n\n  return next;\n}\n\nvar visualElement = function (_a) {\n  var _b = _a.treeType,\n      treeType = _b === void 0 ? \"\" : _b,\n      build = _a.build,\n      getBaseTarget = _a.getBaseTarget,\n      makeTargetAnimatable = _a.makeTargetAnimatable,\n      measureViewportBox = _a.measureViewportBox,\n      renderInstance = _a.render,\n      readValueFromInstance = _a.readValueFromInstance,\n      removeValueFromRenderState = _a.removeValueFromRenderState,\n      sortNodePosition = _a.sortNodePosition,\n      scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n  return function (_a, options) {\n    var parent = _a.parent,\n        props = _a.props,\n        presenceId = _a.presenceId,\n        blockInitialAnimation = _a.blockInitialAnimation,\n        visualState = _a.visualState,\n        shouldReduceMotion = _a.shouldReduceMotion;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var isMounted = false;\n    var latestValues = visualState.latestValues,\n        renderState = visualState.renderState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n\n    var instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n\n    var lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n\n    var values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n\n    var valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n\n    var prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n\n    var baseTarget = tslib.__assign({}, latestValues); // Internal methods ========================\n\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n\n\n    var removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n\n    function render() {\n      if (!instance || !isMounted) return;\n      triggerBuild();\n      renderInstance(instance, renderState, props.style, element.projection);\n    }\n\n    function triggerBuild() {\n      build(element, renderState, latestValues, options, props);\n    }\n\n    function update() {\n      lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n\n\n    function bindToMotionValue(key, value) {\n      var removeOnChange = value.onChange(function (latestValue) {\n        latestValues[key] = latestValue;\n        props.onUpdate && sync__default[\"default\"].update(update, false, true);\n      });\n      var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n      valueSubscriptions.set(key, function () {\n        removeOnChange();\n        removeOnRenderRequest();\n      });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n\n\n    var initialMotionValues = scrapeMotionValuesFromProps(props);\n\n    for (var key in initialMotionValues) {\n      var value = initialMotionValues[key];\n\n      if (latestValues[key] !== undefined && isMotionValue(value)) {\n        value.set(latestValues[key], false);\n      }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n\n\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n\n    var element = tslib.__assign(tslib.__assign({\n      treeType: treeType,\n\n      /**\n       * This is a mirror of the internal instance prop, which keeps\n       * VisualElement type-compatible with React's RefObject.\n       */\n      current: null,\n\n      /**\n       * The depth of this visual element within the visual element tree.\n       */\n      depth: parent ? parent.depth + 1 : 0,\n      parent: parent,\n      children: new Set(),\n\n      /**\n       *\n       */\n      presenceId: presenceId,\n      shouldReduceMotion: shouldReduceMotion,\n\n      /**\n       * If this component is part of the variant tree, it should track\n       * any children that are also part of the tree. This is essentially\n       * a shadow tree to simplify logic around how to stagger over children.\n       */\n      variantChildren: isVariantNode ? new Set() : undefined,\n\n      /**\n       * Whether this instance is visible. This can be changed imperatively\n       * by the projection tree, is analogous to CSS's visibility in that\n       * hidden elements should take up layout, and needs enacting by the configured\n       * render function.\n       */\n      isVisible: undefined,\n\n      /**\n       * Normally, if a component is controlled by a parent's variants, it can\n       * rely on that ancestor to trigger animations further down the tree.\n       * However, if a component is created after its parent is mounted, the parent\n       * won't trigger that mount animation so the child needs to.\n       *\n       * TODO: This might be better replaced with a method isParentMounted\n       */\n      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),\n\n      /**\n       * This can be set by AnimatePresence to force components that mount\n       * at the same time as it to mount as if they have initial={false} set.\n       */\n      blockInitialAnimation: blockInitialAnimation,\n\n      /**\n       * Determine whether this component has mounted yet. This is mostly used\n       * by variant children to determine whether they need to trigger their\n       * own animations on mount.\n       */\n      isMounted: function () {\n        return Boolean(instance);\n      },\n      mount: function (newInstance) {\n        isMounted = true;\n        instance = element.current = newInstance;\n\n        if (element.projection) {\n          element.projection.mount(newInstance);\n        }\n\n        if (isVariantNode && parent && !isControllingVariants) {\n          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n        }\n\n        values.forEach(function (value, key) {\n          return bindToMotionValue(key, value);\n        });\n        parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n        element.setProps(props);\n      },\n\n      /**\n       *\n       */\n      unmount: function () {\n        var _a;\n\n        (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        sync.cancelSync.update(update);\n        sync.cancelSync.render(render);\n        valueSubscriptions.forEach(function (remove) {\n          return remove();\n        });\n        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n        lifecycles.clearAllListeners();\n        instance = undefined;\n        isMounted = false;\n      },\n\n      /**\n       * Add a child visual element to our set of children.\n       */\n      addVariantChild: function (child) {\n        var _a;\n\n        var closestVariantNode = element.getClosestVariantNode();\n\n        if (closestVariantNode) {\n          (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n          return function () {\n            return closestVariantNode.variantChildren.delete(child);\n          };\n        }\n      },\n      sortNodePosition: function (other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!sortNodePosition || treeType !== other.treeType) return 0;\n        return sortNodePosition(element.getInstance(), other.getInstance());\n      },\n\n      /**\n       * Returns the closest variant node in the tree starting from\n       * this visual element.\n       */\n      getClosestVariantNode: function () {\n        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n      },\n\n      /**\n       * Expose the latest layoutId prop.\n       */\n      getLayoutId: function () {\n        return props.layoutId;\n      },\n\n      /**\n       * Returns the current instance.\n       */\n      getInstance: function () {\n        return instance;\n      },\n\n      /**\n       * Get/set the latest static values.\n       */\n      getStaticValue: function (key) {\n        return latestValues[key];\n      },\n      setStaticValue: function (key, value) {\n        return latestValues[key] = value;\n      },\n\n      /**\n       * Returns the latest motion value state. Currently only used to take\n       * a snapshot of the visual element - perhaps this can return the whole\n       * visual state\n       */\n      getLatestValues: function () {\n        return latestValues;\n      },\n\n      /**\n       * Set the visiblity of the visual element. If it's changed, schedule\n       * a render to reflect these changes.\n       */\n      setVisibility: function (visibility) {\n        if (element.isVisible === visibility) return;\n        element.isVisible = visibility;\n        element.scheduleRender();\n      },\n\n      /**\n       * Make a target animatable by Popmotion. For instance, if we're\n       * trying to animate width from 100px to 100vw we need to measure 100vw\n       * in pixels to determine what we really need to animate to. This is also\n       * pluggable to support Framer's custom value types like Color,\n       * and CSS variables.\n       */\n      makeTargetAnimatable: function (target, canMutate) {\n        if (canMutate === void 0) {\n          canMutate = true;\n        }\n\n        return makeTargetAnimatable(element, target, props, canMutate);\n      },\n\n      /**\n       * Measure the current viewport box with or without transforms.\n       * Only measures axis-aligned boxes, rotate and skew must be manually\n       * removed with a re-render to work.\n       */\n      measureViewportBox: function () {\n        return measureViewportBox(instance, props);\n      },\n      // Motion values ========================\n\n      /**\n       * Add a motion value and bind it to this visual element.\n       */\n      addValue: function (key, value) {\n        // Remove existing value if it exists\n        if (element.hasValue(key)) element.removeValue(key);\n        values.set(key, value);\n        latestValues[key] = value.get();\n        bindToMotionValue(key, value);\n      },\n\n      /**\n       * Remove a motion value and unbind any active subscriptions.\n       */\n      removeValue: function (key) {\n        var _a;\n\n        values.delete(key);\n        (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        valueSubscriptions.delete(key);\n        delete latestValues[key];\n        removeValueFromRenderState(key, renderState);\n      },\n\n      /**\n       * Check whether we have a motion value for this key\n       */\n      hasValue: function (key) {\n        return values.has(key);\n      },\n\n      /**\n       * Get a motion value for this key. If called with a default\n       * value, we'll create one if none exists.\n       */\n      getValue: function (key, defaultValue) {\n        var value = values.get(key);\n\n        if (value === undefined && defaultValue !== undefined) {\n          value = motionValue(defaultValue);\n          element.addValue(key, value);\n        }\n\n        return value;\n      },\n\n      /**\n       * Iterate over our motion values.\n       */\n      forEachValue: function (callback) {\n        return values.forEach(callback);\n      },\n\n      /**\n       * If we're trying to animate to a previously unencountered value,\n       * we need to check for it in our state and as a last resort read it\n       * directly from the instance (which might have performance implications).\n       */\n      readValue: function (key) {\n        var _a;\n\n        return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n      },\n\n      /**\n       * Set the base target to later animate back to. This is currently\n       * only hydrated on creation and when we first read a value.\n       */\n      setBaseTarget: function (key, value) {\n        baseTarget[key] = value;\n      },\n\n      /**\n       * Find the base target for a value thats been removed from all animation\n       * props.\n       */\n      getBaseTarget: function (key) {\n        if (getBaseTarget) {\n          var target = getBaseTarget(props, key);\n          if (target !== undefined && !isMotionValue(target)) return target;\n        }\n\n        return baseTarget[key];\n      }\n    }, lifecycles), {\n      /**\n       * Build the renderer state based on the latest visual state.\n       */\n      build: function () {\n        triggerBuild();\n        return renderState;\n      },\n\n      /**\n       * Schedule a render on the next animation frame.\n       */\n      scheduleRender: function () {\n        sync__default[\"default\"].render(render, false, true);\n      },\n\n      /**\n       * Synchronously fire render. It's prefered that we batch renders but\n       * in many circumstances, like layout measurement, we need to run this\n       * synchronously. However in those instances other measures should be taken\n       * to batch reads/writes.\n       */\n      syncRender: render,\n\n      /**\n       * Update the provided props. Ensure any newly-added motion values are\n       * added to our map, old ones removed, and listeners updated.\n       */\n      setProps: function (newProps) {\n        if (newProps.transformTemplate || props.transformTemplate) {\n          element.scheduleRender();\n        }\n\n        props = newProps;\n        lifecycles.updatePropListeners(newProps);\n        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n      },\n      getProps: function () {\n        return props;\n      },\n      // Variants ==============================\n\n      /**\n       * Returns the variant definition with a given name.\n       */\n      getVariant: function (name) {\n        var _a;\n\n        return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name];\n      },\n\n      /**\n       * Returns the defined default transition on this component.\n       */\n      getDefaultTransition: function () {\n        return props.transition;\n      },\n      getTransformPagePoint: function () {\n        return props.transformPagePoint;\n      },\n\n      /**\n       * Used by child variant nodes to get the closest ancestor variant props.\n       */\n      getVariantContext: function (startAtParent) {\n        if (startAtParent === void 0) {\n          startAtParent = false;\n        }\n\n        if (startAtParent) return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n\n        if (!isControllingVariants) {\n          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n\n          if (props.initial !== undefined) {\n            context_1.initial = props.initial;\n          }\n\n          return context_1;\n        }\n\n        var context = {};\n\n        for (var i = 0; i < numVariantProps; i++) {\n          var name_1 = variantProps[i];\n          var prop = props[name_1];\n\n          if (isVariantLabel(prop) || prop === false) {\n            context[name_1] = prop;\n          }\n        }\n\n        return context;\n      }\n    });\n\n    return element;\n  };\n};\n\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder), false);\n\nvar numVariantProps = variantProps.length;\n\nfunction isCSSVariable(value) {\n  return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\n\n\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\n\nfunction parseCSSVariable(current) {\n  var match = cssVariableRegex.exec(current);\n  if (!match) return [,];\n\n  var _a = tslib.__read(match, 3),\n      token = _a[1],\n      fallback = _a[2];\n\n  return [token, fallback];\n}\n\nvar maxDepth = 4;\n\nfunction getVariableValue(current, element, depth) {\n  if (depth === void 0) {\n    depth = 1;\n  }\n\n  heyListen.invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\".concat(current, \"\\\". This may indicate a circular fallback dependency.\"));\n\n  var _a = tslib.__read(parseCSSVariable(current), 2),\n      token = _a[0],\n      fallback = _a[1]; // No CSS variable detected\n\n\n  if (!token) return; // Attempt to read this CSS variable off the element\n\n  var resolved = window.getComputedStyle(element).getPropertyValue(token);\n\n  if (resolved) {\n    return resolved.trim();\n  } else if (isCSSVariable(fallback)) {\n    // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n    return getVariableValue(fallback, element, depth + 1);\n  } else {\n    return fallback;\n  }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\n\n\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n  var _b;\n\n  var target = tslib.__rest(_a, []);\n\n  var element = visualElement.getInstance();\n  if (!(element instanceof Element)) return {\n    target: target,\n    transitionEnd: transitionEnd\n  }; // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n  // only if they change but I think this reads clearer and this isn't a performance-critical path.\n\n  if (transitionEnd) {\n    transitionEnd = tslib.__assign({}, transitionEnd);\n  } // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n\n\n  visualElement.forEachValue(function (value) {\n    var current = value.get();\n    if (!isCSSVariable(current)) return;\n    var resolved = getVariableValue(current, element);\n    if (resolved) value.set(resolved);\n  }); // Cycle through every target property and resolve CSS variables. Currently\n  // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n\n  for (var key in target) {\n    var current = target[key];\n    if (!isCSSVariable(current)) continue;\n    var resolved = getVariableValue(current, element);\n    if (!resolved) continue; // Clone target if it hasn't already been\n\n    target[key] = resolved; // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n    // CSS variable. This will ensure that after the animation the component will reflect\n    // changes in the value of the CSS variable.\n\n    if (transitionEnd) (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;\n  }\n\n  return {\n    target: target,\n    transitionEnd: transitionEnd\n  };\n}\n\nvar positionalKeys = new Set([\"width\", \"height\", \"top\", \"left\", \"right\", \"bottom\", \"x\", \"y\"]);\n\nvar isPositionalKey = function (key) {\n  return positionalKeys.has(key);\n};\n\nvar hasPositionalKey = function (target) {\n  return Object.keys(target).some(isPositionalKey);\n};\n\nvar setAndResetVelocity = function (value, to) {\n  // Looks odd but setting it twice doesn't render, it'll just\n  // set both prev and current to the latest value\n  value.set(to, false);\n  value.set(to);\n};\n\nvar isNumOrPxType = function (v) {\n  return v === styleValueTypes.number || v === styleValueTypes.px;\n};\n\nvar BoundingBoxDimension;\n\n(function (BoundingBoxDimension) {\n  BoundingBoxDimension[\"width\"] = \"width\";\n  BoundingBoxDimension[\"height\"] = \"height\";\n  BoundingBoxDimension[\"left\"] = \"left\";\n  BoundingBoxDimension[\"right\"] = \"right\";\n  BoundingBoxDimension[\"top\"] = \"top\";\n  BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\n\nvar getPosFromMatrix = function (matrix, pos) {\n  return parseFloat(matrix.split(\", \")[pos]);\n};\n\nvar getTranslateFromMatrix = function (pos2, pos3) {\n  return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform) return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n\n    if (matrix3d) {\n      return getPosFromMatrix(matrix3d[1], pos3);\n    } else {\n      var matrix = transform.match(/^matrix\\((.+)\\)$/);\n\n      if (matrix) {\n        return getPosFromMatrix(matrix[1], pos2);\n      } else {\n        return 0;\n      }\n    }\n  };\n};\n\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) {\n  return !transformKeys.has(key);\n});\n\nfunction removeNonTranslationalTransform(visualElement) {\n  var removedTransforms = [];\n  nonTranslationalTransformKeys.forEach(function (key) {\n    var value = visualElement.getValue(key);\n\n    if (value !== undefined) {\n      removedTransforms.push([key, value.get()]);\n      value.set(key.startsWith(\"scale\") ? 1 : 0);\n    }\n  }); // Apply changes to element before measurement\n\n  if (removedTransforms.length) visualElement.syncRender();\n  return removedTransforms;\n}\n\nvar positionalValues = {\n  // Dimensions\n  width: function (_a, _b) {\n    var x = _a.x;\n    var _c = _b.paddingLeft,\n        paddingLeft = _c === void 0 ? \"0\" : _c,\n        _d = _b.paddingRight,\n        paddingRight = _d === void 0 ? \"0\" : _d;\n    return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);\n  },\n  height: function (_a, _b) {\n    var y = _a.y;\n    var _c = _b.paddingTop,\n        paddingTop = _c === void 0 ? \"0\" : _c,\n        _d = _b.paddingBottom,\n        paddingBottom = _d === void 0 ? \"0\" : _d;\n    return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);\n  },\n  top: function (_bbox, _a) {\n    var top = _a.top;\n    return parseFloat(top);\n  },\n  left: function (_bbox, _a) {\n    var left = _a.left;\n    return parseFloat(left);\n  },\n  bottom: function (_a, _b) {\n    var y = _a.y;\n    var top = _b.top;\n    return parseFloat(top) + (y.max - y.min);\n  },\n  right: function (_a, _b) {\n    var x = _a.x;\n    var left = _b.left;\n    return parseFloat(left) + (x.max - x.min);\n  },\n  // Transform\n  x: getTranslateFromMatrix(4, 13),\n  y: getTranslateFromMatrix(5, 14)\n};\n\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n  var originBbox = visualElement.measureViewportBox();\n  var element = visualElement.getInstance();\n  var elementComputedStyle = getComputedStyle(element);\n  var display = elementComputedStyle.display;\n  var origin = {}; // If the element is currently set to display: \"none\", make it visible before\n  // measuring the target bounding box\n\n  if (display === \"none\") {\n    visualElement.setStaticValue(\"display\", target.display || \"block\");\n  }\n  /**\n   * Record origins before we render and update styles\n   */\n\n\n  changedKeys.forEach(function (key) {\n    origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n  }); // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n\n  visualElement.syncRender();\n  var targetBbox = visualElement.measureViewportBox();\n  changedKeys.forEach(function (key) {\n    // Restore styles to their **calculated computed style**, not their actual\n    // originally set style. This allows us to animate between equivalent pixel units.\n    var value = visualElement.getValue(key);\n    setAndResetVelocity(value, origin[key]);\n    target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n  });\n  return target;\n};\n\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n  if (origin === void 0) {\n    origin = {};\n  }\n\n  if (transitionEnd === void 0) {\n    transitionEnd = {};\n  }\n\n  target = tslib.__assign({}, target);\n  transitionEnd = tslib.__assign({}, transitionEnd);\n  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey); // We want to remove any transform values that could affect the element's bounding box before\n  // it's measured. We'll reapply these later.\n\n  var removedTransformValues = [];\n  var hasAttemptedToRemoveTransformValues = false;\n  var changedValueTypeKeys = [];\n  targetPositionalKeys.forEach(function (key) {\n    var value = visualElement.getValue(key);\n    if (!visualElement.hasValue(key)) return;\n    var from = origin[key];\n    var fromType = findDimensionValueType(from);\n    var to = target[key];\n    var toType; // TODO: The current implementation of this basically throws an error\n    // if you try and do value conversion via keyframes. There's probably\n    // a way of doing this but the performance implications would need greater scrutiny,\n    // as it'd be doing multiple resize-remeasure operations.\n\n    if (isKeyframesTarget(to)) {\n      var numKeyframes = to.length;\n      var fromIndex = to[0] === null ? 1 : 0;\n      from = to[fromIndex];\n      fromType = findDimensionValueType(from);\n\n      for (var i = fromIndex; i < numKeyframes; i++) {\n        if (!toType) {\n          toType = findDimensionValueType(to[i]);\n          heyListen.invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), \"Keyframes must be of the same dimension as the current value\");\n        } else {\n          heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n        }\n      }\n    } else {\n      toType = findDimensionValueType(to);\n    }\n\n    if (fromType !== toType) {\n      // If they're both just number or px, convert them both to numbers rather than\n      // relying on resize/remeasure to convert (which is wasteful in this situation)\n      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n        var current = value.get();\n\n        if (typeof current === \"string\") {\n          value.set(parseFloat(current));\n        }\n\n        if (typeof to === \"string\") {\n          target[key] = parseFloat(to);\n        } else if (Array.isArray(to) && toType === styleValueTypes.px) {\n          target[key] = to.map(parseFloat);\n        }\n      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to === 0)) {\n        // If one or the other value is 0, it's safe to coerce it to the\n        // type of the other without measurement\n        if (from === 0) {\n          value.set(toType.transform(from));\n        } else {\n          target[key] = fromType.transform(to);\n        }\n      } else {\n        // If we're going to do value conversion via DOM measurements, we first\n        // need to remove non-positional transform values that could affect the bbox measurements.\n        if (!hasAttemptedToRemoveTransformValues) {\n          removedTransformValues = removeNonTranslationalTransform(visualElement);\n          hasAttemptedToRemoveTransformValues = true;\n        }\n\n        changedValueTypeKeys.push(key);\n        transitionEnd[key] = transitionEnd[key] !== undefined ? transitionEnd[key] : target[key];\n        setAndResetVelocity(value, to);\n      }\n    }\n  });\n\n  if (changedValueTypeKeys.length) {\n    var scrollY_1 = changedValueTypeKeys.indexOf(\"height\") >= 0 ? window.pageYOffset : null;\n    var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys); // If we removed transform values, reapply them before the next render\n\n    if (removedTransformValues.length) {\n      removedTransformValues.forEach(function (_a) {\n        var _b = tslib.__read(_a, 2),\n            key = _b[0],\n            value = _b[1];\n\n        visualElement.getValue(key).set(value);\n      });\n    } // Reapply original values\n\n\n    visualElement.syncRender(); // Restore scroll position\n\n    if (scrollY_1 !== null) window.scrollTo({\n      top: scrollY_1\n    });\n    return {\n      target: convertedTarget,\n      transitionEnd: transitionEnd\n    };\n  } else {\n    return {\n      target: target,\n      transitionEnd: transitionEnd\n    };\n  }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\n\n\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd) : {\n    target: target,\n    transitionEnd: transitionEnd\n  };\n}\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\n\n\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n  var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n  target = resolved.target;\n  transitionEnd = resolved.transitionEnd;\n  return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n  return window.getComputedStyle(element);\n}\n\nvar htmlConfig = {\n  treeType: \"dom\",\n  readValueFromInstance: function (domElement, key) {\n    if (isTransformProp(key)) {\n      var defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    } else {\n      var computedStyle = getComputedStyle$1(domElement);\n      return (isCSSVariable$1(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n    }\n  },\n  sortNodePosition: function (a, b) {\n    /**\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\n     * to true if b preceeds a.\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  },\n  getBaseTarget: function (props, key) {\n    var _a;\n\n    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n  },\n  measureViewportBox: function (element, _a) {\n    var transformPagePoint = _a.transformPagePoint;\n    return measureViewportBox(element, transformPagePoint);\n  },\n\n  /**\n   * Reset the transform on the current Element. This is called as part\n   * of a batched process across the entire layout tree. To remove this write\n   * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n   * works\n   */\n  resetTransform: function (element, domElement, props) {\n    var transformTemplate = props.transformTemplate;\n    domElement.style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\"; // Ensure that whatever happens next, we restore our transform on the next frame\n\n    element.scheduleRender();\n  },\n  restoreTransform: function (instance, mutableState) {\n    instance.style.transform = mutableState.style.transform;\n  },\n  removeValueFromRenderState: function (key, _a) {\n    var vars = _a.vars,\n        style = _a.style;\n    delete vars[key];\n    delete style[key];\n  },\n\n  /**\n   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n   * can be animated by Motion.\n   */\n  makeTargetAnimatable: function (element, _a, _b, isMounted) {\n    var transformValues = _b.transformValues;\n\n    if (isMounted === void 0) {\n      isMounted = true;\n    }\n\n    var transition = _a.transition,\n        transitionEnd = _a.transitionEnd,\n        target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    var origin = getOrigin(target, transition || {}, element);\n    /**\n     * If Framer has provided a function to convert `Color` etc value types, convert them\n     */\n\n    if (transformValues) {\n      if (transitionEnd) transitionEnd = transformValues(transitionEnd);\n      if (target) target = transformValues(target);\n      if (origin) origin = transformValues(origin);\n    }\n\n    if (isMounted) {\n      checkTargetForNewValues(element, target, origin);\n      var parsed = parseDomVariant(element, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n\n    return tslib.__assign({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n  build: function (element, renderState, latestValues, options, props) {\n    if (element.isVisible !== undefined) {\n      renderState.style.visibility = element.isVisible ? \"visible\" : \"hidden\";\n    }\n\n    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n  },\n  render: renderHTML\n};\nvar htmlVisualElement = visualElement(htmlConfig);\nvar svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), {\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, renderState, latestValues, options, props) {\n    buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n  },\n  render: renderSVG\n}));\n\nvar createDomVisualElement = function (Component, options) {\n  return isSVGComponent(Component) ? svgVisualElement(options, {\n    enableHardwareAcceleration: false\n  }) : htmlVisualElement(options, {\n    enableHardwareAcceleration: true\n  });\n};\n\nfunction pixelsToPercent(pixels, axis) {\n  if (axis.max === axis.min) return 0;\n  return pixels / (axis.max - axis.min) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\n\n\nvar correctBorderRadius = {\n  correct: function (latest, node) {\n    if (!node.target) return latest;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n\n    if (typeof latest === \"string\") {\n      if (styleValueTypes.px.test(latest)) {\n        latest = parseFloat(latest);\n      } else {\n        return latest;\n      }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n\n\n    var x = pixelsToPercent(latest, node.target.x);\n    var y = pixelsToPercent(latest, node.target.y);\n    return \"\".concat(x, \"% \").concat(y, \"%\");\n  }\n};\nvar varToken = \"_$css\";\nvar correctBoxShadow = {\n  correct: function (latest, _a) {\n    var treeScale = _a.treeScale,\n        projectionDelta = _a.projectionDelta;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n\n    if (containsCSSVariables) {\n      latest = latest.replace(cssVariableRegex, function (match) {\n        cssVariables.push(match);\n        return varToken;\n      });\n    }\n\n    var shadow = styleValueTypes.complex.parse(latest); // TODO: Doesn't support multiple shadows\n\n    if (shadow.length > 5) return original;\n    var template = styleValueTypes.complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0; // Calculate the overall context scale\n\n    var xScale = projectionDelta.x.scale * treeScale.x;\n    var yScale = projectionDelta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n\n    var averageScale = popmotion.mix(xScale, yScale, 0.5); // Blur\n\n    if (typeof shadow[2 + offset] === \"number\") shadow[2 + offset] /= averageScale; // Spread\n\n    if (typeof shadow[3 + offset] === \"number\") shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n\n    if (containsCSSVariables) {\n      var i_1 = 0;\n      output = output.replace(varToken, function () {\n        var cssVariable = cssVariables[i_1];\n        i_1++;\n        return cssVariable;\n      });\n    }\n\n    return output;\n  }\n};\n\nvar MeasureLayoutWithContext =\n/** @class */\nfunction (_super) {\n  tslib.__extends(MeasureLayoutWithContext, _super);\n\n  function MeasureLayoutWithContext() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * This only mounts projection nodes for components that\n   * need measuring, we might want to do it for all components\n   * in order to incorporate transforms\n   */\n\n\n  MeasureLayoutWithContext.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a = this.props,\n        visualElement = _a.visualElement,\n        layoutGroup = _a.layoutGroup,\n        switchLayoutGroup = _a.switchLayoutGroup,\n        layoutId = _a.layoutId;\n    var projection = visualElement.projection;\n    addScaleCorrector(defaultScaleCorrectors);\n\n    if (projection) {\n      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group) layoutGroup.group.add(projection);\n\n      if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n        switchLayoutGroup.register(projection);\n      }\n\n      projection.root.didUpdate();\n      projection.addEventListener(\"animationComplete\", function () {\n        _this.safeToRemove();\n      });\n      projection.setOptions(tslib.__assign(tslib.__assign({}, projection.options), {\n        onExitComplete: function () {\n          return _this.safeToRemove();\n        }\n      }));\n    }\n\n    globalProjectionState.hasEverUpdated = true;\n  };\n\n  MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n    var _this = this;\n\n    var _a = this.props,\n        layoutDependency = _a.layoutDependency,\n        visualElement = _a.visualElement,\n        drag = _a.drag,\n        isPresent = _a.isPresent;\n    var projection = visualElement.projection;\n    if (!projection) return null;\n    /**\n     * TODO: We use this data in relegate to determine whether to\n     * promote a previous element. There's no guarantee its presence data\n     * will have updated by this point - if a bug like this arises it will\n     * have to be that we markForRelegation and then find a new lead some other way,\n     * perhaps in didUpdate\n     */\n\n    projection.isPresent = isPresent;\n\n    if (drag || prevProps.layoutDependency !== layoutDependency || layoutDependency === undefined) {\n      projection.willUpdate();\n    } else {\n      this.safeToRemove();\n    }\n\n    if (prevProps.isPresent !== isPresent) {\n      if (isPresent) {\n        projection.promote();\n      } else if (!projection.relegate()) {\n        /**\n         * If there's another stack member taking over from this one,\n         * it's in charge of the exit animation and therefore should\n         * be in charge of the safe to remove. Otherwise we call it here.\n         */\n        sync__default[\"default\"].postRender(function () {\n          var _a;\n\n          if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n            _this.safeToRemove();\n          }\n        });\n      }\n    }\n\n    return null;\n  };\n\n  MeasureLayoutWithContext.prototype.componentDidUpdate = function () {\n    var projection = this.props.visualElement.projection;\n\n    if (projection) {\n      projection.root.didUpdate();\n\n      if (!projection.currentAnimation && projection.isLead()) {\n        this.safeToRemove();\n      }\n    }\n  };\n\n  MeasureLayoutWithContext.prototype.componentWillUnmount = function () {\n    var _a = this.props,\n        visualElement = _a.visualElement,\n        layoutGroup = _a.layoutGroup,\n        promoteContext = _a.switchLayoutGroup;\n    var projection = visualElement.projection;\n\n    if (projection) {\n      projection.scheduleCheckAfterUnmount();\n      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group) layoutGroup.group.remove(projection);\n      if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister) promoteContext.deregister(projection);\n    }\n  };\n\n  MeasureLayoutWithContext.prototype.safeToRemove = function () {\n    var safeToRemove = this.props.safeToRemove;\n    safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n  };\n\n  MeasureLayoutWithContext.prototype.render = function () {\n    return null;\n  };\n\n  return MeasureLayoutWithContext;\n}(React__default[\"default\"].Component);\n\nfunction MeasureLayout(props) {\n  var _a = tslib.__read(usePresence(), 2),\n      isPresent = _a[0],\n      safeToRemove = _a[1];\n\n  var layoutGroup = React.useContext(LayoutGroupContext);\n  return React__default[\"default\"].createElement(MeasureLayoutWithContext, tslib.__assign({}, props, {\n    layoutGroup: layoutGroup,\n    switchLayoutGroup: React.useContext(SwitchLayoutGroupContext),\n    isPresent: isPresent,\n    safeToRemove: safeToRemove\n  }));\n}\n\nvar defaultScaleCorrectors = {\n  borderRadius: tslib.__assign(tslib.__assign({}, correctBorderRadius), {\n    applyTo: [\"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomLeftRadius\", \"borderBottomRightRadius\"]\n  }),\n  borderTopLeftRadius: correctBorderRadius,\n  borderTopRightRadius: correctBorderRadius,\n  borderBottomLeftRadius: correctBorderRadius,\n  borderBottomRightRadius: correctBorderRadius,\n  boxShadow: correctBoxShadow\n};\nvar layoutFeatures = {\n  measureLayout: MeasureLayout\n};\nvar DocumentProjectionNode = createProjectionNode({\n  attachResizeListener: function (ref, notify) {\n    return addDomEvent(ref, \"resize\", notify);\n  },\n  measureScroll: function () {\n    return {\n      x: document.documentElement.scrollLeft || document.body.scrollLeft,\n      y: document.documentElement.scrollTop || document.body.scrollTop\n    };\n  },\n  checkIsScrollRoot: function () {\n    return true;\n  }\n});\nvar rootProjectionNode = {\n  current: undefined\n};\nvar HTMLProjectionNode = createProjectionNode({\n  measureScroll: function (instance) {\n    return {\n      x: instance.scrollLeft,\n      y: instance.scrollTop\n    };\n  },\n  defaultParent: function () {\n    if (!rootProjectionNode.current) {\n      var documentNode = new DocumentProjectionNode(0, {});\n      documentNode.mount(window);\n      documentNode.setOptions({\n        layoutScroll: true\n      });\n      rootProjectionNode.current = documentNode;\n    }\n\n    return rootProjectionNode.current;\n  },\n  resetTransform: function (instance, value) {\n    instance.style.transform = value !== null && value !== void 0 ? value : \"none\";\n  },\n  checkIsScrollRoot: function (instance) {\n    return Boolean(window.getComputedStyle(instance).position === \"fixed\");\n  }\n});\n\nvar featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutFeatures);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\n\n\nvar motion = /*@__PURE__*/createMotionProxy(function (Component, config) {\n  return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode);\n});\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\n\nfunction createDomMotionComponent(key) {\n  return createMotionComponent(createDomMotionConfig(key, {\n    forwardMotionProps: false\n  }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n/**\n * @public\n */\n\n\nvar m = createMotionProxy(createDomMotionConfig);\n\nfunction useIsMounted() {\n  var isMounted = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n}\n\nfunction useForceUpdate() {\n  var isMounted = useIsMounted();\n\n  var _a = tslib.__read(React.useState(0), 2),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  var forceRender = React.useCallback(function () {\n    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  var deferredForceRender = React.useCallback(function () {\n    return sync__default[\"default\"].postRender(forceRender);\n  }, [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n\nvar PresenceChild = function (_a) {\n  var children = _a.children,\n      initial = _a.initial,\n      isPresent = _a.isPresent,\n      onExitComplete = _a.onExitComplete,\n      custom = _a.custom,\n      presenceAffectsLayout = _a.presenceAffectsLayout;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useId();\n  var context = React.useMemo(function () {\n    return {\n      id: id,\n      initial: initial,\n      isPresent: isPresent,\n      custom: custom,\n      onExitComplete: function (childId) {\n        var e_1, _a;\n\n        presenceChildren.set(childId, true);\n\n        try {\n          for (var _b = tslib.__values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var isComplete = _c.value;\n            if (!isComplete) return; // can stop searching when any is incomplete\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n      },\n      register: function (childId) {\n        presenceChildren.set(childId, false);\n        return function () {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  },\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  React.useMemo(function () {\n    presenceChildren.forEach(function (_, key) {\n      return presenceChildren.set(key, false);\n    });\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n\n  React__namespace.useEffect(function () {\n    !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n  }, [isPresent]);\n  return React__namespace.createElement(PresenceContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nvar getChildKey = function (child) {\n  return child.key || \"\";\n};\n\nfunction updateChildLookup(children, allChildren) {\n  children.forEach(function (child) {\n    var key = getChildKey(child);\n    allChildren.set(key, child);\n  });\n}\n\nfunction onlyElements(children) {\n  var filtered = []; // We use forEach here instead of map as map mutates the component key by preprending `.$`\n\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child)) filtered.push(child);\n  });\n  return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\n\n\nvar AnimatePresence = function (_a) {\n  var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter,\n      _c = _a.presenceAffectsLayout,\n      presenceAffectsLayout = _c === void 0 ? true : _c; // We want to force a re-render once all exiting animations have finished. We\n  // either use a local forceRender function, or one from a parent context if it exists.\n\n  var _d = tslib.__read(useForceUpdate(), 1),\n      forceRender = _d[0];\n\n  var forceRenderLayoutGroup = React.useContext(LayoutGroupContext).forceRender;\n  if (forceRenderLayoutGroup) forceRender = forceRenderLayoutGroup;\n  var isMounted = useIsMounted(); // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n\n  var filteredChildren = onlyElements(children);\n  var childrenToRender = filteredChildren;\n  var exiting = new Set(); // Keep a living record of the children we're actually rendering so we\n  // can diff to figure out which are entering and exiting\n\n  var presentChildren = React.useRef(childrenToRender); // A lookup table to quickly reference components by key\n\n  var allChildren = React.useRef(new Map()).current; // If this is the initial component render, just deal with logic surrounding whether\n  // we play onMount animations or not.\n\n  var isInitialRender = React.useRef(true);\n  useIsomorphicLayoutEffect(function () {\n    isInitialRender.current = false;\n    updateChildLookup(filteredChildren, allChildren);\n    presentChildren.current = childrenToRender;\n  });\n  useUnmountEffect(function () {\n    isInitialRender.current = true;\n    allChildren.clear();\n    exiting.clear();\n  });\n\n  if (isInitialRender.current) {\n    return React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map(function (child) {\n      return React__namespace.createElement(PresenceChild, {\n        key: getChildKey(child),\n        isPresent: true,\n        initial: initial ? undefined : false,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child);\n    }));\n  } // If this is a subsequent render, deal with entering and exiting children\n\n\n  childrenToRender = tslib.__spreadArray([], tslib.__read(childrenToRender), false); // Diff the keys of the currently-present and target children to update our\n  // exiting list.\n\n  var presentKeys = presentChildren.current.map(getChildKey);\n  var targetKeys = filteredChildren.map(getChildKey); // Diff the present children with our target children and mark those that are exiting\n\n  var numPresent = presentKeys.length;\n\n  for (var i = 0; i < numPresent; i++) {\n    var key = presentKeys[i];\n\n    if (targetKeys.indexOf(key) === -1) {\n      exiting.add(key);\n    }\n  } // If we currently have exiting children, and we're deferring rendering incoming children\n  // until after all current children have exiting, empty the childrenToRender array\n\n\n  if (exitBeforeEnter && exiting.size) {\n    childrenToRender = [];\n  } // Loop through all currently exiting components and clone them to overwrite `animate`\n  // with any `exit` prop they might have defined.\n\n\n  exiting.forEach(function (key) {\n    // If this component is actually entering again, early return\n    if (targetKeys.indexOf(key) !== -1) return;\n    var child = allChildren.get(key);\n    if (!child) return;\n    var insertionIndex = presentKeys.indexOf(key);\n\n    var onExit = function () {\n      allChildren.delete(key);\n      exiting.delete(key); // Remove this child from the present children\n\n      var removeIndex = presentChildren.current.findIndex(function (presentChild) {\n        return presentChild.key === key;\n      });\n      presentChildren.current.splice(removeIndex, 1); // Defer re-rendering until all exiting children have indeed left\n\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n        if (isMounted.current === false) return;\n        forceRender();\n        onExitComplete && onExitComplete();\n      }\n    };\n\n    childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: false,\n      onExitComplete: onExit,\n      custom: custom,\n      presenceAffectsLayout: presenceAffectsLayout\n    }, child));\n  }); // Add `MotionContext` even to children that don't need it to ensure we're rendering\n  // the same tree between renders\n\n  childrenToRender = childrenToRender.map(function (child) {\n    var key = child.key;\n    return exiting.has(key) ? child : React__namespace.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: true,\n      presenceAffectsLayout: presenceAffectsLayout\n    }, child);\n  });\n\n  if (env !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n    console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n  }\n\n  return React__namespace.createElement(React__namespace.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n    return React.cloneElement(child);\n  }));\n};\n/**\n * @deprecated\n */\n\n\nvar DeprecatedLayoutGroupContext = React.createContext(null);\n\nvar notify = function (node) {\n  return !node.isLayoutDirty && node.willUpdate(false);\n};\n\nfunction nodeGroup() {\n  var nodes = new Set();\n  var subscriptions = new WeakMap();\n\n  var dirtyAll = function () {\n    return nodes.forEach(notify);\n  };\n\n  return {\n    add: function (node) {\n      nodes.add(node);\n      subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n    },\n    remove: function (node) {\n      var _a;\n\n      nodes.delete(node);\n      (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n      subscriptions.delete(node);\n      dirtyAll();\n    },\n    dirty: dirtyAll\n  };\n}\n\nvar shouldInheritGroup = function (inherit) {\n  return inherit === true;\n};\n\nvar shouldInheritId = function (inherit) {\n  return shouldInheritGroup(inherit === true) || inherit === \"id\";\n};\n\nvar LayoutGroup = function (_a) {\n  var _b, _c;\n\n  var children = _a.children,\n      id = _a.id,\n      inheritId = _a.inheritId,\n      _d = _a.inherit,\n      inherit = _d === void 0 ? true : _d; // Maintain backwards-compatibility with inheritId until 7.0\n\n  if (inheritId !== undefined) inherit = inheritId;\n  var layoutGroupContext = React.useContext(LayoutGroupContext);\n  var deprecatedLayoutGroupContext = React.useContext(DeprecatedLayoutGroupContext);\n\n  var _e = tslib.__read(useForceUpdate(), 2),\n      forceRender = _e[0],\n      key = _e[1];\n\n  var context = React.useRef(null);\n  var upstreamId = (_b = layoutGroupContext.id) !== null && _b !== void 0 ? _b : deprecatedLayoutGroupContext;\n\n  if (context.current === null) {\n    if (shouldInheritId(inherit) && upstreamId) {\n      id = id ? upstreamId + \"-\" + id : upstreamId;\n    }\n\n    context.current = {\n      id: id,\n      group: shouldInheritGroup(inherit) ? (_c = layoutGroupContext === null || layoutGroupContext === void 0 ? void 0 : layoutGroupContext.group) !== null && _c !== void 0 ? _c : nodeGroup() : nodeGroup()\n    };\n  }\n\n  var memoizedContext = React.useMemo(function () {\n    return tslib.__assign(tslib.__assign({}, context.current), {\n      forceRender: forceRender\n    });\n  }, [key]);\n  return React__namespace.createElement(LayoutGroupContext.Provider, {\n    value: memoizedContext\n  }, children);\n};\n\nvar id = 0;\n\nvar AnimateSharedLayout = function (_a) {\n  var children = _a.children;\n  React__namespace.useEffect(function () {\n    heyListen.warning(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n  }, []);\n  return React__namespace.createElement(LayoutGroup, {\n    id: useConstant(function () {\n      return \"asl-\".concat(id++);\n    })\n  }, children);\n};\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\n\n\nfunction MotionConfig(_a) {\n  var children = _a.children,\n      isValidProp = _a.isValidProp,\n      config = tslib.__rest(_a, [\"children\", \"isValidProp\"]);\n\n  isValidProp && loadExternalIsValidProp(isValidProp);\n  /**\n   * Inherit props from any parent MotionConfig components\n   */\n\n  config = tslib.__assign(tslib.__assign({}, React.useContext(MotionConfigContext)), config);\n  /**\n   * Don't allow isStatic to change between renders as it affects how many hooks\n   * motion components fire.\n   */\n\n  config.isStatic = useConstant(function () {\n    return config.isStatic;\n  });\n  /**\n   * Creating a new config context object will re-render every `motion` component\n   * every time it renders. So we only want to create a new one sparingly.\n   */\n\n  var context = React.useMemo(function () {\n    return config;\n  }, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n  return React__namespace.createElement(MotionConfigContext.Provider, {\n    value: context\n  }, children);\n}\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\n\n\nfunction LazyMotion(_a) {\n  var children = _a.children,\n      features = _a.features,\n      _b = _a.strict,\n      strict = _b === void 0 ? false : _b;\n\n  var _c = tslib.__read(React.useState(!isLazyBundle(features)), 2),\n      setIsLoaded = _c[1];\n\n  var loadedRenderer = React.useRef(undefined);\n  /**\n   * If this is a synchronous load, load features immediately\n   */\n\n  if (!isLazyBundle(features)) {\n    var renderer = features.renderer,\n        loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n\n    loadedRenderer.current = renderer;\n    loadFeatures(loadedFeatures);\n  }\n\n  React.useEffect(function () {\n    if (isLazyBundle(features)) {\n      features().then(function (_a) {\n        var renderer = _a.renderer,\n            loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n\n        loadFeatures(loadedFeatures);\n        loadedRenderer.current = renderer;\n        setIsLoaded(true);\n      });\n    }\n  }, []);\n  return React__namespace.createElement(LazyContext.Provider, {\n    value: {\n      renderer: loadedRenderer.current,\n      strict: strict\n    }\n  }, children);\n}\n\nfunction isLazyBundle(features) {\n  return typeof features === \"function\";\n}\n\nvar ReorderContext = React.createContext(null);\n\nfunction checkReorder(order, value, offset, velocity) {\n  if (!velocity) return order;\n  var index = order.findIndex(function (item) {\n    return item.value === value;\n  });\n  if (index === -1) return order;\n  var nextOffset = velocity > 0 ? 1 : -1;\n  var nextItem = order[index + nextOffset];\n  if (!nextItem) return order;\n  var item = order[index];\n  var nextLayout = nextItem.layout;\n  var nextItemCenter = popmotion.mix(nextLayout.min, nextLayout.max, 0.5);\n\n  if (nextOffset === 1 && item.layout.max + offset > nextItemCenter || nextOffset === -1 && item.layout.min + offset < nextItemCenter) {\n    return moveItem(order, index, index + nextOffset);\n  }\n\n  return order;\n}\n\nfunction ReorderGroup(_a, externalRef) {\n  var children = _a.children,\n      _b = _a.as,\n      as = _b === void 0 ? \"ul\" : _b,\n      _c = _a.axis,\n      axis = _c === void 0 ? \"y\" : _c,\n      onReorder = _a.onReorder,\n      values = _a.values,\n      props = tslib.__rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n\n  var Component = useConstant(function () {\n    return motion(as);\n  });\n  var order = [];\n  var isReordering = React.useRef(false);\n  heyListen.invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n  var context = {\n    axis: axis,\n    registerItem: function (value, layout) {\n      /**\n       * Ensure entries can't add themselves more than once\n       */\n      if (layout && order.findIndex(function (entry) {\n        return value === entry.value;\n      }) === -1) {\n        order.push({\n          value: value,\n          layout: layout[axis]\n        });\n        order.sort(compareMin);\n      }\n    },\n    updateOrder: function (id, offset, velocity) {\n      if (isReordering.current) return;\n      var newOrder = checkReorder(order, id, offset, velocity);\n\n      if (order !== newOrder) {\n        isReordering.current = true;\n        onReorder(newOrder.map(getValue).filter(function (value) {\n          return values.indexOf(value) !== -1;\n        }));\n      }\n    }\n  };\n  React.useEffect(function () {\n    isReordering.current = false;\n  });\n  return React__namespace.createElement(Component, tslib.__assign({}, props, {\n    ref: externalRef\n  }), React__namespace.createElement(ReorderContext.Provider, {\n    value: context\n  }, children));\n}\n\nvar Group = React.forwardRef(ReorderGroup);\n\nfunction getValue(item) {\n  return item.value;\n}\n\nfunction compareMin(a, b) {\n  return a.layout.min - b.layout.min;\n}\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = React.useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = tslib.__read(React.useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    React.useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nvar isCustomValueType = function (v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function (v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useOnChange(value, callback) {\n  React.useEffect(function () {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  React.useEffect(function () {\n    var subscriptions = values.map(function (value) {\n      return value.onChange(handler);\n    });\n    return function () {\n      return subscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  var value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  var updateValue = function () {\n    return value.set(combineValues());\n  };\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useMultiOnChange(values, function () {\n    return sync__default[\"default\"].update(updateValue, false, true);\n  });\n  return value;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function (_a) {\n    var _b = tslib.__read(_a, 1),\n        latest = _b[0];\n\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function () {\n    return [];\n  });\n  return useCombineMotionValues(values, function () {\n    latest.length = 0;\n    var numValues = values.length;\n\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nfunction useDefaultMotionValue(value, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = 0;\n  }\n\n  return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\n\nfunction ReorderItem(_a, externalRef) {\n  var children = _a.children,\n      style = _a.style,\n      value = _a.value,\n      _b = _a.as,\n      as = _b === void 0 ? \"li\" : _b,\n      onDrag = _a.onDrag,\n      _c = _a.layout,\n      layout = _c === void 0 ? true : _c,\n      props = tslib.__rest(_a, [\"children\", \"style\", \"value\", \"as\", \"onDrag\", \"layout\"]);\n\n  var Component = useConstant(function () {\n    return motion(as);\n  });\n  var context = React.useContext(ReorderContext);\n  var point = {\n    x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),\n    y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y)\n  };\n  var zIndex = useTransform([point.x, point.y], function (_a) {\n    var _b = tslib.__read(_a, 2),\n        latestX = _b[0],\n        latestY = _b[1];\n\n    return latestX || latestY ? 1 : \"unset\";\n  });\n  var measuredLayout = React.useRef(null);\n  heyListen.invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n  var _d = context,\n      axis = _d.axis,\n      registerItem = _d.registerItem,\n      updateOrder = _d.updateOrder;\n  React.useEffect(function () {\n    registerItem(value, measuredLayout.current);\n  }, [context]);\n  return React__namespace.createElement(Component, tslib.__assign({\n    drag: axis\n  }, props, {\n    dragSnapToOrigin: true,\n    style: tslib.__assign(tslib.__assign({}, style), {\n      x: point.x,\n      y: point.y,\n      zIndex: zIndex\n    }),\n    layout: layout,\n    onDrag: function (event, gesturePoint) {\n      var velocity = gesturePoint.velocity;\n      velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);\n      onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);\n    },\n    onLayoutMeasure: function (measured) {\n      measuredLayout.current = measured;\n    },\n    ref: externalRef\n  }), children);\n}\n\nvar Item = React.forwardRef(ReorderItem);\nvar Reorder = {\n  Group: Group,\n  Item: Item\n};\n/**\n * @public\n */\n\nvar domAnimation = tslib.__assign(tslib.__assign({\n  renderer: createDomVisualElement\n}, animations), gestureAnimations);\n/**\n * @public\n */\n\n\nvar domMax = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutFeatures), {\n  projectionNodeConstructor: HTMLProjectionNode\n});\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useMotionTemplate(fragments) {\n  var values = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n  /**\n   * Create a function that will build a string from the latest motion values.\n   */\n\n\n  var numFragments = fragments.length;\n\n  function buildValue() {\n    var output = \"\";\n\n    for (var i = 0; i < numFragments; i++) {\n      output += fragments[i];\n      var value = values[i];\n      if (value) output += values[i].get();\n    }\n\n    return output;\n  }\n\n  return useCombineMotionValues(values, buildValue);\n}\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\n\n\nfunction useSpring(source, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var isStatic = React.useContext(MotionConfigContext).isStatic;\n  var activeSpringAnimation = React.useRef(null);\n  var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  React.useMemo(function () {\n    return value.attach(function (v, set) {\n      /**\n       * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n       * at that level, but this will work for now\n       */\n      if (isStatic) return set(v);\n\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n\n      activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({\n        from: value.get(),\n        to: v,\n        velocity: value.getVelocity()\n      }, config), {\n        onUpdate: set\n      }));\n      return value.get();\n    });\n  }, [JSON.stringify(config)]);\n  useOnChange(source, function (v) {\n    return value.set(parseFloat(v));\n  });\n  return value;\n}\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\n\n\nfunction useVelocity(value) {\n  var velocity = useMotionValue(value.getVelocity());\n  React.useEffect(function () {\n    return value.velocityUpdateSubscribers.add(function (newVelocity) {\n      velocity.set(newVelocity);\n    });\n  }, [value]);\n  return velocity;\n}\n\nfunction createScrollMotionValues() {\n  return {\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0)\n  };\n}\n\nfunction setProgress(offset, maxOffset, value) {\n  value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\n\nfunction createScrollUpdater(values, getOffsets) {\n  var update = function () {\n    var _a = getOffsets(),\n        xOffset = _a.xOffset,\n        yOffset = _a.yOffset,\n        xMaxOffset = _a.xMaxOffset,\n        yMaxOffset = _a.yMaxOffset; // Set absolute positions\n\n\n    values.scrollX.set(xOffset);\n    values.scrollY.set(yOffset); // Set 0-1 progress\n\n    setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n    setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n  };\n\n  update();\n  return update;\n}\n\nvar getElementScrollOffsets = function (element) {\n  return function () {\n    return {\n      xOffset: element.scrollLeft,\n      yOffset: element.scrollTop,\n      xMaxOffset: element.scrollWidth - element.offsetWidth,\n      yMaxOffset: element.scrollHeight - element.offsetHeight\n    };\n  };\n};\n/**\n * Returns MotionValues that update when the provided element scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * This element must be set to `overflow: scroll` on either or both axes to report scroll offset.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const ref = useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <div ref={ref}>\n *       <motion.div style={{ scaleX: scrollYProgress }} />\n *     </div>\n *   )\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useElementScroll(ref) {\n  var values = useConstant(createScrollMotionValues);\n  useIsomorphicLayoutEffect(function () {\n    var element = ref.current;\n    heyListen.invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n    if (!element) return;\n    var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n    var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues);\n    var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n    return function () {\n      scrollListener && scrollListener();\n      resizeListener && resizeListener();\n    };\n  }, []);\n  return values;\n}\n\nvar viewportScrollValues;\n\nfunction getViewportScrollOffsets() {\n  return {\n    xOffset: window.pageXOffset,\n    yOffset: window.pageYOffset,\n    xMaxOffset: document.body.clientWidth - window.innerWidth,\n    yMaxOffset: document.body.clientHeight - window.innerHeight\n  };\n}\n\nvar hasListeners = false;\n\nfunction addEventListeners() {\n  hasListeners = true;\n  var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n  addDomEvent(window, \"scroll\", updateScrollValues);\n  addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\n * Returns MotionValues that update when the viewport scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\n * values as this breaks the browser's capability to accurately measure the page length.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useViewportScroll() {\n  /**\n   * Lazy-initialise the viewport scroll values\n   */\n  if (!viewportScrollValues) {\n    viewportScrollValues = createScrollMotionValues();\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    !hasListeners && addEventListeners();\n  }, []);\n  return viewportScrollValues;\n}\n\nvar getCurrentTime = typeof performance !== \"undefined\" ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useConstant(getCurrentTime);\n  var isStatic = React.useContext(MotionConfigContext).isStatic;\n  React.useEffect(function () {\n    if (isStatic) return;\n\n    var provideTimeSinceStart = function (_a) {\n      var timestamp = _a.timestamp;\n      callback(timestamp - initialTimestamp);\n    };\n\n    sync__default[\"default\"].update(provideTimeSinceStart, true);\n    return function () {\n      return sync.cancelSync.update(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nfunction useTime() {\n  var time = useMotionValue(0);\n  useAnimationFrame(function (t) {\n    return time.set(t);\n  });\n  return time;\n}\n/**\n * @public\n */\n\n\nfunction animationControls() {\n  /**\n   * Track whether the host component has mounted.\n   */\n  var hasMounted = false;\n  /**\n   * Pending animations that are started before a component is mounted.\n   * TODO: Remove this as animations should only run in effects\n   */\n\n  var pendingAnimations = [];\n  /**\n   * A collection of linked component animation controls.\n   */\n\n  var subscribers = new Set();\n  var controls = {\n    subscribe: function (visualElement) {\n      subscribers.add(visualElement);\n      return function () {\n        return void subscribers.delete(visualElement);\n      };\n    },\n    start: function (definition, transitionOverride) {\n      /**\n       * TODO: We only perform this hasMounted check because in Framer we used to\n       * encourage the ability to start an animation within the render phase. This\n       * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n       * we can ditch this.\n       */\n      if (hasMounted) {\n        var animations_1 = [];\n        subscribers.forEach(function (visualElement) {\n          animations_1.push(animateVisualElement(visualElement, definition, {\n            transitionOverride: transitionOverride\n          }));\n        });\n        return Promise.all(animations_1);\n      } else {\n        return new Promise(function (resolve) {\n          pendingAnimations.push({\n            animation: [definition, transitionOverride],\n            resolve: resolve\n          });\n        });\n      }\n    },\n    set: function (definition) {\n      heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n      return subscribers.forEach(function (visualElement) {\n        setValues(visualElement, definition);\n      });\n    },\n    stop: function () {\n      subscribers.forEach(function (visualElement) {\n        stopAnimation(visualElement);\n      });\n    },\n    mount: function () {\n      hasMounted = true;\n      pendingAnimations.forEach(function (_a) {\n        var animation = _a.animation,\n            resolve = _a.resolve;\n        controls.start.apply(controls, tslib.__spreadArray([], tslib.__read(animation), false)).then(resolve);\n      });\n      return function () {\n        hasMounted = false;\n        controls.stop();\n      };\n    }\n  };\n  return controls;\n}\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\n\n\nfunction useAnimation() {\n  var controls = useConstant(animationControls);\n  React.useEffect(controls.mount, []);\n  return controls;\n}\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\n\n\nfunction useCycle() {\n  var items = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    items[_i] = arguments[_i];\n  }\n\n  var index = React.useRef(0);\n\n  var _a = tslib.__read(React.useState(items[index.current]), 2),\n      item = _a[0],\n      setItem = _a[1];\n\n  var runCycle = React.useCallback(function (next) {\n    index.current = typeof next !== \"number\" ? popmotion.wrap(0, items.length, index.current + 1) : next;\n    setItem(items[index.current]);\n  }, tslib.__spreadArray([items.length], tslib.__read(items), false));\n  return [item, runCycle];\n}\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\n\n\nvar DragControls =\n/** @class */\nfunction () {\n  function DragControls() {\n    this.componentControls = new Set();\n  }\n  /**\n   * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n   *\n   * @internal\n   */\n\n\n  DragControls.prototype.subscribe = function (controls) {\n    var _this = this;\n\n    this.componentControls.add(controls);\n    return function () {\n      return _this.componentControls.delete(controls);\n    };\n  };\n  /**\n   * Start a drag gesture on every `motion` component that has this set of drag controls\n   * passed into it via the `dragControls` prop.\n   *\n   * ```jsx\n   * dragControls.start(e, {\n   *   snapToCursor: true\n   * })\n   * ```\n   *\n   * @param event - PointerEvent\n   * @param options - Options\n   *\n   * @public\n   */\n\n\n  DragControls.prototype.start = function (event, options) {\n    this.componentControls.forEach(function (controls) {\n      controls.start(event.nativeEvent || event, options);\n    });\n  };\n\n  return DragControls;\n}();\n\nvar createDragControls = function () {\n  return new DragControls();\n};\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\n\n\nfunction useDragControls() {\n  return useConstant(createDragControls);\n}\n\nfunction useInstantLayoutTransition() {\n  return startTransition;\n}\n\nfunction startTransition(cb) {\n  if (!rootProjectionNode.current) return;\n  rootProjectionNode.current.isUpdating = false;\n  rootProjectionNode.current.blockUpdate();\n  cb === null || cb === void 0 ? void 0 : cb();\n}\n\nfunction useInstantTransition() {\n  var _a = tslib.__read(useForceUpdate(), 2),\n      forceUpdate = _a[0],\n      forcedRenderCount = _a[1];\n\n  var startInstantLayoutTransition = useInstantLayoutTransition();\n  React.useEffect(function () {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    sync__default[\"default\"].postRender(function () {\n      return sync__default[\"default\"].postRender(function () {\n        return instantAnimationState.current = false;\n      });\n    });\n  }, [forcedRenderCount]);\n  return function (callback) {\n    startInstantLayoutTransition(function () {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n    });\n  };\n}\n\nfunction useResetProjection() {\n  var reset = React__namespace.useCallback(function () {\n    var root = rootProjectionNode.current;\n    if (!root) return;\n    root.resetTree();\n  }, []);\n  return reset;\n}\n\nvar createObject = function () {\n  return {};\n};\n\nvar stateVisualElement = visualElement({\n  build: function () {},\n  measureViewportBox: createBox,\n  resetTransform: function () {},\n  restoreTransform: function () {},\n  removeValueFromRenderState: function () {},\n  render: function () {},\n  scrapeMotionValuesFromProps: createObject,\n  readValueFromInstance: function (_state, key, options) {\n    return options.initialState[key] || 0;\n  },\n  makeTargetAnimatable: function (element, _a) {\n    var transition = _a.transition,\n        transitionEnd = _a.transitionEnd,\n        target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    var origin = getOrigin(target, transition || {}, element);\n    checkTargetForNewValues(element, target, origin);\n    return tslib.__assign({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  }\n});\nvar useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\n\nfunction useAnimatedState(initialState) {\n  var _a = tslib.__read(React.useState(initialState), 2),\n      animationState = _a[0],\n      setAnimationState = _a[1];\n\n  var visualState = useVisualState({}, false);\n  var element = useConstant(function () {\n    return stateVisualElement({\n      props: {},\n      visualState: visualState\n    }, {\n      initialState: initialState\n    });\n  });\n  React.useEffect(function () {\n    element.mount({});\n    return element.unmount;\n  }, [element]);\n  React.useEffect(function () {\n    element.setProps({\n      onUpdate: function (v) {\n        setAnimationState(tslib.__assign({}, v));\n      }\n    });\n  }, [setAnimationState, element]);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation];\n} // Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\n\n\nvar maxScale = 100000;\n\nvar invertScale = function (scale) {\n  return scale > 0.001 ? 1 / scale : maxScale;\n};\n\nvar hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\n\nfunction useInvertedScale(scale) {\n  var parentScaleX = useMotionValue(1);\n  var parentScaleY = useMotionValue(1);\n  var visualElement = useVisualElementContext();\n  heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n  heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n  hasWarned = true;\n\n  if (scale) {\n    parentScaleX = scale.scaleX || parentScaleX;\n    parentScaleY = scale.scaleY || parentScaleY;\n  } else if (visualElement) {\n    parentScaleX = visualElement.getValue(\"scaleX\", 1);\n    parentScaleY = visualElement.getValue(\"scaleY\", 1);\n  }\n\n  var scaleX = useTransform(parentScaleX, invertScale);\n  var scaleY = useTransform(parentScaleY, invertScale);\n  return {\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.LayoutGroup = LayoutGroup;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.Reorder = Reorder;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.animations = animations;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.createBox = createBox;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.filterProps = filterProps;\nexports.isBrowser = isBrowser;\nexports.isDragActive = isDragActive;\nexports.isMotionValue = isMotionValue;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.makeUseVisualState = makeUseVisualState;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useAnimationFrame = useAnimationFrame;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useForceUpdate = useForceUpdate;\nexports.useInstantLayoutTransition = useInstantLayoutTransition;\nexports.useInstantTransition = useInstantTransition;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useReducedMotionConfig = useReducedMotionConfig;\nexports.useResetProjection = useResetProjection;\nexports.useSpring = useSpring;\nexports.useTime = useTime;\nexports.useTransform = useTransform;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.useVisualElementContext = useVisualElementContext;\nexports.visualElement = visualElement;\nexports.wrapHandler = wrapHandler;","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib","require","React","heyListen","sync","popmotion","styleValueTypes","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React__namespace","React__default","sync__default","defaultEnvironment","env","process","undefined","NODE_ENV","createDefinition","propNames","isEnabled","props","some","name","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","loadFeatures","features","key","projectionNodeConstructor","Component","LazyContext","createContext","strict","featureNames","numFeatures","length","useFeatures","visualElement","preloadedFeatures","lazyContext","useContext","invariant","i","name_1","_a","push","createElement","__assign","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","useVisualElementContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","prefersReducedMotion","current","hasDetected","initPrefersReducedMotion","window","matchMedia","motionMediaQuery_1","setReducedMotionPreferences","matches","addListener","useReducedMotion","__read","useState","shouldReduceMotion","useReducedMotionConfig","reducedMotionPreference","useVisualElement","visualState","createVisualElement","parent","presenceContext","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","syncRender","animationState","animateChanges","notifyUnmount","isRefObject","ref","prototype","hasOwnProperty","call","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabels","v","Array","isArray","isVariantLabel","getCurrent","forEachValue","getVelocity$1","velocity","getVelocity","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","variants","resolveVariant","getProps","checkIfControllingVariants","animate","start","whileHover","whileDrag","whileTap","whileFocus","checkIfVariantNode","Boolean","getCurrentTreeVariants","context","inherit","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","join","useConstant","init","addUniqueItem","arr","item","indexOf","removeItem","index","splice","moveItem","fromIndex","toIndex","_b","slice","startIndex","endIndex","_c","SubscriptionManager","subscriptions","add","handler","_this","notify","a","b","c","numSubscriptions","getSize","clear","isFloat","isNaN","parseFloat","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","render","prev","getFrameData","delta","timestamp","postRender","scheduleVelocityCheck","velocityCheck","hasAnimated","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","set","getPrevious","velocityPerSecond","stop","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","isMotionValue","secondsToMilliseconds","seconds","easingLookup","linear","easeIn","easeInOut","easeOut","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","bounceIn","bounceInOut","bounceOut","easingDefinitionToFunction","x1","y1","x2","y2","cubicBezier","concat","isEasingArray","ease","isAnimatable","complex","test","startsWith","isKeyframesTarget","underDampedSpring","type","stiffness","damping","restSpeed","criticallyDampedSpring","to","Math","sqrt","linearTween","duration","keyframes","values","defaultTransitions","x","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","color","default","getDefaultTransition","valueKey","transitionFactory","int","number","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","degrees","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","transformPerspective","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","filter","WebkitFilter","getDefaultValueType","getAnimatableNone","defaultValueType","instantAnimationState","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","transition","__rest","legacyRepeatWarning","convertTransitionToAnimationOptions","times","yoyo","flip","loop","options","map","warning","getDelayFromTransition","valueTransition","getValueTransition","hydrateKeyframes","__spreadArray","getPopmotionAnimationOptions","getAnimation","target","onComplete","origin","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","onUpdate","inertia","finalTarget","potentialUnitType","startAnimation","delayTimer","controls","setTimeout","clearTimeout","borders","numBorders","asNumber","isPx","mixValues","follow","lead","progress","shouldCrossfadeOpacity","isOnlyMember","_d","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","canMix","max","percent","radiusName","compress","min","easing","copyAxisInto","axis","originAxis","copyBoxInto","box","originBox","isIdentityScale","hasScale","hasTransform","hasTranslate","scalePoint","point","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","projectionDelta","style","display","layoutScroll","scroll","root","transformBox","latestValues","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys$1","yKeys$1","calcLength","isNear","maxDistance","calcAxisDelta","source","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition","removePointDelta","removeAxisDelta","sourceAxis","relativeProgress","removeAxisTransforms","xKeys","yKeys","removeBoxTransforms","sourceBox","createAxisDelta","createDelta","createAxis","createBox","isAxisDeltaZero","isDeltaZero","boxEquals","NodeStack","members","scheduleRender","remove","prevLead","promote","relegate","indexOfNode","findIndex","member","isPresent","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isShared","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","onExitComplete","resumingFrom","removeLeadSnapshot","scaleCorrectors","addScaleCorrector","correctors","assign","identityProjection","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","eachAxis","callback","transformAxes","order","transformProps","operationKey","axesKey","sortTransformProps","transformPropSet","Set","isTransformProp","has","transformOriginProps","isTransformOriginProp","compareByDepth","depth","FlatTree","children","isDirty","child","sort","resolveMotionValue","unwrappedValue","animationTarget","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","isTreeAnimating","isAnimationBlocked","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","addEventListener","notifyListeners","args","_i","arguments","subscriptionManager","apply","hasListeners","SVGElement","tagName","layoutId","getInstance","delete","unblockTimeout_1","resizeUnblockUpdate_1","finishAnimation","registerSharedNode","_f","hasLayoutChanged","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_g","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","currentAnimation","setAnimationOrigin","animationOptions","onPlay","isLead","willUpdate","getStack","cancelSync","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","updateScroll","transformTemplate","prevTransformTemplateValue","updateSnapshot","didUpdate","updateWasBlocked","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","flushSync","update","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","scheduleCheckAfterUnmount","measured","measure","removeTransform","removeElementScroll","roundBox","alwaysMeasureLayout","prevLayout","actual","layoutCorrected","notifyLayoutMeasure","isScrollRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","measureViewportBox","boxWithoutScroll","scroll_1","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","nodeBox","setTargetDelta","targetDelta","setOptions","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","attemptToResolveRelativeTarget","pendingAnimation","getLead","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","latest","mixAxisDelta","mixBox","completeAnimation","applyTransformsToTarget","stack","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","getStaticValue","setStaticValue","getProjectionStyles","styleProp","styles","visibility","pointerEvents","emptyStyles","valuesToRender","transformOrigin","_h","correct","applyTo","corrected","num","resetTree","layout_1","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","notifyBeforeLayoutMeasure","output","mixAxis","searchNode","searchElement","element","querySelector","roundAxis","id$1","useProjectionId","LayoutGroupContext","SwitchLayoutGroupContext","useProjection","projectionId","ProjectionNodeConstructor","dragConstraints","projection","getLatestValues","VisualElementHandler","_super","__extends","getSnapshotBeforeUpdate","updateProps","componentDidUpdate","setProps","createMotionComponent","useRender","useVisualState","MotionComponent","useLayoutId","config","Provider","forwardRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","isForcedMotionValue","translateAlias","buildTransform","transformIsDefault","transformKeys","enableHardwareAcceleration","allowTransformNone","transformString","transformHasZ","numTransformKeys","trim","buildTransformOrigin","isCSSVariable$1","getValueAsType","buildHTMLStyles","state","vars","hasTransformOrigin","transformIsNone","valueType","valueAsType","createHtmlRenderState","copyRawValuesOnly","useInitialMotionValues","useStyle","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin$1","offset","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","array","camelKeys","buildSVGPath","attrs","spacing","useDashCase","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","useVisualProps","elementProps","CAMEL_CASE_PATTERN","REPLACE_TEMPLATE","camelToDash","str","replace","toLowerCase","renderHTML","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","newValues","scrapeMotionValuesFromProps","targetKey","toUpperCase","isAnimationControls","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","scrapeMotionValues","motionValues","isControllingVariants","isVariantNode","initialAnimationIsBlocked","variantToSet","list","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","htmlMotionConfig","createDomMotionConfig","baseConfig","AnimationType","addDomEvent","eventName","passive","removeEventListener","useDomEvent","useFocusGesture","onFocus","setActive","Focus","onBlur","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","hasTouches","touches","filterPrimaryPointer","eventHandler","isPrimaryPointer","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","createHoverEvent","isActive","info","Hover","useHoverGesture","onHoverStart","onHoverEnd","isNodeOrChild","parentElement","useUnmountEffect","useTapGesture","onTap","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","pipe","warned","warnOnce","condition","message","console","warn","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","observeIntersection","rootInteresectionObserver","observe","unobserve","useViewport","whileInView","onViewportEnter","onViewportLeave","viewport","hasEnteredView","isInView","shouldObserve","once","useObserver","useMissingIntersectionObserver","useIntersectionObserver","thresholdNames","all","rootMargin","amount","threshold","intersectionCallback","isIntersecting","InView","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","counter","incrementId","useId","usePresence","register","safeToRemove","useIsPresent","shallowCompare","next","prevLength","isNumericalString","isZeroValueString","testValueType","auto","parse","dimensionValueTypes","vw","vh","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","setVariants","variantLabels","reversedLabels","reverse","variant","getVariant","variantChildren","setValues","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","animateVisualElement","notifyAnimationStart","animations","animateVariant","resolvedDefinition","animateTarget","notifyAnimationComplete","transitionOverride","getChildAnimations","forwardDelay","animateChildren","first","last","animationTypeState","getState","shouldBlockAnimation","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","isAnimated","setAnimateFunction","makeAnimator","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","_loop_1","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation_1","fallbackTarget","getBaseTarget","shouldAnimate","createTypeState","subscribe","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","clamp","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","measurePageBox","rootProjectionNode","viewportBox","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","hasMutatedConstraints","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","getAxisMotionValue","measuredAxis","length_1","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","resolveRefConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","timeConstant","restDelta","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","direction","lockThreshold","abs","useDrag","groupDragControls","dragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","names","createLifecycles","managers","propSubscriptions","lifecycles","clearAllListeners","manager","updatePropListeners","on","propListener","updateMotionValuesFromProps","nextValue","prevValue","existingValue","removeValue","treeType","build","renderInstance","readValueFromInstance","removeValueFromRenderState","isMounted","valueSubscriptions","prevMotionValues","baseTarget","removeFromVariantTree","triggerBuild","notifyUpdate","bindToMotionValue","removeOnChange","latestValue","removeOnRenderRequest","initialMotionValues","newInstance","addVariantChild","closestVariantNode","getClosestVariantNode","other","getLayoutId","setVisibility","canMutate","defaultValue","newProps","startAtParent","context_1","numVariantProps","variantProps","isCSSVariable","cssVariableRegex","parseCSSVariable","match","exec","token","maxDepth","getVariableValue","getComputedStyle","getPropertyValue","resolveCSSVariables","Element","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","scrollY_1","pageYOffset","convertedTarget","scrollTo","unitConversion","parseDomVariant","getComputedStyle$1","htmlConfig","domElement","defaultType","computedStyle","compareDocumentPosition","restoreTransform","mutableState","parsed","htmlVisualElement","svgVisualElement","getAttribute","_element","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","varToken","correctBoxShadow","original","containsCSSVariables","cssVariables","shadow","template","createTransformer","xScale","yScale","averageScale","i_1","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","prevProps","layoutDependency","componentWillUnmount","promoteContext","deregister","MeasureLayout","boxShadow","layoutFeatures","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionComponent","m","useIsMounted","useForceUpdate","forcedRenderCount","setForcedRenderCount","forceRender","deferredForceRender","PresenceChild","presenceAffectsLayout","presenceChildren","newChildrenMap","childId","e_1","__values","done","isComplete","e_1_1","error","return","_","getChildKey","updateChildLookup","allChildren","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","forceRenderLayoutGroup","filteredChildren","childrenToRender","exiting","presentChildren","Fragment","presentKeys","targetKeys","numPresent","insertionIndex","onExit","removeIndex","presentChild","cloneElement","DeprecatedLayoutGroupContext","nodeGroup","dirtyAll","dirty","shouldInheritGroup","shouldInheritId","LayoutGroup","inheritId","layoutGroupContext","deprecatedLayoutGroupContext","upstreamId","memoizedContext","AnimateSharedLayout","MotionConfig","LazyMotion","isLazyBundle","setIsLoaded","loadedRenderer","loadedFeatures","ReorderContext","checkReorder","nextOffset","nextItem","nextLayout","nextItemCenter","ReorderGroup","as","onReorder","isReordering","registerItem","compareMin","updateOrder","newOrder","Group","useMotionValue","setLatest_1","isCustomValueType","getMixer","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","interpolate","mixer","useOnChange","useMultiOnChange","unsubscribe","useCombineMotionValues","combineValues","updateValue","useTransform","input","inputRangeOrTransformer","transformer","useListTransform","numValues","useDefaultMotionValue","ReorderItem","latestX","latestY","gesturePoint","onLayoutMeasure","Item","Reorder","domAnimation","domMax","useMotionTemplate","fragments","numFragments","buildValue","useSpring","activeSpringAnimation","useVelocity","newVelocity","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","setProgress","maxOffset","createScrollUpdater","getOffsets","xOffset","yOffset","xMaxOffset","yMaxOffset","getElementScrollOffsets","scrollWidth","offsetWidth","scrollHeight","offsetHeight","useElementScroll","updateScrollValues","scrollListener","resizeListener","viewportScrollValues","getViewportScrollOffsets","pageXOffset","clientWidth","innerWidth","clientHeight","innerHeight","addEventListeners","useViewportScroll","getCurrentTime","performance","now","Date","useAnimationFrame","initialTimestamp","provideTimeSinceStart","useTime","t","animationControls","hasMounted","pendingAnimations","subscribers","animations_1","useAnimation","useCycle","items","setItem","runCycle","wrap","DragControls","componentControls","nativeEvent","createDragControls","useDragControls","useInstantLayoutTransition","startTransition","cb","useInstantTransition","forceUpdate","startInstantLayoutTransition","useResetProjection","reset","createObject","stateVisualElement","_state","initialState","useAnimatedState","setAnimationState","animationDefinition","maxScale","invertScale","hasWarned","useInvertedScale","parentScaleX","parentScaleY","useDeprecatedAnimatedState","useDeprecatedInvertedScale"],"sources":["/home/siarhei/Projects/Paus.tv/Paus.tv_test.assigment_ui/video-share/node_modules/framer-motion/dist/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar sync = require('framesync');\nvar popmotion = require('popmotion');\nvar styleValueTypes = require('style-value-types');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\n/**\n * Browser-safe usage of process\n */\nvar defaultEnvironment = \"production\";\nvar env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nvar createDefinition = function (propNames) { return ({\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\n}); };\nvar featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\nfunction loadFeatures(features) {\n    for (var key in features) {\n        if (features[key] === null)\n            continue;\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nvar LazyContext = React.createContext({ strict: false });\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = React.useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (env !== \"production\" && preloadedFeatures && lazyContext.strict) {\n        heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React__namespace.createElement(Component, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\n/**\n * @public\n */\nvar MotionConfigContext = React.createContext({\n    transformPagePoint: function (p) { return p; },\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nvar MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nvar PresenceContext = React.createContext(null);\n\nvar isBrowser = typeof document !== \"undefined\";\n\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nvar prefersReducedMotion = { current: null };\nvar hasDetected = false;\nfunction initPrefersReducedMotion() {\n    hasDetected = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n        var setReducedMotionPreferences = function () {\n            return (prefersReducedMotion.current = motionMediaQuery_1.matches);\n        };\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasDetected && initPrefersReducedMotion();\n    var _a = tslib.__read(React.useState(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\nfunction useReducedMotionConfig() {\n    var reducedMotionPreference = useReducedMotion();\n    var reducedMotion = React.useContext(MotionConfigContext).reducedMotion;\n    if (reducedMotion === \"never\") {\n        return false;\n    }\n    else if (reducedMotion === \"always\") {\n        return true;\n    }\n    else {\n        return reducedMotionPreference;\n    }\n}\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    var lazyContext = React.useContext(LazyContext);\n    var parent = useVisualElementContext();\n    var presenceContext = React.useContext(PresenceContext);\n    var shouldReduceMotion = useReducedMotionConfig();\n    var visualElementRef = React.useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState: visualState,\n            parent: parent,\n            props: props,\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n            shouldReduceMotion: shouldReduceMotion,\n        });\n    }\n    var visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(function () {\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n    });\n    React.useEffect(function () {\n        var _a;\n        (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback(function (instance) {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity$1(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        var initial = props.initial, animate = props.animate;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n    var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return React.useMemo(function () { return ({ initial: initial, animate: animate }); }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    var ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nfunction addUniqueItem(arr, item) {\n    arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n    var index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem(_a, fromIndex, toIndex) {\n    var _b = tslib.__read(_a), arr = _b.slice(0);\n    var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        var _c = tslib.__read(arr.splice(fromIndex, 1), 1), item = _c[0];\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nvar SubscriptionManager = /** @class */ (function () {\n    function SubscriptionManager() {\n        this.subscriptions = [];\n    }\n    SubscriptionManager.prototype.add = function (handler) {\n        var _this = this;\n        addUniqueItem(this.subscriptions, handler);\n        return function () { return removeItem(_this.subscriptions, handler); };\n    };\n    SubscriptionManager.prototype.notify = function (a, b, c) {\n        var numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (var i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                var handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    };\n    SubscriptionManager.prototype.getSize = function () {\n        return this.subscriptions.length;\n    };\n    SubscriptionManager.prototype.clear = function () {\n        this.subscriptions.length = 0;\n    };\n    return SubscriptionManager;\n}());\n\nvar isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nvar MotionValue = /** @class */ (function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n        var _this = this;\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"6.3.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = function (v, render) {\n            if (render === void 0) { render = true; }\n            _this.prev = _this.current;\n            _this.current = v;\n            // Update timestamp\n            var _a = sync.getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\n            if (_this.lastUpdated !== timestamp) {\n                _this.timeDelta = delta;\n                _this.lastUpdated = timestamp;\n                sync__default[\"default\"].postRender(_this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (_this.prev !== _this.current) {\n                _this.updateSubscribers.notify(_this.current);\n            }\n            // Update velocity subscribers\n            if (_this.velocityUpdateSubscribers.getSize()) {\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                _this.renderSubscribers.notify(_this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = function () { return sync__default[\"default\"].postRender(_this.velocityCheck); };\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n        return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n        this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n        if (render === void 0) { render = true; }\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n        return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n        return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                popmotion.velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n        var _this = this;\n        this.stop();\n        return new Promise(function (resolve) {\n            _this.hasAnimated = true;\n            _this.stopAnimation = animation(resolve);\n        }).then(function () { return _this.clearAnimation(); });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n        return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n        this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    };\n    return MotionValue;\n}());\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nvar isMotionValue = function (value) {\n    return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar easingLookup = {\n    linear: popmotion.linear,\n    easeIn: popmotion.easeIn,\n    easeInOut: popmotion.easeInOut,\n    easeOut: popmotion.easeOut,\n    circIn: popmotion.circIn,\n    circInOut: popmotion.circInOut,\n    circOut: popmotion.circOut,\n    backIn: popmotion.backIn,\n    backInOut: popmotion.backInOut,\n    backOut: popmotion.backOut,\n    anticipate: popmotion.anticipate,\n    bounceIn: popmotion.bounceIn,\n    bounceInOut: popmotion.bounceInOut,\n    bounceOut: popmotion.bounceOut,\n};\nvar easingDefinitionToFunction = function (definition) {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n        var _a = tslib.__read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n        return popmotion.cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\".concat(definition, \"'\"));\n        return easingLookup[definition];\n    }\n    return definition;\n};\nvar isEasingArray = function (ease) {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nvar isKeyframesTarget = function (v) {\n    return Array.isArray(v);\n};\n\nvar underDampedSpring = function () { return ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n}); };\nvar criticallyDampedSpring = function (to) { return ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n}); };\nvar linearTween = function () { return ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n}); };\nvar keyframes = function (values) { return ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values,\n}); };\nvar defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nvar getDefaultTransition = function (valueKey, to) {\n    var transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return tslib.__assign({ to: to }, transitionFactory(to));\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round });\n\nvar numberValueTypes = {\n    // Border props\n    borderWidth: styleValueTypes.px,\n    borderTopWidth: styleValueTypes.px,\n    borderRightWidth: styleValueTypes.px,\n    borderBottomWidth: styleValueTypes.px,\n    borderLeftWidth: styleValueTypes.px,\n    borderRadius: styleValueTypes.px,\n    radius: styleValueTypes.px,\n    borderTopLeftRadius: styleValueTypes.px,\n    borderTopRightRadius: styleValueTypes.px,\n    borderBottomRightRadius: styleValueTypes.px,\n    borderBottomLeftRadius: styleValueTypes.px,\n    // Positioning props\n    width: styleValueTypes.px,\n    maxWidth: styleValueTypes.px,\n    height: styleValueTypes.px,\n    maxHeight: styleValueTypes.px,\n    size: styleValueTypes.px,\n    top: styleValueTypes.px,\n    right: styleValueTypes.px,\n    bottom: styleValueTypes.px,\n    left: styleValueTypes.px,\n    // Spacing props\n    padding: styleValueTypes.px,\n    paddingTop: styleValueTypes.px,\n    paddingRight: styleValueTypes.px,\n    paddingBottom: styleValueTypes.px,\n    paddingLeft: styleValueTypes.px,\n    margin: styleValueTypes.px,\n    marginTop: styleValueTypes.px,\n    marginRight: styleValueTypes.px,\n    marginBottom: styleValueTypes.px,\n    marginLeft: styleValueTypes.px,\n    // Transform props\n    rotate: styleValueTypes.degrees,\n    rotateX: styleValueTypes.degrees,\n    rotateY: styleValueTypes.degrees,\n    rotateZ: styleValueTypes.degrees,\n    scale: styleValueTypes.scale,\n    scaleX: styleValueTypes.scale,\n    scaleY: styleValueTypes.scale,\n    scaleZ: styleValueTypes.scale,\n    skew: styleValueTypes.degrees,\n    skewX: styleValueTypes.degrees,\n    skewY: styleValueTypes.degrees,\n    distance: styleValueTypes.px,\n    translateX: styleValueTypes.px,\n    translateY: styleValueTypes.px,\n    translateZ: styleValueTypes.px,\n    x: styleValueTypes.px,\n    y: styleValueTypes.px,\n    z: styleValueTypes.px,\n    perspective: styleValueTypes.px,\n    transformPerspective: styleValueTypes.px,\n    opacity: styleValueTypes.alpha,\n    originX: styleValueTypes.progressPercentage,\n    originY: styleValueTypes.progressPercentage,\n    originZ: styleValueTypes.px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: styleValueTypes.alpha,\n    strokeOpacity: styleValueTypes.alpha,\n    numOctaves: int,\n};\n\n/**\n * A map of default value types for common values\n */\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), { \n    // Color props\n    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, \n    // Border props\n    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    var defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== styleValueTypes.filter)\n        defaultValueType = styleValueTypes.complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nvar instantAnimationState = {\n    current: false,\n};\n\nvar isCustomValue = function (v) {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function (v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    var options = tslib.__assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    var valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = tslib.__spreadArray([], tslib.__read(options.to), false);\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key);\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    var isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    var isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \".concat(key, \" from \\\"\").concat(origin, \"\\\" to \\\"\").concat(target, \"\\\". \").concat(origin, \" is not an animatable value - to enable this animation set \").concat(origin, \" to a value animatable to \").concat(target, \" via the `style` property.\"));\n    function start() {\n        var options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete: onComplete,\n            onUpdate: function (v) { return value.set(v); },\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition))\n            : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: function () {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a, _b;\n        var finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n        (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n        return { stop: function () { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition) {\n    if (transition === void 0) { transition = {}; }\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start(function (onComplete) {\n        var delayTimer;\n        var controls;\n        var animation = getAnimation(key, value, target, transition, onComplete);\n        var delay = getDelayFromTransition(transition, key);\n        var start = function () { return (controls = animation()); };\n        if (delay) {\n            delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return function () {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n        isAnimating: function () { return value.isAnimating(); },\n    };\n}\n\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nvar asNumber = function (value) {\n    return typeof value === \"string\" ? parseFloat(value) : value;\n};\nvar isPx = function (value) {\n    return typeof value === \"number\" || styleValueTypes.px.test(value);\n};\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = popmotion.mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\".concat(borders[i], \"Radius\");\n        var followRadius = getRadius(follow, borderLabel);\n        var leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        var canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(popmotion.progress(min, max, p));\n    };\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nfunction isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale(_a) {\n    var scale = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {\n    var _a, _b;\n    if (isSharedTransition === void 0) { isSharedTransition = false; }\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys$1);\n    transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return popmotion.distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    if (originAxis === void 0) { originAxis = axis; }\n    if (sourceAxis === void 0) { sourceAxis = axis; }\n    if (styleValueTypes.percent.test(translate)) {\n        translate = parseFloat(translate);\n        var relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    var originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nvar createAxisDelta = function () { return ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n}); };\nvar createDelta = function () { return ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n}); };\nvar createAxis = function () { return ({ min: 0, max: 0 }); };\nvar createBox = function () { return ({\n    x: createAxis(),\n    y: createAxis(),\n}); };\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\n\nvar NodeStack = /** @class */ (function () {\n    function NodeStack() {\n        this.members = [];\n    }\n    NodeStack.prototype.add = function (node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    };\n    NodeStack.prototype.remove = function (node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            var prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    };\n    NodeStack.prototype.relegate = function (node) {\n        var indexOfNode = this.members.findIndex(function (member) { return node === member; });\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        var prevLead;\n        for (var i = indexOfNode; i >= 0; i--) {\n            var member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    NodeStack.prototype.promote = function (node, preserveFollowOpacity) {\n        var _a;\n        var prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            var crossfade = node.options.crossfade;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    };\n    NodeStack.prototype.exitAnimationComplete = function () {\n        this.members.forEach(function (node) {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    };\n    NodeStack.prototype.scheduleRender = function () {\n        this.members.forEach(function (node) {\n            node.instance && node.scheduleRender(false);\n        });\n    };\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    NodeStack.prototype.removeLeadSnapshot = function () {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    };\n    return NodeStack;\n}());\n\nvar scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nvar identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = delta.x.translate / treeScale.x;\n    var yTranslate = delta.y.translate / treeScale.y;\n    var transform = \"translate3d(\".concat(xTranslate, \"px, \").concat(yTranslate, \"px, 0) \");\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    transform += \"scale(\".concat(1 / treeScale.x, \", \").concat(1 / treeScale.y, \") \");\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\".concat(rotate, \"deg) \");\n        if (rotateX)\n            transform += \"rotateX(\".concat(rotateX, \"deg) \");\n        if (rotateY)\n            transform += \"rotateY(\".concat(rotateY, \"deg) \");\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    var elementScaleX = delta.x.scale * treeScale.x;\n    var elementScaleY = delta.y.scale * treeScale.y;\n    transform += \"scale(\".concat(elementScaleX, \", \").concat(elementScaleY, \")\");\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nfunction eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n    return transformAxes.forEach(function (axesKey) {\n        return transformProps.push(operationKey + axesKey);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nvar compareByDepth = function (a, b) {\n    return a.depth - b.depth;\n};\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nvar animationTarget = 1000;\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nvar globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\nfunction createProjectionNode(_a) {\n    var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, checkIsScrollRoot = _a.checkIsScrollRoot, resetTransform = _a.resetTransform;\n    return /** @class */ (function () {\n        function ProjectionNode(id, latestValues, parent) {\n            var _this = this;\n            if (latestValues === void 0) { latestValues = {}; }\n            if (parent === void 0) { parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent(); }\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = function () {\n                if (_this.isUpdating) {\n                    _this.isUpdating = false;\n                    _this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = function () {\n                _this.nodes.forEach(resolveTargetDelta);\n                _this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path), false), [parent], false) : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (var i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        ProjectionNode.prototype.addEventListener = function (name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        };\n        ProjectionNode.prototype.notifyListeners = function (name) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, tslib.__spreadArray([], tslib.__read(args), false));\n        };\n        ProjectionNode.prototype.hasListeners = function (name) {\n            return this.eventHandlers.has(name);\n        };\n        ProjectionNode.prototype.registerPotentialNode = function (id, node) {\n            this.potentialNodes.set(id, node);\n        };\n        /**\n         * Lifecycles\n         */\n        ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {\n            var _this = this;\n            var _a;\n            if (isLayoutDirty === void 0) { isLayoutDirty = false; }\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement = _b.visualElement;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                var unblockTimeout_1;\n                var resizeUnblockUpdate_1 = function () {\n                    return (_this.root.updateBlockedByResize = false);\n                };\n                attachResizeListener(instance, function () {\n                    _this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout_1);\n                    unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        _this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", function (_a) {\n                    var _b, _c, _d, _e, _f;\n                    var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged, hasRelativeTargetChanged = _a.hasRelativeTargetChanged, newLayout = _a.layout;\n                    if (_this.isTreeAnimationBlocked()) {\n                        _this.target = undefined;\n                        _this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;\n                    var _g = visualElement.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    var targetChanged = !_this.targetLayout ||\n                        !boxEquals(_this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !_this.currentAnimation))) {\n                        if (_this.resumeFrom) {\n                            _this.resumingFrom = _this.resumeFrom;\n                            _this.resumingFrom.resumingFrom = undefined;\n                        }\n                        _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        var animationOptions = tslib.__assign(tslib.__assign({}, getValueTransition(layoutTransition, \"layout\")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        _this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            _this.animationProgress === 0) {\n                            _this.finishAnimation();\n                        }\n                        _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));\n                    }\n                    _this.targetLayout = newLayout;\n                });\n            }\n        };\n        ProjectionNode.prototype.unmount = function () {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            sync.cancelSync.preRender(this.updateProjection);\n        };\n        // only on the root\n        ProjectionNode.prototype.blockUpdate = function () {\n            this.updateManuallyBlocked = true;\n        };\n        ProjectionNode.prototype.unblockUpdate = function () {\n            this.updateManuallyBlocked = false;\n        };\n        ProjectionNode.prototype.isUpdateBlocked = function () {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        };\n        ProjectionNode.prototype.isTreeAnimationBlocked = function () {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        };\n        // Note: currently only running on root node\n        ProjectionNode.prototype.startUpdate = function () {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        };\n        ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {\n            var _a, _b, _c;\n            if (shouldNotifyListeners === void 0) { shouldNotifyListeners = true; }\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;\n            if (layoutId === undefined && !layout)\n                return;\n            var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        };\n        // Note: Currently only running on root node\n        ProjectionNode.prototype.didUpdate = function () {\n            var updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            sync.flushSync.update();\n            sync.flushSync.preRender();\n            sync.flushSync.render();\n        };\n        ProjectionNode.prototype.clearAllSnapshots = function () {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        };\n        ProjectionNode.prototype.scheduleUpdateProjection = function () {\n            sync__default[\"default\"].preRender(this.updateProjection, false, true);\n        };\n        ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {\n            var _this = this;\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync__default[\"default\"].postRender(function () {\n                if (_this.isLayoutDirty) {\n                    _this.root.didUpdate();\n                }\n                else {\n                    _this.root.checkUpdateFailed();\n                }\n            });\n        };\n        /**\n         * Update measurements\n         */\n        ProjectionNode.prototype.updateSnapshot = function () {\n            if (this.snapshot || !this.instance)\n                return;\n            var measured = this.measure();\n            var layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured: measured,\n                layout: layout,\n                latestValues: {},\n            };\n        };\n        ProjectionNode.prototype.updateLayout = function () {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (var i = 0; i < this.path.length; i++) {\n                    var node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            var measured = this.measure();\n            roundBox(measured);\n            var prevLayout = this.layout;\n            this.layout = {\n                measured: measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        };\n        ProjectionNode.prototype.updateScroll = function () {\n            if (this.options.layoutScroll && this.instance) {\n                this.isScrollRoot = checkIsScrollRoot(this.instance);\n                this.scroll = measureScroll(this.instance);\n            }\n        };\n        ProjectionNode.prototype.resetTransform = function () {\n            var _a;\n            if (!resetTransform)\n                return;\n            var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        };\n        ProjectionNode.prototype.measure = function () {\n            var visualElement = this.options.visualElement;\n            if (!visualElement)\n                return createBox();\n            var box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            var scroll = this.root.scroll;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        };\n        ProjectionNode.prototype.removeElementScroll = function (box) {\n            var boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                var scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;\n                if (node !== this.root && scroll_1 && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (isScrollRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        var rootScroll = this.root.scroll;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll_1.x);\n                    translateAxis(boxWithoutScroll.y, scroll_1.y);\n                }\n            }\n            return boxWithoutScroll;\n        };\n        ProjectionNode.prototype.applyTransform = function (box, transformOnly) {\n            if (transformOnly === void 0) { transformOnly = false; }\n            var withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        };\n        ProjectionNode.prototype.removeTransform = function (box) {\n            var _a;\n            var boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                var sourceBox = createBox();\n                var nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        };\n        /**\n         *\n         */\n        ProjectionNode.prototype.setTargetDelta = function (delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        };\n        ProjectionNode.prototype.setOptions = function (options) {\n            var _a;\n            this.options = tslib.__assign(tslib.__assign(tslib.__assign({}, this.options), options), { crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true });\n        };\n        ProjectionNode.prototype.clearMeasurements = function () {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        };\n        /**\n         * Frame calculations\n         */\n        ProjectionNode.prototype.resolveTargetDelta = function () {\n            var _a;\n            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        };\n        ProjectionNode.prototype.getClosestProjectingParent = function () {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        };\n        ProjectionNode.prototype.calcProjection = function () {\n            var _a;\n            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            var lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            var target = lead.target;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            var prevTreeScaleX = this.treeScale.x;\n            var prevTreeScaleY = this.treeScale.y;\n            var prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        };\n        ProjectionNode.prototype.hide = function () {\n            this.isVisible = false;\n            // TODO: Schedule render\n        };\n        ProjectionNode.prototype.show = function () {\n            this.isVisible = true;\n            // TODO: Schedule render\n        };\n        ProjectionNode.prototype.scheduleRender = function (notifyAll) {\n            var _a, _b, _c;\n            if (notifyAll === void 0) { notifyAll = true; }\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        };\n        ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {\n            var _this = this;\n            var _a;\n            if (hasOnlyRelativeTargetChanged === void 0) { hasOnlyRelativeTargetChanged = false; }\n            var snapshot = this.snapshot;\n            var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            var mixedValues = tslib.__assign({}, this.latestValues);\n            var targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            var relativeLayout = createBox();\n            var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = function (latest) {\n                var _a;\n                var progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                _this.setTargetDelta(targetDelta);\n                if (_this.relativeTarget &&\n                    _this.relativeTargetOrigin &&\n                    _this.layout &&\n                    ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);\n                    mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    _this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                _this.root.scheduleUpdateProjection();\n                _this.scheduleRender();\n                _this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        };\n        ProjectionNode.prototype.startAnimation = function (options) {\n            var _this = this;\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                sync.cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync__default[\"default\"].update(function () {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                _this.currentAnimation = animate(0, animationTarget, tslib.__assign(tslib.__assign({}, options), { onUpdate: function (latest) {\n                        var _a;\n                        _this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    }, onComplete: function () {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        _this.completeAnimation();\n                    } }));\n                if (_this.resumingFrom) {\n                    _this.resumingFrom.currentAnimation = _this.currentAnimation;\n                }\n                _this.pendingAnimation = undefined;\n            });\n        };\n        ProjectionNode.prototype.completeAnimation = function () {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        };\n        ProjectionNode.prototype.finishAnimation = function () {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        };\n        ProjectionNode.prototype.applyTransformsToTarget = function () {\n            var _a = this.getLead(), targetWithTransforms = _a.targetWithTransforms, target = _a.target, layout = _a.layout, latestValues = _a.latestValues;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        };\n        ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            var stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        };\n        ProjectionNode.prototype.isLead = function () {\n            var stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        };\n        ProjectionNode.prototype.getLead = function () {\n            var _a;\n            var layoutId = this.options.layoutId;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        };\n        ProjectionNode.prototype.getPrevLead = function () {\n            var _a;\n            var layoutId = this.options.layoutId;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        };\n        ProjectionNode.prototype.getStack = function () {\n            var layoutId = this.options.layoutId;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        };\n        ProjectionNode.prototype.promote = function (_a) {\n            var _b = _a === void 0 ? {} : _a, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;\n            var stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition: transition });\n        };\n        ProjectionNode.prototype.relegate = function () {\n            var stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        };\n        ProjectionNode.prototype.resetRotation = function () {\n            var visualElement = this.options.visualElement;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            var hasRotate = false;\n            // Keep a record of all the values we've reset\n            var resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (var i = 0; i < transformAxes.length; i++) {\n                var axis = transformAxes[i];\n                var key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (var key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        };\n        ProjectionNode.prototype.getProjectionStyles = function (styleProp) {\n            var _a, _b, _c, _d, _e, _f;\n            if (styleProp === void 0) { styleProp = {}; }\n            // TODO: Return lifecycle-persistent object\n            var styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            var lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                var emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            var valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            var _g = this.projectionDelta, x = _g.x, y = _g.y;\n            styles.transformOrigin = \"\".concat(x.origin * 100, \"% \").concat(y.origin * 100, \"% 0\");\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\"\n                        : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (var key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;\n                var corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        };\n        ProjectionNode.prototype.clearSnapshot = function () {\n            this.resumeFrom = this.snapshot = undefined;\n        };\n        // Only run on root\n        ProjectionNode.prototype.resetTree = function () {\n            this.root.nodes.forEach(function (node) { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        };\n        return ProjectionNode;\n    }());\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c, _d;\n    var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        var _e = node.layout, layout_1 = _e.actual, measuredLayout = _e.measured;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (node.options.animationType === \"size\") {\n            eachAxis(function (axis) {\n                var axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                var length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout_1[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (node.options.animationType === \"position\") {\n            eachAxis(function (axis) {\n                var axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                var length = calcLength(layout_1[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        var layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout_1, snapshot.layout);\n        var visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout_1, snapshot.layout);\n        }\n        var hasLayoutChanged = !isDeltaZero(layoutDelta);\n        var hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;\n                if (parentSnapshot && parentLayout) {\n                    var relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    var relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout: layout_1,\n            snapshot: snapshot,\n            delta: visualDelta,\n            layoutDelta: layoutDelta,\n            hasLayoutChanged: hasLayoutChanged,\n            hasRelativeTargetChanged: hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    var visualElement = node.options.visualElement;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = popmotion.mix(delta.translate, 0, p);\n    output.scale = popmotion.mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = popmotion.mix(from.min, to.min, p);\n    output.max = popmotion.mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    var searchNode = node.root;\n    for (var i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    var element = searchElement.querySelector(\"[data-projection-id=\\\"\".concat(id, \"\\\"]\"));\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\n\nvar id$1 = 1;\nfunction useProjectionId() {\n    return useConstant(function () {\n        if (globalProjectionState.hasEverUpdated) {\n            return id$1++;\n        }\n    });\n}\n\nvar LayoutGroupContext = React.createContext({});\n\n/**\n * Internal, exported only for usage in Framer\n */\nvar SwitchLayoutGroupContext = React.createContext({});\n\nfunction useProjection(projectionId, _a, visualElement, ProjectionNodeConstructor) {\n    var _b;\n    var layoutId = _a.layoutId, layout = _a.layout, drag = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;\n    var initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);\n    if (!ProjectionNodeConstructor ||\n        !visualElement ||\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n        return;\n    }\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_b = visualElement.parent) === null || _b === void 0 ? void 0 : _b.projection);\n    visualElement.projection.setOptions({\n        layoutId: layoutId,\n        layout: layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement: visualElement,\n        scheduleRender: function () { return visualElement.scheduleRender(); },\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig: initialPromotionConfig,\n        layoutScroll: layoutScroll,\n    });\n}\n\nvar VisualElementHandler = /** @class */ (function (_super) {\n    tslib.__extends(VisualElementHandler, _super);\n    function VisualElementHandler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    VisualElementHandler.prototype.getSnapshotBeforeUpdate = function () {\n        this.updateProps();\n        return null;\n    };\n    VisualElementHandler.prototype.componentDidUpdate = function () { };\n    VisualElementHandler.prototype.updateProps = function () {\n        var _a = this.props, visualElement = _a.visualElement, props = _a.props;\n        if (visualElement)\n            visualElement.setProps(props);\n    };\n    VisualElementHandler.prototype.render = function () {\n        return this.props.children;\n    };\n    return VisualElementHandler;\n}(React__default[\"default\"].Component));\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(_a) {\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        var layoutId = useLayoutId(props);\n        props = tslib.__assign(tslib.__assign({}, props), { layoutId: layoutId });\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        var config = React.useContext(MotionConfigContext);\n        var features = null;\n        var context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        var projectionId = config.isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        var visualState = useVisualState(props, config.isStatic);\n        if (!config.isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, tslib.__assign(tslib.__assign({}, config), props), createVisualElement);\n            useProjection(projectionId, props, context.visualElement, projectionNodeConstructor ||\n                featureDefinitions.projectionNodeConstructor);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(VisualElementHandler, { visualElement: context.visualElement, props: tslib.__assign(tslib.__assign({}, config), props) },\n            features,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))));\n    }\n    return React.forwardRef(MotionComponent);\n}\nfunction useLayoutId(_a) {\n    var _b;\n    var layoutId = _a.layoutId;\n    var layoutGroupId = (_b = React.useContext(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig) {\n        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    var componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: function (_target, key) {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nvar lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nfunction isForcedMotionValue(key, _a) {\n    var layout = _a.layout, layoutId = _a.layoutId;\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nvar translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n    var transform = _a.transform, transformKeys = _a.transformKeys;\n    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\n    // The transform string we're going to build into.\n    var transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    var transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += \"\".concat(translateAlias[key] || key, \"(\").concat(transform[key], \") \");\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    else {\n        transformString = transformString.trim();\n    }\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin(_a) {\n    var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\n    return \"\".concat(originX, \" \").concat(originY, \" \").concat(originZ);\n}\n\n/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable$1(key) {\n    return key.startsWith(\"--\");\n}\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable$1(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (transformTemplate) {\n        style.transform = transformTemplate({}, \"\");\n    }\n    else if (!latestValues.transform && style.transform) {\n        style.transform = \"none\";\n    }\n    if (hasTransformOrigin) {\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n}\n\nvar createHtmlRenderState = function () { return ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n}); };\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (var key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n    var transformTemplate = _a.transformTemplate;\n    return React.useMemo(function () {\n        var state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        var vars = state.vars, style = state.style;\n        return tslib.__assign(tslib.__assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    var styleProp = props.style || {};\n    var style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    var htmlProps = {};\n    var style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag) && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : \"pan-\".concat(props.drag === \"x\" ? \"y\" : \"x\");\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nvar validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n    \"layoutScroll\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = function (key) {\n        return key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n    };\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    var filteredProps = {};\n    for (var key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n    var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n    return \"\".concat(pxOriginX, \" \").concat(pxOriginY);\n}\n\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = styleValueTypes.px.transform(-offset);\n    // Build the dash array\n    var pathLength = styleValueTypes.px.transform(length);\n    var pathSpacing = styleValueTypes.px.transform(spacing);\n    attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nvar createSvgRenderState = function () { return (tslib.__assign(tslib.__assign({}, createHtmlRenderState()), { attrs: {} })); };\n\nfunction useSVGProps(props, visualState) {\n    var visualProps = React.useMemo(function () {\n        var state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return tslib.__assign(tslib.__assign({}, state.attrs), { style: tslib.__assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        var rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps) {\n    if (forwardMotionProps === void 0) { forwardMotionProps = false; }\n    var useRender = function (Component, props, projectionId, ref, _a, isStatic) {\n        var latestValues = _a.latestValues;\n        var useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        var visualProps = useVisualProps(props, latestValues, isStatic);\n        var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        var elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), { ref: ref });\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return React.createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nfunction renderHTML(element, _a, styleProp, projection) {\n    var style = _a.style, vars = _a.vars;\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (var key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nvar camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n    var style = props.style;\n    var newValues = {};\n    for (var key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n    var newValues = scrapeMotionValuesFromProps$1(props);\n    for (var key in props) {\n        if (isMotionValue(props[key])) {\n            var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) {\n    return function (props, isStatic) {\n        var context = React.useContext(MotionContext);\n        var presenceContext = React.useContext(PresenceContext);\n        return isStatic\n            ? makeState(config, props, context, presenceContext)\n            : useConstant(function () {\n                return makeState(config, props, context, presenceContext);\n            });\n    };\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n    var variantToSet = initialAnimationIsBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target) {\n                var valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    var index = initialAnimationIsBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nvar svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: function (props, instance, _a) {\n            var renderState = _a.renderState, latestValues = _a.latestValues;\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nvar htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nfunction createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;\n    var baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return tslib.__assign(tslib.__assign({}, baseConfig), { preloadedFeatures: preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement: createVisualElement, projectionNodeConstructor: projectionNodeConstructor, Component: Component });\n}\n\nexports.AnimationType = void 0;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n    if (options === void 0) { options = { passive: true }; }\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Hover, isActive);\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(function () { return function () { return callback(); }; }, []);\n}\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = React.useRef(false);\n    var cancelPointerEndListeners = React.useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    var eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, true);\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nvar warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nvar observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nvar observers = new WeakMap();\nvar fireObserverCallback = function (entry) {\n    var _a;\n    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\nvar fireAllObserverCallbacks = function (entries) {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver(_a) {\n    var root = _a.root, options = tslib.__rest(_a, [\"root\"]);\n    var lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    var rootObservers = observers.get(lookupRoot);\n    var key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, tslib.__assign({ root: root }, options));\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    var rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return function () {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nfunction useViewport(_a) {\n    var visualElement = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;\n    var state = React.useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    var useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nvar thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? \"some\" : _b, once = _a.once;\n    React.useEffect(function () {\n        if (!shouldObserve)\n            return;\n        var options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin: rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        var intersectionCallback = function (entry) {\n            var _a;\n            var isIntersecting = entry.isIntersecting;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, isIntersecting);\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            var props = visualElement.getProps();\n            var callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback === null || callback === void 0 ? void 0 : callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var _b = _a.fallback, fallback = _b === void 0 ? true : _b;\n    React.useEffect(function () {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(function () {\n            var _a;\n            state.hasEnteredView = true;\n            var onViewportEnter = visualElement.getProps().onViewportEnter;\n            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, true);\n        });\n    }, [shouldObserve]);\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nvar gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useId = function () { return useConstant(incrementId); };\n/**\n * Ideally we'd use the following code to support React 18 optionally.\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\n * Need to come up with a different way of figuring this out.\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    var id = useId();\n    React.useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nvar isZeroValueString = function (v) { return /^0[^.\\s]+$/.test(v); };\n\n/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\n/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes), false), [styleValueTypes.color, styleValueTypes.complex], false);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels), false).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart(definition);\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = tslib.__read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var valueTransition = tslib.__assign({ delay: delay }, transition);\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && isTransformProp(key)) {\n            valueTransition = tslib.__assign(tslib.__assign({}, valueTransition), { type: false, delay: 0 });\n        }\n        var animation = startAnimation(key, value, valueTarget, valueTransition);\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nvar variantPriorityOrder = [\n    exports.AnimationType.Animate,\n    exports.AnimationType.InView,\n    exports.AnimationType.Focus,\n    exports.AnimationType.Hover,\n    exports.AnimationType.Tap,\n    exports.AnimationType.Drag,\n    exports.AnimationType.Exit,\n];\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder), false).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = tslib.__assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            var shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: tslib.__assign({ type: type }, options),\n                }); })), false));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        var animations = animateChanges(options, type);\n        for (var key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[exports.AnimationType.Animate] = createTypeState(true),\n        _a[exports.AnimationType.InView] = createTypeState(),\n        _a[exports.AnimationType.Hover] = createTypeState(),\n        _a[exports.AnimationType.Tap] = createTypeState(),\n        _a[exports.AnimationType.Drag] = createTypeState(),\n        _a[exports.AnimationType.Focus] = createTypeState(),\n        _a[exports.AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n        var presenceContext = React.useContext(PresenceContext);\n        React.useEffect(function () {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = popmotion.distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = sync.getFrameData().timestamp;\n            _this.history.push(tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync__default[\"default\"].update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = sync.getFrameData().timestamp;\n        this.history = [tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        sync.cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = tslib.__read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return { min: min, max: max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n    }\n    return popmotion.clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === void 0) { dragElastic = defaultElastic; }\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    var topLeft = transformPoint({ x: point.left, y: point.top });\n    var bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    var viewportBox = measureViewportBox(element, transformPagePoint);\n    var scroll = rootProjectionNode.scroll;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nvar VisualElementDragControls = /** @class */ (function () {\n    function VisualElementDragControls(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        var onSessionStart = function (event) {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            _this.stopAnimation();\n            if (snapToCursor) {\n                _this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        var onStart = function (event, info) {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            var _b = _this.getProps(), drag = _b.drag, dragPropagation = _b.dragPropagation, onDragStart = _b.onDragStart;\n            if (drag && !dragPropagation) {\n                if (_this.openGlobalLock)\n                    _this.openGlobalLock();\n                _this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!_this.openGlobalLock)\n                    return;\n            }\n            _this.isDragging = true;\n            _this.currentDirection = null;\n            _this.resolveConstraints();\n            if (_this.visualElement.projection) {\n                _this.visualElement.projection.isAnimationBlocked = true;\n                _this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis(function (axis) {\n                var _a, _b;\n                var current = _this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (styleValueTypes.percent.test(current)) {\n                    var measuredAxis = (_b = (_a = _this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n                    if (measuredAxis) {\n                        var length_1 = calcLength(measuredAxis);\n                        current = length_1 * (parseFloat(current) / 100);\n                    }\n                }\n                _this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = _this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Drag, true);\n        };\n        var onMove = function (event, info) {\n            // latestPointerEvent = event\n            var _a = _this.getProps(), dragPropagation = _a.dragPropagation, dragDirectionLock = _a.dragDirectionLock, onDirectionLock = _a.onDirectionLock, onDrag = _a.onDrag;\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !_this.openGlobalLock)\n                return;\n            var offset = info.offset;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && _this.currentDirection === null) {\n                _this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (_this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            _this.updateAxis(\"x\", info.point, offset);\n            _this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            _this.visualElement.syncRender();\n            /**\n             * This must fire after the syncRender call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        var onSessionEnd = function (event, info) {\n            return _this.stop(event, info);\n        };\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart: onSessionStart,\n            onStart: onStart,\n            onMove: onMove,\n            onSessionEnd: onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    };\n    VisualElementDragControls.prototype.stop = function (event, info) {\n        var isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        var velocity = info.velocity;\n        this.startAnimation(velocity);\n        var onDragEnd = this.getProps().onDragEnd;\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    };\n    VisualElementDragControls.prototype.cancel = function () {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        var dragPropagation = this.getProps().dragPropagation;\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(exports.AnimationType.Drag, false);\n    };\n    VisualElementDragControls.prototype.updateAxis = function (axis, _point, offset) {\n        var drag = this.getProps().drag;\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        var axisValue = this.getAxisMotionValue(axis);\n        var next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    };\n    VisualElementDragControls.prototype.resolveConstraints = function () {\n        var _this = this;\n        var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n        var layout = (this.visualElement.projection || {}).layout;\n        var prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis(function (axis) {\n                if (_this.getAxisMotionValue(axis)) {\n                    _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);\n                }\n            });\n        }\n    };\n    VisualElementDragControls.prototype.resolveRefConstraints = function () {\n        var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        var constraintsElement = constraints.current;\n        heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        var projection = this.visualElement.projection;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    };\n    VisualElementDragControls.prototype.startAnimation = function (velocity) {\n        var _this = this;\n        var _a = this.getProps(), drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;\n        var constraints = this.constraints || {};\n        var momentumAnimations = eachAxis(function (axis) {\n            var _a;\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\n                return;\n            }\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            var bounceStiffness = dragElastic ? 200 : 1000000;\n            var bounceDamping = dragElastic ? 40 : 10000000;\n            var inertia = tslib.__assign(tslib.__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness, bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return _this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    };\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n        var axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    };\n    VisualElementDragControls.prototype.stopAnimation = function () {\n        var _this = this;\n        eachAxis(function (axis) { return _this.getAxisMotionValue(axis).stop(); });\n    };\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n        var _a, _b;\n        var dragKey = \"_drag\" + axis.toUpperCase();\n        var externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    };\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\n        var _this = this;\n        eachAxis(function (axis) {\n            var drag = _this.getProps().drag;\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, _this.currentDirection))\n                return;\n            var projection = _this.visualElement.projection;\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                var _a = projection.layout.actual[axis], min = _a.min, max = _a.max;\n                axisValue.set(point[axis] - popmotion.mix(min, max, 0.5));\n            }\n        });\n    };\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    VisualElementDragControls.prototype.scalePositionWithinConstraints = function () {\n        var _this = this;\n        var _a;\n        var _b = this.getProps(), drag = _b.drag, dragConstraints = _b.dragConstraints;\n        var projection = this.visualElement.projection;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        var boxProgress = { x: 0, y: 0 };\n        eachAxis(function (axis) {\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (axisValue) {\n                var latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, _this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        var transformTemplate = this.visualElement.getProps().transformTemplate;\n        this.visualElement.getInstance().style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis(function (axis) {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            var axisValue = _this.getAxisMotionValue(axis);\n            var _a = _this.constraints[axis], min = _a.min, max = _a.max;\n            axisValue.set(popmotion.mix(min, max, boxProgress[axis]));\n        });\n    };\n    VisualElementDragControls.prototype.addListeners = function () {\n        var _this = this;\n        var _a;\n        elementDragControls.set(this.visualElement, this);\n        var element = this.visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n            var _a = _this.getProps(), drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n            drag && dragListener && _this.start(event);\n        });\n        var measureDragConstraints = function () {\n            var dragConstraints = _this.getProps().dragConstraints;\n            if (isRefObject(dragConstraints)) {\n                _this.constraints = _this.resolveRefConstraints();\n            }\n        };\n        var projection = this.visualElement.projection;\n        var stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\n            return _this.scalePositionWithinConstraints();\n        });\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        projection.addEventListener(\"didUpdate\", (function (_a) {\n            var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged;\n            if (_this.isDragging && hasLayoutChanged) {\n                eachAxis(function (axis) {\n                    var motionValue = _this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    _this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                _this.visualElement.syncRender();\n            }\n        }));\n        return function () {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n        };\n    };\n    VisualElementDragControls.prototype.getProps = function () {\n        var props = this.visualElement.getProps();\n        var _a = props.drag, drag = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e = props.dragElastic, dragElastic = _e === void 0 ? defaultElastic : _e, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;\n        return tslib.__assign(tslib.__assign({}, props), { drag: drag, dragDirectionLock: dragDirectionLock, dragPropagation: dragPropagation, dragConstraints: dragConstraints, dragElastic: dragElastic, dragMomentum: dragMomentum });\n    };\n    return VisualElementDragControls;\n}());\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold) {\n    if (lockThreshold === void 0) { lockThreshold = 10; }\n    var direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var dragControls = useConstant(function () { return new VisualElementDragControls(visualElement); });\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    React.useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    React.useEffect(function () { return dragControls.addListeners(); }, [dragControls]);\n}\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = React.useRef(null);\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    React.useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            names.forEach(function (name) {\n                var _a;\n                var on = \"on\" + name;\n                var propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args), false));\n        };\n    });\n    return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"6.3.16\", \"Attempting to mix Framer Motion versions \".concat(nextValue.version, \" with 6.3.16 may not work as expected.\"));\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState, shouldReduceMotion = _a.shouldReduceMotion;\n        if (options === void 0) { options = {}; }\n        var isMounted = false;\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender\n         */\n        var lifecycles = createLifecycles();\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = tslib.__assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         * Render the element with the latest styles outside of the React\n         * render lifecycle\n         */\n        function render() {\n            if (!instance || !isMounted)\n                return;\n            triggerBuild();\n            renderInstance(instance, renderState, props.style, element.projection);\n        }\n        function triggerBuild() {\n            build(element, renderState, latestValues, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync__default[\"default\"].update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = tslib.__assign(tslib.__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             *\n             */\n            presenceId: presenceId, shouldReduceMotion: shouldReduceMotion, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by the projection tree, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                isMounted = true;\n                instance = element.current = newInstance;\n                if (element.projection) {\n                    element.projection.mount(newInstance);\n                }\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                values.forEach(function (value, key) { return bindToMotionValue(key, value); });\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n                element.setProps(props);\n            }, \n            /**\n             *\n             */\n            unmount: function () {\n                var _a;\n                (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n                sync.cancelSync.update(update);\n                sync.cancelSync.render(render);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                lifecycles.clearAllListeners();\n                instance = undefined;\n                isMounted = false;\n            }, \n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () {\n                        return closestVariantNode.variantChildren.delete(child);\n                    };\n                }\n            }, sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            }, \n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            }, \n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function () {\n                return measureViewportBox(instance, props);\n            }, \n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            }, \n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) {\n                var _a;\n                return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n            }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            }, \n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            }, \n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync__default[\"default\"].render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                if (newProps.transformTemplate || props.transformTemplate) {\n                    element.scheduleRender();\n                }\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, getTransformPagePoint: function () {\n                return props.transformPagePoint;\n            }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            } });\n        return element;\n    };\n};\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder), false);\nvar numVariantProps = variantProps.length;\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = tslib.__read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    heyListen.invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\".concat(current, \"\\\". This may indicate a circular fallback dependency.\"));\n    var _a = tslib.__read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = tslib.__rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = tslib.__assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === styleValueTypes.number || v === styleValueTypes.px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) {\n    return function (_bbox, _a) {\n        var transform = _a.transform;\n        if (transform === \"none\" || !transform)\n            return 0;\n        var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n        if (matrix3d) {\n            return getPosFromMatrix(matrix3d[1], pos3);\n        }\n        else {\n            var matrix = transform.match(/^matrix\\((.+)\\)$/);\n            if (matrix) {\n                return getPosFromMatrix(matrix[1], pos2);\n            }\n            else {\n                return 0;\n            }\n        }\n    };\n};\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a, _b) {\n        var x = _a.x;\n        var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? \"0\" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? \"0\" : _d;\n        return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);\n    },\n    height: function (_a, _b) {\n        var y = _a.y;\n        var _c = _b.paddingTop, paddingTop = _c === void 0 ? \"0\" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? \"0\" : _d;\n        return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display;\n    var origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach(function (key) {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = tslib.__assign({}, target);\n    transitionEnd = tslib.__assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var fromType = findDimensionValueType(from);\n        var to = target[key];\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            var fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (var i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    heyListen.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === styleValueTypes.px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var scrollY_1 = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = tslib.__read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (scrollY_1 !== null)\n            window.scrollTo({ top: scrollY_1 });\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle$1(domElement);\n            return ((isCSSVariable$1(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    build: function (element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nvar svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    }, readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    }, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps, build: function (_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nvar correctBorderRadius = {\n    correct: function (latest, node) {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (styleValueTypes.px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        var x = pixelsToPercent(latest, node.target.x);\n        var y = pixelsToPercent(latest, node.target.y);\n        return \"\".concat(x, \"% \").concat(y, \"%\");\n    },\n};\n\nvar varToken = \"_$css\";\nvar correctBoxShadow = {\n    correct: function (latest, _a) {\n        var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;\n        var original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        var containsCSSVariables = latest.includes(\"var(\");\n        var cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, function (match) {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        var shadow = styleValueTypes.complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        var template = styleValueTypes.complex.createTransformer(latest);\n        var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        var xScale = projectionDelta.x.scale * treeScale.x;\n        var yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        var averageScale = popmotion.mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        var output = template(shadow);\n        if (containsCSSVariables) {\n            var i_1 = 0;\n            output = output.replace(varToken, function () {\n                var cssVariable = cssVariables[i_1];\n                i_1++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nvar MeasureLayoutWithContext = /** @class */ (function (_super) {\n    tslib.__extends(MeasureLayoutWithContext, _super);\n    function MeasureLayoutWithContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    MeasureLayoutWithContext.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;\n        var projection = visualElement.projection;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", function () {\n                _this.safeToRemove();\n            });\n            projection.setOptions(tslib.__assign(tslib.__assign({}, projection.options), { onExitComplete: function () { return _this.safeToRemove(); } }));\n        }\n        globalProjectionState.hasEverUpdated = true;\n    };\n    MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n        var _this = this;\n        var _a = this.props, layoutDependency = _a.layoutDependency, visualElement = _a.visualElement, drag = _a.drag, isPresent = _a.isPresent;\n        var projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync__default[\"default\"].postRender(function () {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        _this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    };\n    MeasureLayoutWithContext.prototype.componentDidUpdate = function () {\n        var projection = this.props.visualElement.projection;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    };\n    MeasureLayoutWithContext.prototype.componentWillUnmount = function () {\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;\n        var projection = visualElement.projection;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    };\n    MeasureLayoutWithContext.prototype.safeToRemove = function () {\n        var safeToRemove = this.props.safeToRemove;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    };\n    MeasureLayoutWithContext.prototype.render = function () {\n        return null;\n    };\n    return MeasureLayoutWithContext;\n}(React__default[\"default\"].Component));\nfunction MeasureLayout(props) {\n    var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n    var layoutGroup = React.useContext(LayoutGroupContext);\n    return (React__default[\"default\"].createElement(MeasureLayoutWithContext, tslib.__assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: React.useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));\n}\nvar defaultScaleCorrectors = {\n    borderRadius: tslib.__assign(tslib.__assign({}, correctBorderRadius), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nvar layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nvar DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: function (ref, notify) { return addDomEvent(ref, \"resize\", notify); },\n    measureScroll: function () { return ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }); },\n    checkIsScrollRoot: function () { return true; },\n});\n\nvar rootProjectionNode = {\n    current: undefined,\n};\nvar HTMLProjectionNode = createProjectionNode({\n    measureScroll: function (instance) { return ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }); },\n    defaultParent: function () {\n        if (!rootProjectionNode.current) {\n            var documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: function (instance, value) {\n        instance.style.transform = value !== null && value !== void 0 ? value : \"none\";\n    },\n    checkIsScrollRoot: function (instance) {\n        return Boolean(window.getComputedStyle(instance).position === \"fixed\");\n    },\n});\n\nvar featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutFeatures);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nvar motion = /*@__PURE__*/ createMotionProxy(function (Component, config) {\n    return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode);\n});\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\n/**\n * @public\n */\nvar m = createMotionProxy(createDomMotionConfig);\n\nfunction useIsMounted() {\n    var isMounted = React.useRef(false);\n    useIsomorphicLayoutEffect(function () {\n        isMounted.current = true;\n        return function () {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nfunction useForceUpdate() {\n    var isMounted = useIsMounted();\n    var _a = tslib.__read(React.useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    var forceRender = React.useCallback(function () {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = React.useCallback(function () { return sync__default[\"default\"].postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useId();\n    var context = React.useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = tslib.__values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    React.useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React__namespace.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nvar getChildKey = function (child) { return child.key || \"\"; };\nfunction updateChildLookup(children, allChildren) {\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = tslib.__read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = React.useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = React.useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = React.useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = React.useRef(true);\n    useIsomorphicLayoutEffect(function () {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(function () {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map(function (child) { return (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = tslib.__spreadArray([], tslib.__read(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    if (env !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return React.cloneElement(child); })));\n};\n\n/**\n * @deprecated\n */\nvar DeprecatedLayoutGroupContext = React.createContext(null);\n\nvar notify = function (node) {\n    return !node.isLayoutDirty && node.willUpdate(false);\n};\nfunction nodeGroup() {\n    var nodes = new Set();\n    var subscriptions = new WeakMap();\n    var dirtyAll = function () { return nodes.forEach(notify); };\n    return {\n        add: function (node) {\n            nodes.add(node);\n            subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n        },\n        remove: function (node) {\n            var _a;\n            nodes.delete(node);\n            (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n            subscriptions.delete(node);\n            dirtyAll();\n        },\n        dirty: dirtyAll,\n    };\n}\n\nvar shouldInheritGroup = function (inherit) { return inherit === true; };\nvar shouldInheritId = function (inherit) {\n    return shouldInheritGroup(inherit === true) || inherit === \"id\";\n};\nvar LayoutGroup = function (_a) {\n    var _b, _c;\n    var children = _a.children, id = _a.id, inheritId = _a.inheritId, _d = _a.inherit, inherit = _d === void 0 ? true : _d;\n    // Maintain backwards-compatibility with inheritId until 7.0\n    if (inheritId !== undefined)\n        inherit = inheritId;\n    var layoutGroupContext = React.useContext(LayoutGroupContext);\n    var deprecatedLayoutGroupContext = React.useContext(DeprecatedLayoutGroupContext);\n    var _e = tslib.__read(useForceUpdate(), 2), forceRender = _e[0], key = _e[1];\n    var context = React.useRef(null);\n    var upstreamId = (_b = layoutGroupContext.id) !== null && _b !== void 0 ? _b : deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id: id,\n            group: shouldInheritGroup(inherit)\n                ? (_c = layoutGroupContext === null || layoutGroupContext === void 0 ? void 0 : layoutGroupContext.group) !== null && _c !== void 0 ? _c : nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    var memoizedContext = React.useMemo(function () { return (tslib.__assign(tslib.__assign({}, context.current), { forceRender: forceRender })); }, [key]);\n    return (React__namespace.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nvar id = 0;\nvar AnimateSharedLayout = function (_a) {\n    var children = _a.children;\n    React__namespace.useEffect(function () {\n        heyListen.warning(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n    }, []);\n    return (React__namespace.createElement(LayoutGroup, { id: useConstant(function () { return \"asl-\".concat(id++); }) }, children));\n};\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var children = _a.children, isValidProp = _a.isValidProp, config = tslib.__rest(_a, [\"children\", \"isValidProp\"]);\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = tslib.__assign(tslib.__assign({}, React.useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(function () { return config.isStatic; });\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    var context = React.useMemo(function () { return config; }, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion(_a) {\n    var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;\n    var _c = tslib.__read(React.useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1];\n    var loadedRenderer = React.useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        var renderer = features.renderer, loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    React.useEffect(function () {\n        if (isLazyBundle(features)) {\n            features().then(function (_a) {\n                var renderer = _a.renderer, loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict: strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nvar ReorderContext = React.createContext(null);\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    var index = order.findIndex(function (item) { return item.value === value; });\n    if (index === -1)\n        return order;\n    var nextOffset = velocity > 0 ? 1 : -1;\n    var nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    var item = order[index];\n    var nextLayout = nextItem.layout;\n    var nextItemCenter = popmotion.mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nfunction ReorderGroup(_a, externalRef) {\n    var children = _a.children, _b = _a.as, as = _b === void 0 ? \"ul\" : _b, _c = _a.axis, axis = _c === void 0 ? \"y\" : _c, onReorder = _a.onReorder, values = _a.values, props = tslib.__rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n    var Component = useConstant(function () { return motion(as); });\n    var order = [];\n    var isReordering = React.useRef(false);\n    heyListen.invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    var context = {\n        axis: axis,\n        registerItem: function (value, layout) {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex(function (entry) { return value === entry.value; }) === -1) {\n                order.push({ value: value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: function (id, offset, velocity) {\n            if (isReordering.current)\n                return;\n            var newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter(function (value) { return values.indexOf(value) !== -1; }));\n            }\n        },\n    };\n    React.useEffect(function () {\n        isReordering.current = false;\n    });\n    return (React__namespace.createElement(Component, tslib.__assign({}, props, { ref: externalRef }),\n        React__namespace.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nvar Group = React.forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = tslib.__read(React.useState(initial), 2), setLatest_1 = _a[1];\n        React.useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nvar isCustomValueType = function (v) {\n    return typeof v === \"object\" && v.mix;\n};\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\nfunction transform() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var useImmediate = !Array.isArray(args[0]);\n    var argOffset = useImmediate ? 0 : -1;\n    var inputValue = args[0 + argOffset];\n    var inputRange = args[1 + argOffset];\n    var outputRange = args[2 + argOffset];\n    var options = args[3 + argOffset];\n    var interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useOnChange(value, callback) {\n    React.useEffect(function () {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    React.useEffect(function () {\n        var subscriptions = values.map(function (value) { return value.onChange(handler); });\n        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };\n    });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    var value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    var updateValue = function () { return value.set(combineValues()); };\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, function () { return sync__default[\"default\"].update(updateValue, false, true); });\n    return value;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    var transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], function (_a) {\n            var _b = tslib.__read(_a, 1), latest = _b[0];\n            return transformer(latest);\n        });\n}\nfunction useListTransform(values, transformer) {\n    var latest = useConstant(function () { return []; });\n    return useCombineMotionValues(values, function () {\n        latest.length = 0;\n        var numValues = values.length;\n        for (var i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nfunction useDefaultMotionValue(value, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = 0; }\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem(_a, externalRef) {\n    var children = _a.children, style = _a.style, value = _a.value, _b = _a.as, as = _b === void 0 ? \"li\" : _b, onDrag = _a.onDrag, _c = _a.layout, layout = _c === void 0 ? true : _c, props = tslib.__rest(_a, [\"children\", \"style\", \"value\", \"as\", \"onDrag\", \"layout\"]);\n    var Component = useConstant(function () { return motion(as); });\n    var context = React.useContext(ReorderContext);\n    var point = {\n        x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),\n        y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y),\n    };\n    var zIndex = useTransform([point.x, point.y], function (_a) {\n        var _b = tslib.__read(_a, 2), latestX = _b[0], latestY = _b[1];\n        return latestX || latestY ? 1 : \"unset\";\n    });\n    var measuredLayout = React.useRef(null);\n    heyListen.invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;\n    React.useEffect(function () {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React__namespace.createElement(Component, tslib.__assign({ drag: axis }, props, { dragSnapToOrigin: true, style: tslib.__assign(tslib.__assign({}, style), { x: point.x, y: point.y, zIndex: zIndex }), layout: layout, onDrag: function (event, gesturePoint) {\n            var velocity = gesturePoint.velocity;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);\n        }, onLayoutMeasure: function (measured) {\n            measuredLayout.current = measured;\n        }, ref: externalRef }), children));\n}\nvar Item = React.forwardRef(ReorderItem);\n\nvar Reorder = {\n    Group: Group,\n    Item: Item,\n};\n\n/**\n * @public\n */\nvar domAnimation = tslib.__assign(tslib.__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\n/**\n * @public\n */\nvar domMax = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    var numFragments = fragments.length;\n    function buildValue() {\n        var output = \"\";\n        for (var i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            var value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config) {\n    if (config === void 0) { config = {}; }\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    var activeSpringAnimation = React.useRef(null);\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    React.useMemo(function () {\n        return value.attach(function (v, set) {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\n    return value;\n}\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    var velocity = useMotionValue(value.getVelocity());\n    React.useEffect(function () {\n        return value.velocityUpdateSubscribers.add(function (newVelocity) {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nfunction createScrollMotionValues() {\n    return {\n        scrollX: motionValue(0),\n        scrollY: motionValue(0),\n        scrollXProgress: motionValue(0),\n        scrollYProgress: motionValue(0),\n    };\n}\nfunction setProgress(offset, maxOffset, value) {\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\nfunction createScrollUpdater(values, getOffsets) {\n    var update = function () {\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\n        // Set absolute positions\n        values.scrollX.set(xOffset);\n        values.scrollY.set(yOffset);\n        // Set 0-1 progress\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n    };\n    update();\n    return update;\n}\n\nvar getElementScrollOffsets = function (element) { return function () {\n    return {\n        xOffset: element.scrollLeft,\n        yOffset: element.scrollTop,\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\n    };\n}; };\n/**\n * Returns MotionValues that update when the provided element scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * This element must be set to `overflow: scroll` on either or both axes to report scroll offset.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const ref = useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <div ref={ref}>\n *       <motion.div style={{ scaleX: scrollYProgress }} />\n *     </div>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction useElementScroll(ref) {\n    var values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(function () {\n        var element = ref.current;\n        heyListen.invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n        if (!element)\n            return;\n        var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n        var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues);\n        var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n        return function () {\n            scrollListener && scrollListener();\n            resizeListener && resizeListener();\n        };\n    }, []);\n    return values;\n}\n\nvar viewportScrollValues;\nfunction getViewportScrollOffsets() {\n    return {\n        xOffset: window.pageXOffset,\n        yOffset: window.pageYOffset,\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\n    };\n}\nvar hasListeners = false;\nfunction addEventListeners() {\n    hasListeners = true;\n    var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n    addDomEvent(window, \"scroll\", updateScrollValues);\n    addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\n * Returns MotionValues that update when the viewport scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\n * values as this breaks the browser's capability to accurately measure the page length.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\n * }\n * ```\n *\n * @public\n */\nfunction useViewportScroll() {\n    /**\n     * Lazy-initialise the viewport scroll values\n     */\n    if (!viewportScrollValues) {\n        viewportScrollValues = createScrollMotionValues();\n    }\n    useIsomorphicLayoutEffect(function () {\n        !hasListeners && addEventListeners();\n    }, []);\n    return viewportScrollValues;\n}\n\nvar getCurrentTime = typeof performance !== \"undefined\"\n    ? function () { return performance.now(); }\n    : function () { return Date.now(); };\nfunction useAnimationFrame(callback) {\n    var initialTimestamp = useConstant(getCurrentTime);\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    React.useEffect(function () {\n        if (isStatic)\n            return;\n        var provideTimeSinceStart = function (_a) {\n            var timestamp = _a.timestamp;\n            callback(timestamp - initialTimestamp);\n        };\n        sync__default[\"default\"].update(provideTimeSinceStart, true);\n        return function () { return sync.cancelSync.update(provideTimeSinceStart); };\n    }, [callback]);\n}\n\nfunction useTime() {\n    var time = useMotionValue(0);\n    useAnimationFrame(function (t) { return time.set(t); });\n    return time;\n}\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, tslib.__spreadArray([], tslib.__read(animation), false)).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    React.useEffect(controls.mount, []);\n    return controls;\n}\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle() {\n    var items = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        items[_i] = arguments[_i];\n    }\n    var index = React.useRef(0);\n    var _a = tslib.__read(React.useState(items[index.current]), 2), item = _a[0], setItem = _a[1];\n    var runCycle = React.useCallback(function (next) {\n        index.current =\n            typeof next !== \"number\"\n                ? popmotion.wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, tslib.__spreadArray([items.length], tslib.__read(items), false));\n    return [item, runCycle];\n}\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nvar DragControls = /** @class */ (function () {\n    function DragControls() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    DragControls.prototype.subscribe = function (controls) {\n        var _this = this;\n        this.componentControls.add(controls);\n        return function () { return _this.componentControls.delete(controls); };\n    };\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    DragControls.prototype.start = function (event, options) {\n        this.componentControls.forEach(function (controls) {\n            controls.start(event.nativeEvent || event, options);\n        });\n    };\n    return DragControls;\n}());\nvar createDragControls = function () { return new DragControls(); };\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nfunction useInstantLayoutTransition() {\n    return startTransition;\n}\nfunction startTransition(cb) {\n    if (!rootProjectionNode.current)\n        return;\n    rootProjectionNode.current.isUpdating = false;\n    rootProjectionNode.current.blockUpdate();\n    cb === null || cb === void 0 ? void 0 : cb();\n}\n\nfunction useInstantTransition() {\n    var _a = tslib.__read(useForceUpdate(), 2), forceUpdate = _a[0], forcedRenderCount = _a[1];\n    var startInstantLayoutTransition = useInstantLayoutTransition();\n    React.useEffect(function () {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync__default[\"default\"].postRender(function () {\n            return sync__default[\"default\"].postRender(function () { return (instantAnimationState.current = false); });\n        });\n    }, [forcedRenderCount]);\n    return function (callback) {\n        startInstantLayoutTransition(function () {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nfunction useResetProjection() {\n    var reset = React__namespace.useCallback(function () {\n        var root = rootProjectionNode.current;\n        if (!root)\n            return;\n        root.resetTree();\n    }, []);\n    return reset;\n}\n\nvar createObject = function () { return ({}); };\nvar stateVisualElement = visualElement({\n    build: function () { },\n    measureViewportBox: createBox,\n    resetTransform: function () { },\n    restoreTransform: function () { },\n    removeValueFromRenderState: function () { },\n    render: function () { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance: function (_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable: function (element, _a) {\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n});\nvar useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    var _a = tslib.__read(React.useState(initialState), 2), animationState = _a[0], setAnimationState = _a[1];\n    var visualState = useVisualState({}, false);\n    var element = useConstant(function () {\n        return stateVisualElement({ props: {}, visualState: visualState }, { initialState: initialState });\n    });\n    React.useEffect(function () {\n        element.mount({});\n        return element.unmount;\n    }, [element]);\n    React.useEffect(function () {\n        element.setProps({\n            onUpdate: function (v) {\n                setAnimationState(tslib.__assign({}, v));\n            },\n        });\n    }, [setAnimationState, element]);\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\n        return animateVisualElement(element, animationDefinition);\n    }; });\n    return [animationState, startAnimation];\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nvar maxScale = 100000;\nvar invertScale = function (scale) {\n    return scale > 0.001 ? 1 / scale : maxScale;\n};\nvar hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\nfunction useInvertedScale(scale) {\n    var parentScaleX = useMotionValue(1);\n    var parentScaleY = useMotionValue(1);\n    var visualElement = useVisualElementContext();\n    heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    var scaleX = useTransform(parentScaleX, invertScale);\n    var scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX: scaleX, scaleY: scaleY };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.LayoutGroup = LayoutGroup;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.Reorder = Reorder;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.animations = animations;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.createBox = createBox;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.filterProps = filterProps;\nexports.isBrowser = isBrowser;\nexports.isDragActive = isDragActive;\nexports.isMotionValue = isMotionValue;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.makeUseVisualState = makeUseVisualState;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useAnimationFrame = useAnimationFrame;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useForceUpdate = useForceUpdate;\nexports.useInstantLayoutTransition = useInstantLayoutTransition;\nexports.useInstantTransition = useInstantTransition;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useReducedMotionConfig = useReducedMotionConfig;\nexports.useResetProjection = useResetProjection;\nexports.useSpring = useSpring;\nexports.useTime = useTime;\nexports.useTransform = useTransform;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.useVisualElementContext = useVisualElementContext;\nexports.visualElement = visualElement;\nexports.wrapHandler = wrapHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}