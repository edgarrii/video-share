{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport baseCreateApi from \"./apis/baseCreateApi\";\nimport rootReducer from \"./rootReducer\";\nconst reducers = combineReducers({\n  [baseCreateApi.reducerPath]: baseCreateApi.reducer,\n  ...rootReducer\n});\nexport const store = configureStore({\n  reducer: reducers,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(baseCreateApi.middleware)\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"names":["configureStore","combineReducers","baseCreateApi","rootReducer","reducers","reducerPath","reducer","store","middleware","getDefaultMiddleware","concat"],"sources":["/home/siarhei/Projects/Paus.tv/Paus.tv_test.assigment_ui/video-share/src/redux/store.ts"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n\nimport baseCreateApi from \"./apis/baseCreateApi\";\nimport rootReducer from \"./rootReducer\";\n\nconst reducers = combineReducers({\n  [baseCreateApi.reducerPath]: baseCreateApi.reducer,\n  ...rootReducer,\n});\n\nexport const store = configureStore({\n  reducer: reducers,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(baseCreateApi.middleware),\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AAEA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,QAAQ,GAAGH,eAAe,CAAC;EAC/B,CAACC,aAAa,CAACG,WAAf,GAA6BH,aAAa,CAACI,OADZ;EAE/B,GAAGH;AAF4B,CAAD,CAAhC;AAKA,OAAO,MAAMI,KAAK,GAAGP,cAAc,CAAC;EAClCM,OAAO,EAAEF,QADyB;EAElCI,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BR,aAAa,CAACM,UAA5C;AAHgC,CAAD,CAA5B,C,CAMP"},"metadata":{},"sourceType":"module"}