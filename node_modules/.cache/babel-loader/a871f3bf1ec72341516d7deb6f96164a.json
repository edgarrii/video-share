{"ast":null,"code":"var _jsxFileName = \"/home/siarhei/Projects/Paus.tv/Paus.tv_test.assigment_ui/video-share/src/pages/LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@material-tailwind/react\";\nimport \"../styles.css\";\nimport { ethers } from \"ethers\";\nimport { paths } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    setAddress\n  } = _ref;\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const navigate = useNavigate();\n\n  const requestAccount = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await setWalletAddress(accounts[0]);\n        await setAddress(accounts[0]);\n      } catch (error) {\n        console.log(\"Error connecting...\", error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (walletAddress) {\n      navigate(paths.Home);\n    }\n  }, [walletAddress]);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== undefined) {\n      await requestAccount(); // to interact with smart contracts\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-screen justify-center items-center p-2 bg-gradient-to-r from-sky-500 to-purple-500 main\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"px-5 py-4 text-white hover:scale-105 hover:text-black/80 ease-in duration-300 animate-bounce\",\n      variant: \"text\",\n      size: \"lg\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"JfE7kjBQ/kk1P9EFc6J/A61Qca8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Button","ethers","paths","LoginPage","setAddress","walletAddress","setWalletAddress","navigate","requestAccount","window","ethereum","accounts","request","method","error","console","log","Home","connectWallet","undefined","provider","providers","Web3Provider"],"sources":["/home/siarhei/Projects/Paus.tv/Paus.tv_test.assigment_ui/video-share/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Button } from \"@material-tailwind/react\";\n\nimport \"../styles.css\";\nimport { ethers } from \"ethers\";\nimport { paths } from \"../constants\";\n\nconst LoginPage: React.FC<{ setAddress(address: string): void }> = ({\n  setAddress,\n}) => {\n  const [walletAddress, setWalletAddress] = useState<string>(\"\");\n  const navigate = useNavigate();\n\n  const requestAccount = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n\n        await setWalletAddress(accounts[0]);\n        await setAddress(accounts[0]);\n      } catch (error) {\n        console.log(\"Error connecting...\", error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (walletAddress) {\n      navigate(paths.Home);\n    }\n  }, [walletAddress]);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== undefined) {\n      await requestAccount();\n\n      // to interact with smart contracts\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col w-screen justify-center items-center p-2 bg-gradient-to-r from-sky-500 to-purple-500 main\">\n      <Button\n        onClick={connectWallet}\n        className=\"px-5 py-4 text-white hover:scale-105 hover:text-black/80 ease-in duration-300 animate-bounce\"\n        variant=\"text\"\n        size=\"lg\"\n      >\n        Connect Wallet\n      </Button>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,OAAO,eAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;;;AAEA,MAAMC,SAA0D,GAAG,QAE7D;EAAA;;EAAA,IAF8D;IAClEC;EADkE,CAE9D;EACJ,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAS,EAAT,CAAlD;EACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;;EAEA,MAAMS,cAAc,GAAG,YAAY;IACjC,IAAIC,MAAM,CAACC,QAAX,EAAqB;MACnB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;UAC7CC,MAAM,EAAE;QADqC,CAAxB,CAAvB;QAIA,MAAMP,gBAAgB,CAACK,QAAQ,CAAC,CAAD,CAAT,CAAtB;QACA,MAAMP,UAAU,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAhB;MACD,CAPD,CAOE,OAAOG,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;MACD;IACF;EACF,CAbD;;EAeAjB,SAAS,CAAC,MAAM;IACd,IAAIQ,aAAJ,EAAmB;MACjBE,QAAQ,CAACL,KAAK,CAACe,IAAP,CAAR;IACD;EACF,CAJQ,EAIN,CAACZ,aAAD,CAJM,CAAT;;EAMA,MAAMa,aAAa,GAAG,YAAY;IAChC,IAAI,OAAOT,MAAM,CAACC,QAAd,KAA2BS,SAA/B,EAA0C;MACxC,MAAMX,cAAc,EAApB,CADwC,CAGxC;;MACA,MAAMY,QAAQ,GAAG,IAAInB,MAAM,CAACoB,SAAP,CAAiBC,YAArB,CAAkCb,MAAM,CAACC,QAAzC,CAAjB;IACD;EACF,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,yGAAf;IAAA,uBACE,QAAC,MAAD;MACE,OAAO,EAAEQ,aADX;MAEE,SAAS,EAAC,8FAFZ;MAGE,OAAO,EAAC,MAHV;MAIE,IAAI,EAAC,IAJP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAhDD;;GAAMf,S;UAIaJ,W;;;KAJbI,S;AAkDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}